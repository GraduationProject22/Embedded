
testUARTIT.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002a8c  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000028  08002b98  08002b98  00012b98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002bc0  08002bc0  0002024c  2**0
                  CONTENTS
  4 .ARM          00000000  08002bc0  08002bc0  0002024c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002bc0  08002bc0  0002024c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002bc0  08002bc0  00012bc0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002bc4  08002bc4  00012bc4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000024c  20000000  08002bc8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000017c  2000024c  08002e14  0002024c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003c8  08002e14  000203c8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002024c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00006171  00000000  00000000  00020275  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000153f  00000000  00000000  000263e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000006b8  00000000  00000000  00027928  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000640  00000000  00000000  00027fe0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00015f35  00000000  00000000  00028620  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000784c  00000000  00000000  0003e555  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0007e553  00000000  00000000  00045da1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000c42f4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001a14  00000000  00000000  000c4348  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	2000024c 	.word	0x2000024c
 8000128:	00000000 	.word	0x00000000
 800012c:	08002b80 	.word	0x08002b80

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000250 	.word	0x20000250
 8000148:	08002b80 	.word	0x08002b80

0800014c <calculateValue>:
/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */


uint8_t calculateValue(int indexOfRXBuffer)
{
 800014c:	b480      	push	{r7}
 800014e:	b085      	sub	sp, #20
 8000150:	af00      	add	r7, sp, #0
 8000152:	6078      	str	r0, [r7, #4]
	long power = 1;
 8000154:	2301      	movs	r3, #1
 8000156:	60fb      	str	r3, [r7, #12]
    uint8_t result = 0;
 8000158:	2300      	movs	r3, #0
 800015a:	72fb      	strb	r3, [r7, #11]
	while(bufferRX[indexOfRXBuffer] != '=' && bufferRX[indexOfRXBuffer] != '+' && bufferRX[indexOfRXBuffer] != '-')
 800015c:	e016      	b.n	800018c <calculateValue+0x40>
	{
		result += (bufferRX[indexOfRXBuffer] - '0') * power;
 800015e:	4a17      	ldr	r2, [pc, #92]	; (80001bc <calculateValue+0x70>)
 8000160:	687b      	ldr	r3, [r7, #4]
 8000162:	4413      	add	r3, r2
 8000164:	781b      	ldrb	r3, [r3, #0]
 8000166:	3b30      	subs	r3, #48	; 0x30
 8000168:	b2db      	uxtb	r3, r3
 800016a:	68fa      	ldr	r2, [r7, #12]
 800016c:	b2d2      	uxtb	r2, r2
 800016e:	fb02 f303 	mul.w	r3, r2, r3
 8000172:	b2da      	uxtb	r2, r3
 8000174:	7afb      	ldrb	r3, [r7, #11]
 8000176:	4413      	add	r3, r2
 8000178:	72fb      	strb	r3, [r7, #11]
		power *= 10;
 800017a:	68fa      	ldr	r2, [r7, #12]
 800017c:	4613      	mov	r3, r2
 800017e:	009b      	lsls	r3, r3, #2
 8000180:	4413      	add	r3, r2
 8000182:	005b      	lsls	r3, r3, #1
 8000184:	60fb      	str	r3, [r7, #12]
		indexOfRXBuffer--;
 8000186:	687b      	ldr	r3, [r7, #4]
 8000188:	3b01      	subs	r3, #1
 800018a:	607b      	str	r3, [r7, #4]
	while(bufferRX[indexOfRXBuffer] != '=' && bufferRX[indexOfRXBuffer] != '+' && bufferRX[indexOfRXBuffer] != '-')
 800018c:	4a0b      	ldr	r2, [pc, #44]	; (80001bc <calculateValue+0x70>)
 800018e:	687b      	ldr	r3, [r7, #4]
 8000190:	4413      	add	r3, r2
 8000192:	781b      	ldrb	r3, [r3, #0]
 8000194:	2b3d      	cmp	r3, #61	; 0x3d
 8000196:	d00b      	beq.n	80001b0 <calculateValue+0x64>
 8000198:	4a08      	ldr	r2, [pc, #32]	; (80001bc <calculateValue+0x70>)
 800019a:	687b      	ldr	r3, [r7, #4]
 800019c:	4413      	add	r3, r2
 800019e:	781b      	ldrb	r3, [r3, #0]
 80001a0:	2b2b      	cmp	r3, #43	; 0x2b
 80001a2:	d005      	beq.n	80001b0 <calculateValue+0x64>
 80001a4:	4a05      	ldr	r2, [pc, #20]	; (80001bc <calculateValue+0x70>)
 80001a6:	687b      	ldr	r3, [r7, #4]
 80001a8:	4413      	add	r3, r2
 80001aa:	781b      	ldrb	r3, [r3, #0]
 80001ac:	2b2d      	cmp	r3, #45	; 0x2d
 80001ae:	d1d6      	bne.n	800015e <calculateValue+0x12>
	}
	return result;
 80001b0:	7afb      	ldrb	r3, [r7, #11]
}
 80001b2:	4618      	mov	r0, r3
 80001b4:	3714      	adds	r7, #20
 80001b6:	46bd      	mov	sp, r7
 80001b8:	bc80      	pop	{r7}
 80001ba:	4770      	bx	lr
 80001bc:	20000390 	.word	0x20000390

080001c0 <takeAbsoulute>:

uint8_t takeAbsoulute(int8_t value)
{
 80001c0:	b480      	push	{r7}
 80001c2:	b083      	sub	sp, #12
 80001c4:	af00      	add	r7, sp, #0
 80001c6:	4603      	mov	r3, r0
 80001c8:	71fb      	strb	r3, [r7, #7]
	if(value < 0) return value*-1;
 80001ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001ce:	2b00      	cmp	r3, #0
 80001d0:	da03      	bge.n	80001da <takeAbsoulute+0x1a>
 80001d2:	79fb      	ldrb	r3, [r7, #7]
 80001d4:	425b      	negs	r3, r3
 80001d6:	b2db      	uxtb	r3, r3
 80001d8:	e000      	b.n	80001dc <takeAbsoulute+0x1c>
	return value;
 80001da:	79fb      	ldrb	r3, [r7, #7]
}
 80001dc:	4618      	mov	r0, r3
 80001de:	370c      	adds	r7, #12
 80001e0:	46bd      	mov	sp, r7
 80001e2:	bc80      	pop	{r7}
 80001e4:	4770      	bx	lr
	...

080001e8 <convertIntToChars>:

void convertIntToChars(uint8_t maxDigit, uint8_t value)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b085      	sub	sp, #20
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	4603      	mov	r3, r0
 80001f0:	460a      	mov	r2, r1
 80001f2:	71fb      	strb	r3, [r7, #7]
 80001f4:	4613      	mov	r3, r2
 80001f6:	71bb      	strb	r3, [r7, #6]
	long power = 1;
 80001f8:	2301      	movs	r3, #1
 80001fa:	60fb      	str	r3, [r7, #12]
	int index;
	for(index = 1; index < maxDigit; index++) power *= 10;
 80001fc:	2301      	movs	r3, #1
 80001fe:	60bb      	str	r3, [r7, #8]
 8000200:	e008      	b.n	8000214 <convertIntToChars+0x2c>
 8000202:	68fa      	ldr	r2, [r7, #12]
 8000204:	4613      	mov	r3, r2
 8000206:	009b      	lsls	r3, r3, #2
 8000208:	4413      	add	r3, r2
 800020a:	005b      	lsls	r3, r3, #1
 800020c:	60fb      	str	r3, [r7, #12]
 800020e:	68bb      	ldr	r3, [r7, #8]
 8000210:	3301      	adds	r3, #1
 8000212:	60bb      	str	r3, [r7, #8]
 8000214:	79fb      	ldrb	r3, [r7, #7]
 8000216:	68ba      	ldr	r2, [r7, #8]
 8000218:	429a      	cmp	r2, r3
 800021a:	dbf2      	blt.n	8000202 <convertIntToChars+0x1a>

	for(index = maxDigit; index > 0; index --)
 800021c:	79fb      	ldrb	r3, [r7, #7]
 800021e:	60bb      	str	r3, [r7, #8]
 8000220:	e028      	b.n	8000274 <convertIntToChars+0x8c>
	{
		bufferTX[indexOfTXBuffer] = (value/power) + '0';
 8000222:	79ba      	ldrb	r2, [r7, #6]
 8000224:	68fb      	ldr	r3, [r7, #12]
 8000226:	fb92 f3f3 	sdiv	r3, r2, r3
 800022a:	b2da      	uxtb	r2, r3
 800022c:	4b16      	ldr	r3, [pc, #88]	; (8000288 <convertIntToChars+0xa0>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	3230      	adds	r2, #48	; 0x30
 8000232:	b2d1      	uxtb	r1, r2
 8000234:	4a15      	ldr	r2, [pc, #84]	; (800028c <convertIntToChars+0xa4>)
 8000236:	54d1      	strb	r1, [r2, r3]
		value -= (bufferTX[indexOfTXBuffer] - '0') * power;
 8000238:	4b13      	ldr	r3, [pc, #76]	; (8000288 <convertIntToChars+0xa0>)
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	4a13      	ldr	r2, [pc, #76]	; (800028c <convertIntToChars+0xa4>)
 800023e:	5cd3      	ldrb	r3, [r2, r3]
 8000240:	3b30      	subs	r3, #48	; 0x30
 8000242:	b2db      	uxtb	r3, r3
 8000244:	68fa      	ldr	r2, [r7, #12]
 8000246:	b2d2      	uxtb	r2, r2
 8000248:	fb02 f303 	mul.w	r3, r2, r3
 800024c:	b2db      	uxtb	r3, r3
 800024e:	79ba      	ldrb	r2, [r7, #6]
 8000250:	1ad3      	subs	r3, r2, r3
 8000252:	71bb      	strb	r3, [r7, #6]
		indexOfTXBuffer++;
 8000254:	4b0c      	ldr	r3, [pc, #48]	; (8000288 <convertIntToChars+0xa0>)
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	3301      	adds	r3, #1
 800025a:	4a0b      	ldr	r2, [pc, #44]	; (8000288 <convertIntToChars+0xa0>)
 800025c:	6013      	str	r3, [r2, #0]
		power /= 10;
 800025e:	68fb      	ldr	r3, [r7, #12]
 8000260:	4a0b      	ldr	r2, [pc, #44]	; (8000290 <convertIntToChars+0xa8>)
 8000262:	fb82 1203 	smull	r1, r2, r2, r3
 8000266:	1092      	asrs	r2, r2, #2
 8000268:	17db      	asrs	r3, r3, #31
 800026a:	1ad3      	subs	r3, r2, r3
 800026c:	60fb      	str	r3, [r7, #12]
	for(index = maxDigit; index > 0; index --)
 800026e:	68bb      	ldr	r3, [r7, #8]
 8000270:	3b01      	subs	r3, #1
 8000272:	60bb      	str	r3, [r7, #8]
 8000274:	68bb      	ldr	r3, [r7, #8]
 8000276:	2b00      	cmp	r3, #0
 8000278:	dcd3      	bgt.n	8000222 <convertIntToChars+0x3a>
	}
}
 800027a:	bf00      	nop
 800027c:	bf00      	nop
 800027e:	3714      	adds	r7, #20
 8000280:	46bd      	mov	sp, r7
 8000282:	bc80      	pop	{r7}
 8000284:	4770      	bx	lr
 8000286:	bf00      	nop
 8000288:	20000270 	.word	0x20000270
 800028c:	20000208 	.word	0x20000208
 8000290:	66666667 	.word	0x66666667

08000294 <indicatePosition>:

void indicatePosition()
{
 8000294:	b480      	push	{r7}
 8000296:	af00      	add	r7, sp, #0
	if(xAxis > 0  && yAxis > 0) positionIndication = NORTH_EAST;
 8000298:	4b35      	ldr	r3, [pc, #212]	; (8000370 <indicatePosition+0xdc>)
 800029a:	f993 3000 	ldrsb.w	r3, [r3]
 800029e:	2b00      	cmp	r3, #0
 80002a0:	dd07      	ble.n	80002b2 <indicatePosition+0x1e>
 80002a2:	4b34      	ldr	r3, [pc, #208]	; (8000374 <indicatePosition+0xe0>)
 80002a4:	f993 3000 	ldrsb.w	r3, [r3]
 80002a8:	2b00      	cmp	r3, #0
 80002aa:	dd02      	ble.n	80002b2 <indicatePosition+0x1e>
 80002ac:	4b32      	ldr	r3, [pc, #200]	; (8000378 <indicatePosition+0xe4>)
 80002ae:	2205      	movs	r2, #5
 80002b0:	701a      	strb	r2, [r3, #0]
	if(xAxis > 0  && yAxis < 0) positionIndication = SOUTH_EAST;
 80002b2:	4b2f      	ldr	r3, [pc, #188]	; (8000370 <indicatePosition+0xdc>)
 80002b4:	f993 3000 	ldrsb.w	r3, [r3]
 80002b8:	2b00      	cmp	r3, #0
 80002ba:	dd07      	ble.n	80002cc <indicatePosition+0x38>
 80002bc:	4b2d      	ldr	r3, [pc, #180]	; (8000374 <indicatePosition+0xe0>)
 80002be:	f993 3000 	ldrsb.w	r3, [r3]
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	da02      	bge.n	80002cc <indicatePosition+0x38>
 80002c6:	4b2c      	ldr	r3, [pc, #176]	; (8000378 <indicatePosition+0xe4>)
 80002c8:	2207      	movs	r2, #7
 80002ca:	701a      	strb	r2, [r3, #0]
	if(xAxis < 0  && yAxis > 0) positionIndication = NORTH_WEST;
 80002cc:	4b28      	ldr	r3, [pc, #160]	; (8000370 <indicatePosition+0xdc>)
 80002ce:	f993 3000 	ldrsb.w	r3, [r3]
 80002d2:	2b00      	cmp	r3, #0
 80002d4:	da07      	bge.n	80002e6 <indicatePosition+0x52>
 80002d6:	4b27      	ldr	r3, [pc, #156]	; (8000374 <indicatePosition+0xe0>)
 80002d8:	f993 3000 	ldrsb.w	r3, [r3]
 80002dc:	2b00      	cmp	r3, #0
 80002de:	dd02      	ble.n	80002e6 <indicatePosition+0x52>
 80002e0:	4b25      	ldr	r3, [pc, #148]	; (8000378 <indicatePosition+0xe4>)
 80002e2:	2206      	movs	r2, #6
 80002e4:	701a      	strb	r2, [r3, #0]
	if(xAxis < 0  && yAxis < 0) positionIndication = SOUTH_WEST;
 80002e6:	4b22      	ldr	r3, [pc, #136]	; (8000370 <indicatePosition+0xdc>)
 80002e8:	f993 3000 	ldrsb.w	r3, [r3]
 80002ec:	2b00      	cmp	r3, #0
 80002ee:	da07      	bge.n	8000300 <indicatePosition+0x6c>
 80002f0:	4b20      	ldr	r3, [pc, #128]	; (8000374 <indicatePosition+0xe0>)
 80002f2:	f993 3000 	ldrsb.w	r3, [r3]
 80002f6:	2b00      	cmp	r3, #0
 80002f8:	da02      	bge.n	8000300 <indicatePosition+0x6c>
 80002fa:	4b1f      	ldr	r3, [pc, #124]	; (8000378 <indicatePosition+0xe4>)
 80002fc:	2208      	movs	r2, #8
 80002fe:	701a      	strb	r2, [r3, #0]
	if(xAxis == 0 && yAxis > 0) positionIndication = NORTH;
 8000300:	4b1b      	ldr	r3, [pc, #108]	; (8000370 <indicatePosition+0xdc>)
 8000302:	f993 3000 	ldrsb.w	r3, [r3]
 8000306:	2b00      	cmp	r3, #0
 8000308:	d107      	bne.n	800031a <indicatePosition+0x86>
 800030a:	4b1a      	ldr	r3, [pc, #104]	; (8000374 <indicatePosition+0xe0>)
 800030c:	f993 3000 	ldrsb.w	r3, [r3]
 8000310:	2b00      	cmp	r3, #0
 8000312:	dd02      	ble.n	800031a <indicatePosition+0x86>
 8000314:	4b18      	ldr	r3, [pc, #96]	; (8000378 <indicatePosition+0xe4>)
 8000316:	2203      	movs	r2, #3
 8000318:	701a      	strb	r2, [r3, #0]
	if(xAxis == 0 && yAxis < 0) positionIndication = SOUTH;
 800031a:	4b15      	ldr	r3, [pc, #84]	; (8000370 <indicatePosition+0xdc>)
 800031c:	f993 3000 	ldrsb.w	r3, [r3]
 8000320:	2b00      	cmp	r3, #0
 8000322:	d107      	bne.n	8000334 <indicatePosition+0xa0>
 8000324:	4b13      	ldr	r3, [pc, #76]	; (8000374 <indicatePosition+0xe0>)
 8000326:	f993 3000 	ldrsb.w	r3, [r3]
 800032a:	2b00      	cmp	r3, #0
 800032c:	da02      	bge.n	8000334 <indicatePosition+0xa0>
 800032e:	4b12      	ldr	r3, [pc, #72]	; (8000378 <indicatePosition+0xe4>)
 8000330:	2204      	movs	r2, #4
 8000332:	701a      	strb	r2, [r3, #0]
	if(xAxis > 0  && yAxis == 0) positionIndication = EAST;
 8000334:	4b0e      	ldr	r3, [pc, #56]	; (8000370 <indicatePosition+0xdc>)
 8000336:	f993 3000 	ldrsb.w	r3, [r3]
 800033a:	2b00      	cmp	r3, #0
 800033c:	dd07      	ble.n	800034e <indicatePosition+0xba>
 800033e:	4b0d      	ldr	r3, [pc, #52]	; (8000374 <indicatePosition+0xe0>)
 8000340:	f993 3000 	ldrsb.w	r3, [r3]
 8000344:	2b00      	cmp	r3, #0
 8000346:	d102      	bne.n	800034e <indicatePosition+0xba>
 8000348:	4b0b      	ldr	r3, [pc, #44]	; (8000378 <indicatePosition+0xe4>)
 800034a:	2201      	movs	r2, #1
 800034c:	701a      	strb	r2, [r3, #0]
	if(xAxis < 0  && yAxis == 0) positionIndication = WEST;
 800034e:	4b08      	ldr	r3, [pc, #32]	; (8000370 <indicatePosition+0xdc>)
 8000350:	f993 3000 	ldrsb.w	r3, [r3]
 8000354:	2b00      	cmp	r3, #0
 8000356:	da07      	bge.n	8000368 <indicatePosition+0xd4>
 8000358:	4b06      	ldr	r3, [pc, #24]	; (8000374 <indicatePosition+0xe0>)
 800035a:	f993 3000 	ldrsb.w	r3, [r3]
 800035e:	2b00      	cmp	r3, #0
 8000360:	d102      	bne.n	8000368 <indicatePosition+0xd4>
 8000362:	4b05      	ldr	r3, [pc, #20]	; (8000378 <indicatePosition+0xe4>)
 8000364:	2202      	movs	r2, #2
 8000366:	701a      	strb	r2, [r3, #0]
}
 8000368:	bf00      	nop
 800036a:	46bd      	mov	sp, r7
 800036c:	bc80      	pop	{r7}
 800036e:	4770      	bx	lr
 8000370:	2000027a 	.word	0x2000027a
 8000374:	2000027b 	.word	0x2000027b
 8000378:	2000027f 	.word	0x2000027f

0800037c <sendWarning>:

void sendWarning()
{
 800037c:	b480      	push	{r7}
 800037e:	af00      	add	r7, sp, #0
	if(positionIndication == NORTH_EAST)
 8000380:	4b7f      	ldr	r3, [pc, #508]	; (8000580 <sendWarning+0x204>)
 8000382:	781b      	ldrb	r3, [r3, #0]
 8000384:	2b05      	cmp	r3, #5
 8000386:	d160      	bne.n	800044a <sendWarning+0xce>
	{
		if(doorSignCheck == LEFT_DOOR)
 8000388:	4b7e      	ldr	r3, [pc, #504]	; (8000584 <sendWarning+0x208>)
 800038a:	781b      	ldrb	r3, [r3, #0]
 800038c:	2b01      	cmp	r3, #1
 800038e:	d119      	bne.n	80003c4 <sendWarning+0x48>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000390:	4b7d      	ldr	r3, [pc, #500]	; (8000588 <sendWarning+0x20c>)
 8000392:	2200      	movs	r2, #0
 8000394:	601a      	str	r2, [r3, #0]
 8000396:	e011      	b.n	80003bc <sendWarning+0x40>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = leftDoorWarningMsg[globalIndex];
 8000398:	4b7b      	ldr	r3, [pc, #492]	; (8000588 <sendWarning+0x20c>)
 800039a:	681a      	ldr	r2, [r3, #0]
 800039c:	4b7b      	ldr	r3, [pc, #492]	; (800058c <sendWarning+0x210>)
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	497b      	ldr	r1, [pc, #492]	; (8000590 <sendWarning+0x214>)
 80003a2:	5c89      	ldrb	r1, [r1, r2]
 80003a4:	4a7b      	ldr	r2, [pc, #492]	; (8000594 <sendWarning+0x218>)
 80003a6:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 80003a8:	4b78      	ldr	r3, [pc, #480]	; (800058c <sendWarning+0x210>)
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	3301      	adds	r3, #1
 80003ae:	4a77      	ldr	r2, [pc, #476]	; (800058c <sendWarning+0x210>)
 80003b0:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80003b2:	4b75      	ldr	r3, [pc, #468]	; (8000588 <sendWarning+0x20c>)
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	3301      	adds	r3, #1
 80003b8:	4a73      	ldr	r2, [pc, #460]	; (8000588 <sendWarning+0x20c>)
 80003ba:	6013      	str	r3, [r2, #0]
 80003bc:	4b72      	ldr	r3, [pc, #456]	; (8000588 <sendWarning+0x20c>)
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	2b31      	cmp	r3, #49	; 0x31
 80003c2:	dde9      	ble.n	8000398 <sendWarning+0x1c>
			}
		if(leftSignCheck == 1) //HAL_UART_Transmit(&huart1, leftSignWarningMsg, TX_SIZE, 0xFF);
 80003c4:	4b74      	ldr	r3, [pc, #464]	; (8000598 <sendWarning+0x21c>)
 80003c6:	781b      	ldrb	r3, [r3, #0]
 80003c8:	2b01      	cmp	r3, #1
 80003ca:	d119      	bne.n	8000400 <sendWarning+0x84>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80003cc:	4b6e      	ldr	r3, [pc, #440]	; (8000588 <sendWarning+0x20c>)
 80003ce:	2200      	movs	r2, #0
 80003d0:	601a      	str	r2, [r3, #0]
 80003d2:	e011      	b.n	80003f8 <sendWarning+0x7c>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = leftSignWarningMsg[globalIndex];
 80003d4:	4b6c      	ldr	r3, [pc, #432]	; (8000588 <sendWarning+0x20c>)
 80003d6:	681a      	ldr	r2, [r3, #0]
 80003d8:	4b6c      	ldr	r3, [pc, #432]	; (800058c <sendWarning+0x210>)
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	496f      	ldr	r1, [pc, #444]	; (800059c <sendWarning+0x220>)
 80003de:	5c89      	ldrb	r1, [r1, r2]
 80003e0:	4a6c      	ldr	r2, [pc, #432]	; (8000594 <sendWarning+0x218>)
 80003e2:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 80003e4:	4b69      	ldr	r3, [pc, #420]	; (800058c <sendWarning+0x210>)
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	3301      	adds	r3, #1
 80003ea:	4a68      	ldr	r2, [pc, #416]	; (800058c <sendWarning+0x210>)
 80003ec:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80003ee:	4b66      	ldr	r3, [pc, #408]	; (8000588 <sendWarning+0x20c>)
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	3301      	adds	r3, #1
 80003f4:	4a64      	ldr	r2, [pc, #400]	; (8000588 <sendWarning+0x20c>)
 80003f6:	6013      	str	r3, [r2, #0]
 80003f8:	4b63      	ldr	r3, [pc, #396]	; (8000588 <sendWarning+0x20c>)
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	2b31      	cmp	r3, #49	; 0x31
 80003fe:	dde9      	ble.n	80003d4 <sendWarning+0x58>
			}
		// Todo: Calculate the distances and compare.
		if(speed < carSpeed && accerlation < 0) //HAL_UART_Transmit(&huart1, reduceSpeedWarningMsg, TX_SIZE, 0xFF);
 8000400:	4b67      	ldr	r3, [pc, #412]	; (80005a0 <sendWarning+0x224>)
 8000402:	781a      	ldrb	r2, [r3, #0]
 8000404:	4b67      	ldr	r3, [pc, #412]	; (80005a4 <sendWarning+0x228>)
 8000406:	781b      	ldrb	r3, [r3, #0]
 8000408:	429a      	cmp	r2, r3
 800040a:	d21e      	bcs.n	800044a <sendWarning+0xce>
 800040c:	4b66      	ldr	r3, [pc, #408]	; (80005a8 <sendWarning+0x22c>)
 800040e:	f993 3000 	ldrsb.w	r3, [r3]
 8000412:	2b00      	cmp	r3, #0
 8000414:	da19      	bge.n	800044a <sendWarning+0xce>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000416:	4b5c      	ldr	r3, [pc, #368]	; (8000588 <sendWarning+0x20c>)
 8000418:	2200      	movs	r2, #0
 800041a:	601a      	str	r2, [r3, #0]
 800041c:	e011      	b.n	8000442 <sendWarning+0xc6>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = reduceSpeedWarningMsg[globalIndex];
 800041e:	4b5a      	ldr	r3, [pc, #360]	; (8000588 <sendWarning+0x20c>)
 8000420:	681a      	ldr	r2, [r3, #0]
 8000422:	4b5a      	ldr	r3, [pc, #360]	; (800058c <sendWarning+0x210>)
 8000424:	681b      	ldr	r3, [r3, #0]
 8000426:	4961      	ldr	r1, [pc, #388]	; (80005ac <sendWarning+0x230>)
 8000428:	5c89      	ldrb	r1, [r1, r2]
 800042a:	4a5a      	ldr	r2, [pc, #360]	; (8000594 <sendWarning+0x218>)
 800042c:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 800042e:	4b57      	ldr	r3, [pc, #348]	; (800058c <sendWarning+0x210>)
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	3301      	adds	r3, #1
 8000434:	4a55      	ldr	r2, [pc, #340]	; (800058c <sendWarning+0x210>)
 8000436:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000438:	4b53      	ldr	r3, [pc, #332]	; (8000588 <sendWarning+0x20c>)
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	3301      	adds	r3, #1
 800043e:	4a52      	ldr	r2, [pc, #328]	; (8000588 <sendWarning+0x20c>)
 8000440:	6013      	str	r3, [r2, #0]
 8000442:	4b51      	ldr	r3, [pc, #324]	; (8000588 <sendWarning+0x20c>)
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	2b31      	cmp	r3, #49	; 0x31
 8000448:	dde9      	ble.n	800041e <sendWarning+0xa2>
			}
	}
	if(positionIndication == NORTH_WEST)
 800044a:	4b4d      	ldr	r3, [pc, #308]	; (8000580 <sendWarning+0x204>)
 800044c:	781b      	ldrb	r3, [r3, #0]
 800044e:	2b06      	cmp	r3, #6
 8000450:	d160      	bne.n	8000514 <sendWarning+0x198>
	{
		if(rightSignCheck == 1) //HAL_UART_Transmit(&huart1, rightSignWarningMsg, TX_SIZE, 0xFF);
 8000452:	4b57      	ldr	r3, [pc, #348]	; (80005b0 <sendWarning+0x234>)
 8000454:	781b      	ldrb	r3, [r3, #0]
 8000456:	2b01      	cmp	r3, #1
 8000458:	d119      	bne.n	800048e <sendWarning+0x112>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 800045a:	4b4b      	ldr	r3, [pc, #300]	; (8000588 <sendWarning+0x20c>)
 800045c:	2200      	movs	r2, #0
 800045e:	601a      	str	r2, [r3, #0]
 8000460:	e011      	b.n	8000486 <sendWarning+0x10a>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = rightSignWarningMsg[globalIndex];
 8000462:	4b49      	ldr	r3, [pc, #292]	; (8000588 <sendWarning+0x20c>)
 8000464:	681a      	ldr	r2, [r3, #0]
 8000466:	4b49      	ldr	r3, [pc, #292]	; (800058c <sendWarning+0x210>)
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	4952      	ldr	r1, [pc, #328]	; (80005b4 <sendWarning+0x238>)
 800046c:	5c89      	ldrb	r1, [r1, r2]
 800046e:	4a49      	ldr	r2, [pc, #292]	; (8000594 <sendWarning+0x218>)
 8000470:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 8000472:	4b46      	ldr	r3, [pc, #280]	; (800058c <sendWarning+0x210>)
 8000474:	681b      	ldr	r3, [r3, #0]
 8000476:	3301      	adds	r3, #1
 8000478:	4a44      	ldr	r2, [pc, #272]	; (800058c <sendWarning+0x210>)
 800047a:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 800047c:	4b42      	ldr	r3, [pc, #264]	; (8000588 <sendWarning+0x20c>)
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	3301      	adds	r3, #1
 8000482:	4a41      	ldr	r2, [pc, #260]	; (8000588 <sendWarning+0x20c>)
 8000484:	6013      	str	r3, [r2, #0]
 8000486:	4b40      	ldr	r3, [pc, #256]	; (8000588 <sendWarning+0x20c>)
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	2b31      	cmp	r3, #49	; 0x31
 800048c:	dde9      	ble.n	8000462 <sendWarning+0xe6>
			}
		// Todo: Calculate the distances by second Law Newten and compare.
		if(speed < carSpeed && accerlation < 0) //HAL_UART_Transmit(&huart1, reduceSpeedWarningMsg, TX_SIZE, 0xFF);
 800048e:	4b44      	ldr	r3, [pc, #272]	; (80005a0 <sendWarning+0x224>)
 8000490:	781a      	ldrb	r2, [r3, #0]
 8000492:	4b44      	ldr	r3, [pc, #272]	; (80005a4 <sendWarning+0x228>)
 8000494:	781b      	ldrb	r3, [r3, #0]
 8000496:	429a      	cmp	r2, r3
 8000498:	d21e      	bcs.n	80004d8 <sendWarning+0x15c>
 800049a:	4b43      	ldr	r3, [pc, #268]	; (80005a8 <sendWarning+0x22c>)
 800049c:	f993 3000 	ldrsb.w	r3, [r3]
 80004a0:	2b00      	cmp	r3, #0
 80004a2:	da19      	bge.n	80004d8 <sendWarning+0x15c>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80004a4:	4b38      	ldr	r3, [pc, #224]	; (8000588 <sendWarning+0x20c>)
 80004a6:	2200      	movs	r2, #0
 80004a8:	601a      	str	r2, [r3, #0]
 80004aa:	e011      	b.n	80004d0 <sendWarning+0x154>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = reduceSpeedWarningMsg[globalIndex];
 80004ac:	4b36      	ldr	r3, [pc, #216]	; (8000588 <sendWarning+0x20c>)
 80004ae:	681a      	ldr	r2, [r3, #0]
 80004b0:	4b36      	ldr	r3, [pc, #216]	; (800058c <sendWarning+0x210>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	493d      	ldr	r1, [pc, #244]	; (80005ac <sendWarning+0x230>)
 80004b6:	5c89      	ldrb	r1, [r1, r2]
 80004b8:	4a36      	ldr	r2, [pc, #216]	; (8000594 <sendWarning+0x218>)
 80004ba:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 80004bc:	4b33      	ldr	r3, [pc, #204]	; (800058c <sendWarning+0x210>)
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	3301      	adds	r3, #1
 80004c2:	4a32      	ldr	r2, [pc, #200]	; (800058c <sendWarning+0x210>)
 80004c4:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80004c6:	4b30      	ldr	r3, [pc, #192]	; (8000588 <sendWarning+0x20c>)
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	3301      	adds	r3, #1
 80004cc:	4a2e      	ldr	r2, [pc, #184]	; (8000588 <sendWarning+0x20c>)
 80004ce:	6013      	str	r3, [r2, #0]
 80004d0:	4b2d      	ldr	r3, [pc, #180]	; (8000588 <sendWarning+0x20c>)
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	2b31      	cmp	r3, #49	; 0x31
 80004d6:	dde9      	ble.n	80004ac <sendWarning+0x130>
			}
		if(doorSignCheck == RIGHT_DOOR) //HAL_UART_Transmit(&huart1, rightDoorWarningMsg, TX_SIZE, 0xFF);
 80004d8:	4b2a      	ldr	r3, [pc, #168]	; (8000584 <sendWarning+0x208>)
 80004da:	781b      	ldrb	r3, [r3, #0]
 80004dc:	2b02      	cmp	r3, #2
 80004de:	d119      	bne.n	8000514 <sendWarning+0x198>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80004e0:	4b29      	ldr	r3, [pc, #164]	; (8000588 <sendWarning+0x20c>)
 80004e2:	2200      	movs	r2, #0
 80004e4:	601a      	str	r2, [r3, #0]
 80004e6:	e011      	b.n	800050c <sendWarning+0x190>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = rightDoorWarningMsg[globalIndex];
 80004e8:	4b27      	ldr	r3, [pc, #156]	; (8000588 <sendWarning+0x20c>)
 80004ea:	681a      	ldr	r2, [r3, #0]
 80004ec:	4b27      	ldr	r3, [pc, #156]	; (800058c <sendWarning+0x210>)
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	4931      	ldr	r1, [pc, #196]	; (80005b8 <sendWarning+0x23c>)
 80004f2:	5c89      	ldrb	r1, [r1, r2]
 80004f4:	4a27      	ldr	r2, [pc, #156]	; (8000594 <sendWarning+0x218>)
 80004f6:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 80004f8:	4b24      	ldr	r3, [pc, #144]	; (800058c <sendWarning+0x210>)
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	3301      	adds	r3, #1
 80004fe:	4a23      	ldr	r2, [pc, #140]	; (800058c <sendWarning+0x210>)
 8000500:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000502:	4b21      	ldr	r3, [pc, #132]	; (8000588 <sendWarning+0x20c>)
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	3301      	adds	r3, #1
 8000508:	4a1f      	ldr	r2, [pc, #124]	; (8000588 <sendWarning+0x20c>)
 800050a:	6013      	str	r3, [r2, #0]
 800050c:	4b1e      	ldr	r3, [pc, #120]	; (8000588 <sendWarning+0x20c>)
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	2b31      	cmp	r3, #49	; 0x31
 8000512:	dde9      	ble.n	80004e8 <sendWarning+0x16c>
			}
	}
	if(positionIndication == NORTH)
 8000514:	4b1a      	ldr	r3, [pc, #104]	; (8000580 <sendWarning+0x204>)
 8000516:	781b      	ldrb	r3, [r3, #0]
 8000518:	2b03      	cmp	r3, #3
 800051a:	d167      	bne.n	80005ec <sendWarning+0x270>
	{
		if(speed < carSpeed && accerlation < 0) //HAL_UART_Transmit(&huart1, reduceSpeedWarningMsg, TX_SIZE, 0xFF);
 800051c:	4b20      	ldr	r3, [pc, #128]	; (80005a0 <sendWarning+0x224>)
 800051e:	781a      	ldrb	r2, [r3, #0]
 8000520:	4b20      	ldr	r3, [pc, #128]	; (80005a4 <sendWarning+0x228>)
 8000522:	781b      	ldrb	r3, [r3, #0]
 8000524:	429a      	cmp	r2, r3
 8000526:	d21e      	bcs.n	8000566 <sendWarning+0x1ea>
 8000528:	4b1f      	ldr	r3, [pc, #124]	; (80005a8 <sendWarning+0x22c>)
 800052a:	f993 3000 	ldrsb.w	r3, [r3]
 800052e:	2b00      	cmp	r3, #0
 8000530:	da19      	bge.n	8000566 <sendWarning+0x1ea>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000532:	4b15      	ldr	r3, [pc, #84]	; (8000588 <sendWarning+0x20c>)
 8000534:	2200      	movs	r2, #0
 8000536:	601a      	str	r2, [r3, #0]
 8000538:	e011      	b.n	800055e <sendWarning+0x1e2>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = reduceSpeedWarningMsg[globalIndex];
 800053a:	4b13      	ldr	r3, [pc, #76]	; (8000588 <sendWarning+0x20c>)
 800053c:	681a      	ldr	r2, [r3, #0]
 800053e:	4b13      	ldr	r3, [pc, #76]	; (800058c <sendWarning+0x210>)
 8000540:	681b      	ldr	r3, [r3, #0]
 8000542:	491a      	ldr	r1, [pc, #104]	; (80005ac <sendWarning+0x230>)
 8000544:	5c89      	ldrb	r1, [r1, r2]
 8000546:	4a13      	ldr	r2, [pc, #76]	; (8000594 <sendWarning+0x218>)
 8000548:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 800054a:	4b10      	ldr	r3, [pc, #64]	; (800058c <sendWarning+0x210>)
 800054c:	681b      	ldr	r3, [r3, #0]
 800054e:	3301      	adds	r3, #1
 8000550:	4a0e      	ldr	r2, [pc, #56]	; (800058c <sendWarning+0x210>)
 8000552:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000554:	4b0c      	ldr	r3, [pc, #48]	; (8000588 <sendWarning+0x20c>)
 8000556:	681b      	ldr	r3, [r3, #0]
 8000558:	3301      	adds	r3, #1
 800055a:	4a0b      	ldr	r2, [pc, #44]	; (8000588 <sendWarning+0x20c>)
 800055c:	6013      	str	r3, [r2, #0]
 800055e:	4b0a      	ldr	r3, [pc, #40]	; (8000588 <sendWarning+0x20c>)
 8000560:	681b      	ldr	r3, [r3, #0]
 8000562:	2b31      	cmp	r3, #49	; 0x31
 8000564:	dde9      	ble.n	800053a <sendWarning+0x1be>
			}
		if(doorSignCheck == BAG_DOOR && yAxis == 1) //HAL_UART_Transmit(&huart1, bagDoorWarningMsg, TX_SIZE, 0xFF);
 8000566:	4b07      	ldr	r3, [pc, #28]	; (8000584 <sendWarning+0x208>)
 8000568:	781b      	ldrb	r3, [r3, #0]
 800056a:	2b03      	cmp	r3, #3
 800056c:	d13e      	bne.n	80005ec <sendWarning+0x270>
 800056e:	4b13      	ldr	r3, [pc, #76]	; (80005bc <sendWarning+0x240>)
 8000570:	f993 3000 	ldrsb.w	r3, [r3]
 8000574:	2b01      	cmp	r3, #1
 8000576:	d139      	bne.n	80005ec <sendWarning+0x270>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000578:	4b03      	ldr	r3, [pc, #12]	; (8000588 <sendWarning+0x20c>)
 800057a:	2200      	movs	r2, #0
 800057c:	601a      	str	r2, [r3, #0]
 800057e:	e031      	b.n	80005e4 <sendWarning+0x268>
 8000580:	2000027f 	.word	0x2000027f
 8000584:	2000027e 	.word	0x2000027e
 8000588:	20000274 	.word	0x20000274
 800058c:	20000268 	.word	0x20000268
 8000590:	20000138 	.word	0x20000138
 8000594:	20000284 	.word	0x20000284
 8000598:	2000027c 	.word	0x2000027c
 800059c:	200000d0 	.word	0x200000d0
 80005a0:	20000278 	.word	0x20000278
 80005a4:	2000023a 	.word	0x2000023a
 80005a8:	20000279 	.word	0x20000279
 80005ac:	20000000 	.word	0x20000000
 80005b0:	2000027d 	.word	0x2000027d
 80005b4:	2000009c 	.word	0x2000009c
 80005b8:	20000104 	.word	0x20000104
 80005bc:	2000027b 	.word	0x2000027b
			{
				totalTXBuffer[indexoFtotalTXBuffer] = bagDoorWarningMsg[globalIndex];
 80005c0:	4b88      	ldr	r3, [pc, #544]	; (80007e4 <sendWarning+0x468>)
 80005c2:	681a      	ldr	r2, [r3, #0]
 80005c4:	4b88      	ldr	r3, [pc, #544]	; (80007e8 <sendWarning+0x46c>)
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	4988      	ldr	r1, [pc, #544]	; (80007ec <sendWarning+0x470>)
 80005ca:	5c89      	ldrb	r1, [r1, r2]
 80005cc:	4a88      	ldr	r2, [pc, #544]	; (80007f0 <sendWarning+0x474>)
 80005ce:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 80005d0:	4b85      	ldr	r3, [pc, #532]	; (80007e8 <sendWarning+0x46c>)
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	3301      	adds	r3, #1
 80005d6:	4a84      	ldr	r2, [pc, #528]	; (80007e8 <sendWarning+0x46c>)
 80005d8:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80005da:	4b82      	ldr	r3, [pc, #520]	; (80007e4 <sendWarning+0x468>)
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	3301      	adds	r3, #1
 80005e0:	4a80      	ldr	r2, [pc, #512]	; (80007e4 <sendWarning+0x468>)
 80005e2:	6013      	str	r3, [r2, #0]
 80005e4:	4b7f      	ldr	r3, [pc, #508]	; (80007e4 <sendWarning+0x468>)
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	2b31      	cmp	r3, #49	; 0x31
 80005ea:	dde9      	ble.n	80005c0 <sendWarning+0x244>
			}
	}
	if(positionIndication == SOUTH_WEST)
 80005ec:	4b81      	ldr	r3, [pc, #516]	; (80007f4 <sendWarning+0x478>)
 80005ee:	781b      	ldrb	r3, [r3, #0]
 80005f0:	2b08      	cmp	r3, #8
 80005f2:	d14c      	bne.n	800068e <sendWarning+0x312>
	{
		if(speed > carSpeed && accerlation > 0 && rightSignCheck == 1) //HAL_UART_Transmit(&huart1, boostSpeedWarningMsg, TX_SIZE, 0xFF);
 80005f4:	4b80      	ldr	r3, [pc, #512]	; (80007f8 <sendWarning+0x47c>)
 80005f6:	781a      	ldrb	r2, [r3, #0]
 80005f8:	4b80      	ldr	r3, [pc, #512]	; (80007fc <sendWarning+0x480>)
 80005fa:	781b      	ldrb	r3, [r3, #0]
 80005fc:	429a      	cmp	r2, r3
 80005fe:	d922      	bls.n	8000646 <sendWarning+0x2ca>
 8000600:	4b7f      	ldr	r3, [pc, #508]	; (8000800 <sendWarning+0x484>)
 8000602:	f993 3000 	ldrsb.w	r3, [r3]
 8000606:	2b00      	cmp	r3, #0
 8000608:	dd1d      	ble.n	8000646 <sendWarning+0x2ca>
 800060a:	4b7e      	ldr	r3, [pc, #504]	; (8000804 <sendWarning+0x488>)
 800060c:	781b      	ldrb	r3, [r3, #0]
 800060e:	2b01      	cmp	r3, #1
 8000610:	d119      	bne.n	8000646 <sendWarning+0x2ca>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000612:	4b74      	ldr	r3, [pc, #464]	; (80007e4 <sendWarning+0x468>)
 8000614:	2200      	movs	r2, #0
 8000616:	601a      	str	r2, [r3, #0]
 8000618:	e011      	b.n	800063e <sendWarning+0x2c2>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = boostSpeedWarningMsg[globalIndex];
 800061a:	4b72      	ldr	r3, [pc, #456]	; (80007e4 <sendWarning+0x468>)
 800061c:	681a      	ldr	r2, [r3, #0]
 800061e:	4b72      	ldr	r3, [pc, #456]	; (80007e8 <sendWarning+0x46c>)
 8000620:	681b      	ldr	r3, [r3, #0]
 8000622:	4979      	ldr	r1, [pc, #484]	; (8000808 <sendWarning+0x48c>)
 8000624:	5c89      	ldrb	r1, [r1, r2]
 8000626:	4a72      	ldr	r2, [pc, #456]	; (80007f0 <sendWarning+0x474>)
 8000628:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 800062a:	4b6f      	ldr	r3, [pc, #444]	; (80007e8 <sendWarning+0x46c>)
 800062c:	681b      	ldr	r3, [r3, #0]
 800062e:	3301      	adds	r3, #1
 8000630:	4a6d      	ldr	r2, [pc, #436]	; (80007e8 <sendWarning+0x46c>)
 8000632:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000634:	4b6b      	ldr	r3, [pc, #428]	; (80007e4 <sendWarning+0x468>)
 8000636:	681b      	ldr	r3, [r3, #0]
 8000638:	3301      	adds	r3, #1
 800063a:	4a6a      	ldr	r2, [pc, #424]	; (80007e4 <sendWarning+0x468>)
 800063c:	6013      	str	r3, [r2, #0]
 800063e:	4b69      	ldr	r3, [pc, #420]	; (80007e4 <sendWarning+0x468>)
 8000640:	681b      	ldr	r3, [r3, #0]
 8000642:	2b31      	cmp	r3, #49	; 0x31
 8000644:	dde9      	ble.n	800061a <sendWarning+0x29e>
			}
		if(speed > carSpeed && carLeftSign == 1) //HAL_UART_Transmit(&huart1, changeLaneWarningMsg, TX_SIZE, 0xFF);
 8000646:	4b6c      	ldr	r3, [pc, #432]	; (80007f8 <sendWarning+0x47c>)
 8000648:	781a      	ldrb	r2, [r3, #0]
 800064a:	4b6c      	ldr	r3, [pc, #432]	; (80007fc <sendWarning+0x480>)
 800064c:	781b      	ldrb	r3, [r3, #0]
 800064e:	429a      	cmp	r2, r3
 8000650:	d91d      	bls.n	800068e <sendWarning+0x312>
 8000652:	4b6e      	ldr	r3, [pc, #440]	; (800080c <sendWarning+0x490>)
 8000654:	781b      	ldrb	r3, [r3, #0]
 8000656:	2b01      	cmp	r3, #1
 8000658:	d119      	bne.n	800068e <sendWarning+0x312>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 800065a:	4b62      	ldr	r3, [pc, #392]	; (80007e4 <sendWarning+0x468>)
 800065c:	2200      	movs	r2, #0
 800065e:	601a      	str	r2, [r3, #0]
 8000660:	e011      	b.n	8000686 <sendWarning+0x30a>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = changeLaneWarningMsg[globalIndex];
 8000662:	4b60      	ldr	r3, [pc, #384]	; (80007e4 <sendWarning+0x468>)
 8000664:	681a      	ldr	r2, [r3, #0]
 8000666:	4b60      	ldr	r3, [pc, #384]	; (80007e8 <sendWarning+0x46c>)
 8000668:	681b      	ldr	r3, [r3, #0]
 800066a:	4969      	ldr	r1, [pc, #420]	; (8000810 <sendWarning+0x494>)
 800066c:	5c89      	ldrb	r1, [r1, r2]
 800066e:	4a60      	ldr	r2, [pc, #384]	; (80007f0 <sendWarning+0x474>)
 8000670:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 8000672:	4b5d      	ldr	r3, [pc, #372]	; (80007e8 <sendWarning+0x46c>)
 8000674:	681b      	ldr	r3, [r3, #0]
 8000676:	3301      	adds	r3, #1
 8000678:	4a5b      	ldr	r2, [pc, #364]	; (80007e8 <sendWarning+0x46c>)
 800067a:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 800067c:	4b59      	ldr	r3, [pc, #356]	; (80007e4 <sendWarning+0x468>)
 800067e:	681b      	ldr	r3, [r3, #0]
 8000680:	3301      	adds	r3, #1
 8000682:	4a58      	ldr	r2, [pc, #352]	; (80007e4 <sendWarning+0x468>)
 8000684:	6013      	str	r3, [r2, #0]
 8000686:	4b57      	ldr	r3, [pc, #348]	; (80007e4 <sendWarning+0x468>)
 8000688:	681b      	ldr	r3, [r3, #0]
 800068a:	2b31      	cmp	r3, #49	; 0x31
 800068c:	dde9      	ble.n	8000662 <sendWarning+0x2e6>
			}
	}
	if(positionIndication == SOUTH_EAST)
 800068e:	4b59      	ldr	r3, [pc, #356]	; (80007f4 <sendWarning+0x478>)
 8000690:	781b      	ldrb	r3, [r3, #0]
 8000692:	2b07      	cmp	r3, #7
 8000694:	d14c      	bne.n	8000730 <sendWarning+0x3b4>
	{
		if(speed > carSpeed && accerlation > 0 && leftSignCheck == 1) //HAL_UART_Transmit(&huart1, boostSpeedWarningMsg, TX_SIZE, 0xFF);
 8000696:	4b58      	ldr	r3, [pc, #352]	; (80007f8 <sendWarning+0x47c>)
 8000698:	781a      	ldrb	r2, [r3, #0]
 800069a:	4b58      	ldr	r3, [pc, #352]	; (80007fc <sendWarning+0x480>)
 800069c:	781b      	ldrb	r3, [r3, #0]
 800069e:	429a      	cmp	r2, r3
 80006a0:	d922      	bls.n	80006e8 <sendWarning+0x36c>
 80006a2:	4b57      	ldr	r3, [pc, #348]	; (8000800 <sendWarning+0x484>)
 80006a4:	f993 3000 	ldrsb.w	r3, [r3]
 80006a8:	2b00      	cmp	r3, #0
 80006aa:	dd1d      	ble.n	80006e8 <sendWarning+0x36c>
 80006ac:	4b59      	ldr	r3, [pc, #356]	; (8000814 <sendWarning+0x498>)
 80006ae:	781b      	ldrb	r3, [r3, #0]
 80006b0:	2b01      	cmp	r3, #1
 80006b2:	d119      	bne.n	80006e8 <sendWarning+0x36c>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80006b4:	4b4b      	ldr	r3, [pc, #300]	; (80007e4 <sendWarning+0x468>)
 80006b6:	2200      	movs	r2, #0
 80006b8:	601a      	str	r2, [r3, #0]
 80006ba:	e011      	b.n	80006e0 <sendWarning+0x364>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = boostSpeedWarningMsg[globalIndex];
 80006bc:	4b49      	ldr	r3, [pc, #292]	; (80007e4 <sendWarning+0x468>)
 80006be:	681a      	ldr	r2, [r3, #0]
 80006c0:	4b49      	ldr	r3, [pc, #292]	; (80007e8 <sendWarning+0x46c>)
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	4950      	ldr	r1, [pc, #320]	; (8000808 <sendWarning+0x48c>)
 80006c6:	5c89      	ldrb	r1, [r1, r2]
 80006c8:	4a49      	ldr	r2, [pc, #292]	; (80007f0 <sendWarning+0x474>)
 80006ca:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 80006cc:	4b46      	ldr	r3, [pc, #280]	; (80007e8 <sendWarning+0x46c>)
 80006ce:	681b      	ldr	r3, [r3, #0]
 80006d0:	3301      	adds	r3, #1
 80006d2:	4a45      	ldr	r2, [pc, #276]	; (80007e8 <sendWarning+0x46c>)
 80006d4:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80006d6:	4b43      	ldr	r3, [pc, #268]	; (80007e4 <sendWarning+0x468>)
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	3301      	adds	r3, #1
 80006dc:	4a41      	ldr	r2, [pc, #260]	; (80007e4 <sendWarning+0x468>)
 80006de:	6013      	str	r3, [r2, #0]
 80006e0:	4b40      	ldr	r3, [pc, #256]	; (80007e4 <sendWarning+0x468>)
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	2b31      	cmp	r3, #49	; 0x31
 80006e6:	dde9      	ble.n	80006bc <sendWarning+0x340>
			}
		if(speed > carSpeed && carRightSign == 1) //HAL_UART_Transmit(&huart1, changeLaneWarningMsg, TX_SIZE, 0xFF);
 80006e8:	4b43      	ldr	r3, [pc, #268]	; (80007f8 <sendWarning+0x47c>)
 80006ea:	781a      	ldrb	r2, [r3, #0]
 80006ec:	4b43      	ldr	r3, [pc, #268]	; (80007fc <sendWarning+0x480>)
 80006ee:	781b      	ldrb	r3, [r3, #0]
 80006f0:	429a      	cmp	r2, r3
 80006f2:	d91d      	bls.n	8000730 <sendWarning+0x3b4>
 80006f4:	4b48      	ldr	r3, [pc, #288]	; (8000818 <sendWarning+0x49c>)
 80006f6:	781b      	ldrb	r3, [r3, #0]
 80006f8:	2b01      	cmp	r3, #1
 80006fa:	d119      	bne.n	8000730 <sendWarning+0x3b4>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80006fc:	4b39      	ldr	r3, [pc, #228]	; (80007e4 <sendWarning+0x468>)
 80006fe:	2200      	movs	r2, #0
 8000700:	601a      	str	r2, [r3, #0]
 8000702:	e011      	b.n	8000728 <sendWarning+0x3ac>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = changeLaneWarningMsg[globalIndex];
 8000704:	4b37      	ldr	r3, [pc, #220]	; (80007e4 <sendWarning+0x468>)
 8000706:	681a      	ldr	r2, [r3, #0]
 8000708:	4b37      	ldr	r3, [pc, #220]	; (80007e8 <sendWarning+0x46c>)
 800070a:	681b      	ldr	r3, [r3, #0]
 800070c:	4940      	ldr	r1, [pc, #256]	; (8000810 <sendWarning+0x494>)
 800070e:	5c89      	ldrb	r1, [r1, r2]
 8000710:	4a37      	ldr	r2, [pc, #220]	; (80007f0 <sendWarning+0x474>)
 8000712:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 8000714:	4b34      	ldr	r3, [pc, #208]	; (80007e8 <sendWarning+0x46c>)
 8000716:	681b      	ldr	r3, [r3, #0]
 8000718:	3301      	adds	r3, #1
 800071a:	4a33      	ldr	r2, [pc, #204]	; (80007e8 <sendWarning+0x46c>)
 800071c:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 800071e:	4b31      	ldr	r3, [pc, #196]	; (80007e4 <sendWarning+0x468>)
 8000720:	681b      	ldr	r3, [r3, #0]
 8000722:	3301      	adds	r3, #1
 8000724:	4a2f      	ldr	r2, [pc, #188]	; (80007e4 <sendWarning+0x468>)
 8000726:	6013      	str	r3, [r2, #0]
 8000728:	4b2e      	ldr	r3, [pc, #184]	; (80007e4 <sendWarning+0x468>)
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	2b31      	cmp	r3, #49	; 0x31
 800072e:	dde9      	ble.n	8000704 <sendWarning+0x388>
			}
	}
	if(positionIndication == SOUTH)
 8000730:	4b30      	ldr	r3, [pc, #192]	; (80007f4 <sendWarning+0x478>)
 8000732:	781b      	ldrb	r3, [r3, #0]
 8000734:	2b04      	cmp	r3, #4
 8000736:	d148      	bne.n	80007ca <sendWarning+0x44e>
	{
		if(speed > carSpeed && accerlation > 0) //HAL_UART_Transmit(&huart1, boostSpeedWarningMsg, TX_SIZE, 0xFF);
 8000738:	4b2f      	ldr	r3, [pc, #188]	; (80007f8 <sendWarning+0x47c>)
 800073a:	781a      	ldrb	r2, [r3, #0]
 800073c:	4b2f      	ldr	r3, [pc, #188]	; (80007fc <sendWarning+0x480>)
 800073e:	781b      	ldrb	r3, [r3, #0]
 8000740:	429a      	cmp	r2, r3
 8000742:	d91e      	bls.n	8000782 <sendWarning+0x406>
 8000744:	4b2e      	ldr	r3, [pc, #184]	; (8000800 <sendWarning+0x484>)
 8000746:	f993 3000 	ldrsb.w	r3, [r3]
 800074a:	2b00      	cmp	r3, #0
 800074c:	dd19      	ble.n	8000782 <sendWarning+0x406>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 800074e:	4b25      	ldr	r3, [pc, #148]	; (80007e4 <sendWarning+0x468>)
 8000750:	2200      	movs	r2, #0
 8000752:	601a      	str	r2, [r3, #0]
 8000754:	e011      	b.n	800077a <sendWarning+0x3fe>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = boostSpeedWarningMsg[globalIndex];
 8000756:	4b23      	ldr	r3, [pc, #140]	; (80007e4 <sendWarning+0x468>)
 8000758:	681a      	ldr	r2, [r3, #0]
 800075a:	4b23      	ldr	r3, [pc, #140]	; (80007e8 <sendWarning+0x46c>)
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	492a      	ldr	r1, [pc, #168]	; (8000808 <sendWarning+0x48c>)
 8000760:	5c89      	ldrb	r1, [r1, r2]
 8000762:	4a23      	ldr	r2, [pc, #140]	; (80007f0 <sendWarning+0x474>)
 8000764:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 8000766:	4b20      	ldr	r3, [pc, #128]	; (80007e8 <sendWarning+0x46c>)
 8000768:	681b      	ldr	r3, [r3, #0]
 800076a:	3301      	adds	r3, #1
 800076c:	4a1e      	ldr	r2, [pc, #120]	; (80007e8 <sendWarning+0x46c>)
 800076e:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000770:	4b1c      	ldr	r3, [pc, #112]	; (80007e4 <sendWarning+0x468>)
 8000772:	681b      	ldr	r3, [r3, #0]
 8000774:	3301      	adds	r3, #1
 8000776:	4a1b      	ldr	r2, [pc, #108]	; (80007e4 <sendWarning+0x468>)
 8000778:	6013      	str	r3, [r2, #0]
 800077a:	4b1a      	ldr	r3, [pc, #104]	; (80007e4 <sendWarning+0x468>)
 800077c:	681b      	ldr	r3, [r3, #0]
 800077e:	2b31      	cmp	r3, #49	; 0x31
 8000780:	dde9      	ble.n	8000756 <sendWarning+0x3da>
			}
		if(doorSignCheck == CAR_HOOD && yAxis == -1) //HAL_UART_Transmit(&huart1, carHoodWarningMsg, TX_SIZE, 0xFF);
 8000782:	4b26      	ldr	r3, [pc, #152]	; (800081c <sendWarning+0x4a0>)
 8000784:	781b      	ldrb	r3, [r3, #0]
 8000786:	2b04      	cmp	r3, #4
 8000788:	d11f      	bne.n	80007ca <sendWarning+0x44e>
 800078a:	4b25      	ldr	r3, [pc, #148]	; (8000820 <sendWarning+0x4a4>)
 800078c:	f993 3000 	ldrsb.w	r3, [r3]
 8000790:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000794:	d119      	bne.n	80007ca <sendWarning+0x44e>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000796:	4b13      	ldr	r3, [pc, #76]	; (80007e4 <sendWarning+0x468>)
 8000798:	2200      	movs	r2, #0
 800079a:	601a      	str	r2, [r3, #0]
 800079c:	e011      	b.n	80007c2 <sendWarning+0x446>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = carHoodWarningMsg[globalIndex];
 800079e:	4b11      	ldr	r3, [pc, #68]	; (80007e4 <sendWarning+0x468>)
 80007a0:	681a      	ldr	r2, [r3, #0]
 80007a2:	4b11      	ldr	r3, [pc, #68]	; (80007e8 <sendWarning+0x46c>)
 80007a4:	681b      	ldr	r3, [r3, #0]
 80007a6:	491f      	ldr	r1, [pc, #124]	; (8000824 <sendWarning+0x4a8>)
 80007a8:	5c89      	ldrb	r1, [r1, r2]
 80007aa:	4a11      	ldr	r2, [pc, #68]	; (80007f0 <sendWarning+0x474>)
 80007ac:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 80007ae:	4b0e      	ldr	r3, [pc, #56]	; (80007e8 <sendWarning+0x46c>)
 80007b0:	681b      	ldr	r3, [r3, #0]
 80007b2:	3301      	adds	r3, #1
 80007b4:	4a0c      	ldr	r2, [pc, #48]	; (80007e8 <sendWarning+0x46c>)
 80007b6:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80007b8:	4b0a      	ldr	r3, [pc, #40]	; (80007e4 <sendWarning+0x468>)
 80007ba:	681b      	ldr	r3, [r3, #0]
 80007bc:	3301      	adds	r3, #1
 80007be:	4a09      	ldr	r2, [pc, #36]	; (80007e4 <sendWarning+0x468>)
 80007c0:	6013      	str	r3, [r2, #0]
 80007c2:	4b08      	ldr	r3, [pc, #32]	; (80007e4 <sendWarning+0x468>)
 80007c4:	681b      	ldr	r3, [r3, #0]
 80007c6:	2b31      	cmp	r3, #49	; 0x31
 80007c8:	dde9      	ble.n	800079e <sendWarning+0x422>
			}
	}
	if(positionIndication == EAST)
 80007ca:	4b0a      	ldr	r3, [pc, #40]	; (80007f4 <sendWarning+0x478>)
 80007cc:	781b      	ldrb	r3, [r3, #0]
 80007ce:	2b01      	cmp	r3, #1
 80007d0:	f040 8080 	bne.w	80008d4 <sendWarning+0x558>
	{
		if(doorSignCheck == LEFT_DOOR) //HAL_UART_Transmit(&huart1, leftDoorWarningMsg, TX_SIZE, 0xFF);
 80007d4:	4b11      	ldr	r3, [pc, #68]	; (800081c <sendWarning+0x4a0>)
 80007d6:	781b      	ldrb	r3, [r3, #0]
 80007d8:	2b01      	cmp	r3, #1
 80007da:	d13b      	bne.n	8000854 <sendWarning+0x4d8>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80007dc:	4b01      	ldr	r3, [pc, #4]	; (80007e4 <sendWarning+0x468>)
 80007de:	2200      	movs	r2, #0
 80007e0:	601a      	str	r2, [r3, #0]
 80007e2:	e033      	b.n	800084c <sendWarning+0x4d0>
 80007e4:	20000274 	.word	0x20000274
 80007e8:	20000268 	.word	0x20000268
 80007ec:	2000016c 	.word	0x2000016c
 80007f0:	20000284 	.word	0x20000284
 80007f4:	2000027f 	.word	0x2000027f
 80007f8:	20000278 	.word	0x20000278
 80007fc:	2000023a 	.word	0x2000023a
 8000800:	20000279 	.word	0x20000279
 8000804:	2000027d 	.word	0x2000027d
 8000808:	20000068 	.word	0x20000068
 800080c:	2000023c 	.word	0x2000023c
 8000810:	200001d4 	.word	0x200001d4
 8000814:	2000027c 	.word	0x2000027c
 8000818:	20000280 	.word	0x20000280
 800081c:	2000027e 	.word	0x2000027e
 8000820:	2000027b 	.word	0x2000027b
 8000824:	200001a0 	.word	0x200001a0
			{
				totalTXBuffer[indexoFtotalTXBuffer] = leftDoorWarningMsg[globalIndex];
 8000828:	4b5d      	ldr	r3, [pc, #372]	; (80009a0 <sendWarning+0x624>)
 800082a:	681a      	ldr	r2, [r3, #0]
 800082c:	4b5d      	ldr	r3, [pc, #372]	; (80009a4 <sendWarning+0x628>)
 800082e:	681b      	ldr	r3, [r3, #0]
 8000830:	495d      	ldr	r1, [pc, #372]	; (80009a8 <sendWarning+0x62c>)
 8000832:	5c89      	ldrb	r1, [r1, r2]
 8000834:	4a5d      	ldr	r2, [pc, #372]	; (80009ac <sendWarning+0x630>)
 8000836:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 8000838:	4b5a      	ldr	r3, [pc, #360]	; (80009a4 <sendWarning+0x628>)
 800083a:	681b      	ldr	r3, [r3, #0]
 800083c:	3301      	adds	r3, #1
 800083e:	4a59      	ldr	r2, [pc, #356]	; (80009a4 <sendWarning+0x628>)
 8000840:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000842:	4b57      	ldr	r3, [pc, #348]	; (80009a0 <sendWarning+0x624>)
 8000844:	681b      	ldr	r3, [r3, #0]
 8000846:	3301      	adds	r3, #1
 8000848:	4a55      	ldr	r2, [pc, #340]	; (80009a0 <sendWarning+0x624>)
 800084a:	6013      	str	r3, [r2, #0]
 800084c:	4b54      	ldr	r3, [pc, #336]	; (80009a0 <sendWarning+0x624>)
 800084e:	681b      	ldr	r3, [r3, #0]
 8000850:	2b31      	cmp	r3, #49	; 0x31
 8000852:	dde9      	ble.n	8000828 <sendWarning+0x4ac>
			}
		if(leftSignCheck == 1) //HAL_UART_Transmit(&huart1, holdOnSpeedWarningMsg, TX_SIZE, 0xFF);
 8000854:	4b56      	ldr	r3, [pc, #344]	; (80009b0 <sendWarning+0x634>)
 8000856:	781b      	ldrb	r3, [r3, #0]
 8000858:	2b01      	cmp	r3, #1
 800085a:	d119      	bne.n	8000890 <sendWarning+0x514>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 800085c:	4b50      	ldr	r3, [pc, #320]	; (80009a0 <sendWarning+0x624>)
 800085e:	2200      	movs	r2, #0
 8000860:	601a      	str	r2, [r3, #0]
 8000862:	e011      	b.n	8000888 <sendWarning+0x50c>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = holdOnSpeedWarningMsg[globalIndex];
 8000864:	4b4e      	ldr	r3, [pc, #312]	; (80009a0 <sendWarning+0x624>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	4b4e      	ldr	r3, [pc, #312]	; (80009a4 <sendWarning+0x628>)
 800086a:	681b      	ldr	r3, [r3, #0]
 800086c:	4951      	ldr	r1, [pc, #324]	; (80009b4 <sendWarning+0x638>)
 800086e:	5c89      	ldrb	r1, [r1, r2]
 8000870:	4a4e      	ldr	r2, [pc, #312]	; (80009ac <sendWarning+0x630>)
 8000872:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 8000874:	4b4b      	ldr	r3, [pc, #300]	; (80009a4 <sendWarning+0x628>)
 8000876:	681b      	ldr	r3, [r3, #0]
 8000878:	3301      	adds	r3, #1
 800087a:	4a4a      	ldr	r2, [pc, #296]	; (80009a4 <sendWarning+0x628>)
 800087c:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 800087e:	4b48      	ldr	r3, [pc, #288]	; (80009a0 <sendWarning+0x624>)
 8000880:	681b      	ldr	r3, [r3, #0]
 8000882:	3301      	adds	r3, #1
 8000884:	4a46      	ldr	r2, [pc, #280]	; (80009a0 <sendWarning+0x624>)
 8000886:	6013      	str	r3, [r2, #0]
 8000888:	4b45      	ldr	r3, [pc, #276]	; (80009a0 <sendWarning+0x624>)
 800088a:	681b      	ldr	r3, [r3, #0]
 800088c:	2b31      	cmp	r3, #49	; 0x31
 800088e:	dde9      	ble.n	8000864 <sendWarning+0x4e8>
			}
		if(carRightSign == 1 && leftSignCheck == 1) //HAL_UART_Transmit(&huart1, changeLaneWarningMsg, TX_SIZE, 0xFF);
 8000890:	4b49      	ldr	r3, [pc, #292]	; (80009b8 <sendWarning+0x63c>)
 8000892:	781b      	ldrb	r3, [r3, #0]
 8000894:	2b01      	cmp	r3, #1
 8000896:	d11d      	bne.n	80008d4 <sendWarning+0x558>
 8000898:	4b45      	ldr	r3, [pc, #276]	; (80009b0 <sendWarning+0x634>)
 800089a:	781b      	ldrb	r3, [r3, #0]
 800089c:	2b01      	cmp	r3, #1
 800089e:	d119      	bne.n	80008d4 <sendWarning+0x558>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80008a0:	4b3f      	ldr	r3, [pc, #252]	; (80009a0 <sendWarning+0x624>)
 80008a2:	2200      	movs	r2, #0
 80008a4:	601a      	str	r2, [r3, #0]
 80008a6:	e011      	b.n	80008cc <sendWarning+0x550>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = changeLaneWarningMsg[globalIndex];
 80008a8:	4b3d      	ldr	r3, [pc, #244]	; (80009a0 <sendWarning+0x624>)
 80008aa:	681a      	ldr	r2, [r3, #0]
 80008ac:	4b3d      	ldr	r3, [pc, #244]	; (80009a4 <sendWarning+0x628>)
 80008ae:	681b      	ldr	r3, [r3, #0]
 80008b0:	4942      	ldr	r1, [pc, #264]	; (80009bc <sendWarning+0x640>)
 80008b2:	5c89      	ldrb	r1, [r1, r2]
 80008b4:	4a3d      	ldr	r2, [pc, #244]	; (80009ac <sendWarning+0x630>)
 80008b6:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 80008b8:	4b3a      	ldr	r3, [pc, #232]	; (80009a4 <sendWarning+0x628>)
 80008ba:	681b      	ldr	r3, [r3, #0]
 80008bc:	3301      	adds	r3, #1
 80008be:	4a39      	ldr	r2, [pc, #228]	; (80009a4 <sendWarning+0x628>)
 80008c0:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80008c2:	4b37      	ldr	r3, [pc, #220]	; (80009a0 <sendWarning+0x624>)
 80008c4:	681b      	ldr	r3, [r3, #0]
 80008c6:	3301      	adds	r3, #1
 80008c8:	4a35      	ldr	r2, [pc, #212]	; (80009a0 <sendWarning+0x624>)
 80008ca:	6013      	str	r3, [r2, #0]
 80008cc:	4b34      	ldr	r3, [pc, #208]	; (80009a0 <sendWarning+0x624>)
 80008ce:	681b      	ldr	r3, [r3, #0]
 80008d0:	2b31      	cmp	r3, #49	; 0x31
 80008d2:	dde9      	ble.n	80008a8 <sendWarning+0x52c>
			}
	}
	if(positionIndication == WEST)
 80008d4:	4b3a      	ldr	r3, [pc, #232]	; (80009c0 <sendWarning+0x644>)
 80008d6:	781b      	ldrb	r3, [r3, #0]
 80008d8:	2b02      	cmp	r3, #2
 80008da:	d15d      	bne.n	8000998 <sendWarning+0x61c>
	{
		if(doorSignCheck == RIGHT_DOOR) //HAL_UART_Transmit(&huart1, rightDoorWarningMsg, TX_SIZE, 0xFF);
 80008dc:	4b39      	ldr	r3, [pc, #228]	; (80009c4 <sendWarning+0x648>)
 80008de:	781b      	ldrb	r3, [r3, #0]
 80008e0:	2b02      	cmp	r3, #2
 80008e2:	d119      	bne.n	8000918 <sendWarning+0x59c>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 80008e4:	4b2e      	ldr	r3, [pc, #184]	; (80009a0 <sendWarning+0x624>)
 80008e6:	2200      	movs	r2, #0
 80008e8:	601a      	str	r2, [r3, #0]
 80008ea:	e011      	b.n	8000910 <sendWarning+0x594>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = rightDoorWarningMsg[globalIndex];
 80008ec:	4b2c      	ldr	r3, [pc, #176]	; (80009a0 <sendWarning+0x624>)
 80008ee:	681a      	ldr	r2, [r3, #0]
 80008f0:	4b2c      	ldr	r3, [pc, #176]	; (80009a4 <sendWarning+0x628>)
 80008f2:	681b      	ldr	r3, [r3, #0]
 80008f4:	4934      	ldr	r1, [pc, #208]	; (80009c8 <sendWarning+0x64c>)
 80008f6:	5c89      	ldrb	r1, [r1, r2]
 80008f8:	4a2c      	ldr	r2, [pc, #176]	; (80009ac <sendWarning+0x630>)
 80008fa:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 80008fc:	4b29      	ldr	r3, [pc, #164]	; (80009a4 <sendWarning+0x628>)
 80008fe:	681b      	ldr	r3, [r3, #0]
 8000900:	3301      	adds	r3, #1
 8000902:	4a28      	ldr	r2, [pc, #160]	; (80009a4 <sendWarning+0x628>)
 8000904:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000906:	4b26      	ldr	r3, [pc, #152]	; (80009a0 <sendWarning+0x624>)
 8000908:	681b      	ldr	r3, [r3, #0]
 800090a:	3301      	adds	r3, #1
 800090c:	4a24      	ldr	r2, [pc, #144]	; (80009a0 <sendWarning+0x624>)
 800090e:	6013      	str	r3, [r2, #0]
 8000910:	4b23      	ldr	r3, [pc, #140]	; (80009a0 <sendWarning+0x624>)
 8000912:	681b      	ldr	r3, [r3, #0]
 8000914:	2b31      	cmp	r3, #49	; 0x31
 8000916:	dde9      	ble.n	80008ec <sendWarning+0x570>
			}
		if(rightSignCheck == 1) //HAL_UART_Transmit(&huart1, holdOnSpeedWarningMsg, TX_SIZE, 0xFF);
 8000918:	4b2c      	ldr	r3, [pc, #176]	; (80009cc <sendWarning+0x650>)
 800091a:	781b      	ldrb	r3, [r3, #0]
 800091c:	2b01      	cmp	r3, #1
 800091e:	d119      	bne.n	8000954 <sendWarning+0x5d8>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000920:	4b1f      	ldr	r3, [pc, #124]	; (80009a0 <sendWarning+0x624>)
 8000922:	2200      	movs	r2, #0
 8000924:	601a      	str	r2, [r3, #0]
 8000926:	e011      	b.n	800094c <sendWarning+0x5d0>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = holdOnSpeedWarningMsg[globalIndex];
 8000928:	4b1d      	ldr	r3, [pc, #116]	; (80009a0 <sendWarning+0x624>)
 800092a:	681a      	ldr	r2, [r3, #0]
 800092c:	4b1d      	ldr	r3, [pc, #116]	; (80009a4 <sendWarning+0x628>)
 800092e:	681b      	ldr	r3, [r3, #0]
 8000930:	4920      	ldr	r1, [pc, #128]	; (80009b4 <sendWarning+0x638>)
 8000932:	5c89      	ldrb	r1, [r1, r2]
 8000934:	4a1d      	ldr	r2, [pc, #116]	; (80009ac <sendWarning+0x630>)
 8000936:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 8000938:	4b1a      	ldr	r3, [pc, #104]	; (80009a4 <sendWarning+0x628>)
 800093a:	681b      	ldr	r3, [r3, #0]
 800093c:	3301      	adds	r3, #1
 800093e:	4a19      	ldr	r2, [pc, #100]	; (80009a4 <sendWarning+0x628>)
 8000940:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000942:	4b17      	ldr	r3, [pc, #92]	; (80009a0 <sendWarning+0x624>)
 8000944:	681b      	ldr	r3, [r3, #0]
 8000946:	3301      	adds	r3, #1
 8000948:	4a15      	ldr	r2, [pc, #84]	; (80009a0 <sendWarning+0x624>)
 800094a:	6013      	str	r3, [r2, #0]
 800094c:	4b14      	ldr	r3, [pc, #80]	; (80009a0 <sendWarning+0x624>)
 800094e:	681b      	ldr	r3, [r3, #0]
 8000950:	2b31      	cmp	r3, #49	; 0x31
 8000952:	dde9      	ble.n	8000928 <sendWarning+0x5ac>
			}
		if(carLeftSign == 1 && rightSignCheck == 1) //HAL_UART_Transmit(&huart1, changeLaneWarningMsg, TX_SIZE, 0xFF);
 8000954:	4b1e      	ldr	r3, [pc, #120]	; (80009d0 <sendWarning+0x654>)
 8000956:	781b      	ldrb	r3, [r3, #0]
 8000958:	2b01      	cmp	r3, #1
 800095a:	d11d      	bne.n	8000998 <sendWarning+0x61c>
 800095c:	4b1b      	ldr	r3, [pc, #108]	; (80009cc <sendWarning+0x650>)
 800095e:	781b      	ldrb	r3, [r3, #0]
 8000960:	2b01      	cmp	r3, #1
 8000962:	d119      	bne.n	8000998 <sendWarning+0x61c>
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000964:	4b0e      	ldr	r3, [pc, #56]	; (80009a0 <sendWarning+0x624>)
 8000966:	2200      	movs	r2, #0
 8000968:	601a      	str	r2, [r3, #0]
 800096a:	e011      	b.n	8000990 <sendWarning+0x614>
			{
				totalTXBuffer[indexoFtotalTXBuffer] = changeLaneWarningMsg[globalIndex];
 800096c:	4b0c      	ldr	r3, [pc, #48]	; (80009a0 <sendWarning+0x624>)
 800096e:	681a      	ldr	r2, [r3, #0]
 8000970:	4b0c      	ldr	r3, [pc, #48]	; (80009a4 <sendWarning+0x628>)
 8000972:	681b      	ldr	r3, [r3, #0]
 8000974:	4911      	ldr	r1, [pc, #68]	; (80009bc <sendWarning+0x640>)
 8000976:	5c89      	ldrb	r1, [r1, r2]
 8000978:	4a0c      	ldr	r2, [pc, #48]	; (80009ac <sendWarning+0x630>)
 800097a:	54d1      	strb	r1, [r2, r3]
				indexoFtotalTXBuffer++;
 800097c:	4b09      	ldr	r3, [pc, #36]	; (80009a4 <sendWarning+0x628>)
 800097e:	681b      	ldr	r3, [r3, #0]
 8000980:	3301      	adds	r3, #1
 8000982:	4a08      	ldr	r2, [pc, #32]	; (80009a4 <sendWarning+0x628>)
 8000984:	6013      	str	r3, [r2, #0]
			for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000986:	4b06      	ldr	r3, [pc, #24]	; (80009a0 <sendWarning+0x624>)
 8000988:	681b      	ldr	r3, [r3, #0]
 800098a:	3301      	adds	r3, #1
 800098c:	4a04      	ldr	r2, [pc, #16]	; (80009a0 <sendWarning+0x624>)
 800098e:	6013      	str	r3, [r2, #0]
 8000990:	4b03      	ldr	r3, [pc, #12]	; (80009a0 <sendWarning+0x624>)
 8000992:	681b      	ldr	r3, [r3, #0]
 8000994:	2b31      	cmp	r3, #49	; 0x31
 8000996:	dde9      	ble.n	800096c <sendWarning+0x5f0>
			}
	}
	//HAL_UART_Transmit(&huart1, redundantSafeMsg, TX_SIZE, 0xFF);

}
 8000998:	bf00      	nop
 800099a:	46bd      	mov	sp, r7
 800099c:	bc80      	pop	{r7}
 800099e:	4770      	bx	lr
 80009a0:	20000274 	.word	0x20000274
 80009a4:	20000268 	.word	0x20000268
 80009a8:	20000138 	.word	0x20000138
 80009ac:	20000284 	.word	0x20000284
 80009b0:	2000027c 	.word	0x2000027c
 80009b4:	20000034 	.word	0x20000034
 80009b8:	20000280 	.word	0x20000280
 80009bc:	200001d4 	.word	0x200001d4
 80009c0:	2000027f 	.word	0x2000027f
 80009c4:	2000027e 	.word	0x2000027e
 80009c8:	20000104 	.word	0x20000104
 80009cc:	2000027d 	.word	0x2000027d
 80009d0:	2000023c 	.word	0x2000023c

080009d4 <storeCarVariables>:

void storeCarVariables()
{
 80009d4:	b580      	push	{r7, lr}
 80009d6:	af00      	add	r7, sp, #0
	indexOfTXBuffer = 2;
 80009d8:	4b64      	ldr	r3, [pc, #400]	; (8000b6c <storeCarVariables+0x198>)
 80009da:	2202      	movs	r2, #2
 80009dc:	601a      	str	r2, [r3, #0]
	// Store Speed.
	convertIntToChars(MAX_SPEED_DIGIT, carSpeed);
 80009de:	4b64      	ldr	r3, [pc, #400]	; (8000b70 <storeCarVariables+0x19c>)
 80009e0:	781b      	ldrb	r3, [r3, #0]
 80009e2:	4619      	mov	r1, r3
 80009e4:	2003      	movs	r0, #3
 80009e6:	f7ff fbff 	bl	80001e8 <convertIntToChars>
	indexOfTXBuffer +=3;
 80009ea:	4b60      	ldr	r3, [pc, #384]	; (8000b6c <storeCarVariables+0x198>)
 80009ec:	681b      	ldr	r3, [r3, #0]
 80009ee:	3303      	adds	r3, #3
 80009f0:	4a5e      	ldr	r2, [pc, #376]	; (8000b6c <storeCarVariables+0x198>)
 80009f2:	6013      	str	r3, [r2, #0]

	// Store Accerlation.
	if(carAccerlation < 0) bufferTX[indexOfTXBuffer] = '-';
 80009f4:	4b5f      	ldr	r3, [pc, #380]	; (8000b74 <storeCarVariables+0x1a0>)
 80009f6:	f993 3000 	ldrsb.w	r3, [r3]
 80009fa:	2b00      	cmp	r3, #0
 80009fc:	da05      	bge.n	8000a0a <storeCarVariables+0x36>
 80009fe:	4b5b      	ldr	r3, [pc, #364]	; (8000b6c <storeCarVariables+0x198>)
 8000a00:	681b      	ldr	r3, [r3, #0]
 8000a02:	4a5d      	ldr	r2, [pc, #372]	; (8000b78 <storeCarVariables+0x1a4>)
 8000a04:	212d      	movs	r1, #45	; 0x2d
 8000a06:	54d1      	strb	r1, [r2, r3]
 8000a08:	e004      	b.n	8000a14 <storeCarVariables+0x40>
	else                   bufferTX[indexOfTXBuffer] = '+';
 8000a0a:	4b58      	ldr	r3, [pc, #352]	; (8000b6c <storeCarVariables+0x198>)
 8000a0c:	681b      	ldr	r3, [r3, #0]
 8000a0e:	4a5a      	ldr	r2, [pc, #360]	; (8000b78 <storeCarVariables+0x1a4>)
 8000a10:	212b      	movs	r1, #43	; 0x2b
 8000a12:	54d1      	strb	r1, [r2, r3]
	indexOfTXBuffer++;
 8000a14:	4b55      	ldr	r3, [pc, #340]	; (8000b6c <storeCarVariables+0x198>)
 8000a16:	681b      	ldr	r3, [r3, #0]
 8000a18:	3301      	adds	r3, #1
 8000a1a:	4a54      	ldr	r2, [pc, #336]	; (8000b6c <storeCarVariables+0x198>)
 8000a1c:	6013      	str	r3, [r2, #0]
	convertIntToChars(MAX_ACCERLATION_DIGIT, takeAbsoulute(carAccerlation));
 8000a1e:	4b55      	ldr	r3, [pc, #340]	; (8000b74 <storeCarVariables+0x1a0>)
 8000a20:	f993 3000 	ldrsb.w	r3, [r3]
 8000a24:	4618      	mov	r0, r3
 8000a26:	f7ff fbcb 	bl	80001c0 <takeAbsoulute>
 8000a2a:	4603      	mov	r3, r0
 8000a2c:	4619      	mov	r1, r3
 8000a2e:	2002      	movs	r0, #2
 8000a30:	f7ff fbda 	bl	80001e8 <convertIntToChars>
	indexOfTXBuffer +=3;
 8000a34:	4b4d      	ldr	r3, [pc, #308]	; (8000b6c <storeCarVariables+0x198>)
 8000a36:	681b      	ldr	r3, [r3, #0]
 8000a38:	3303      	adds	r3, #3
 8000a3a:	4a4c      	ldr	r2, [pc, #304]	; (8000b6c <storeCarVariables+0x198>)
 8000a3c:	6013      	str	r3, [r2, #0]

	//store XAxis.
	if(xAxis > 0) bufferTX[indexOfTXBuffer] = '-';
 8000a3e:	4b4f      	ldr	r3, [pc, #316]	; (8000b7c <storeCarVariables+0x1a8>)
 8000a40:	f993 3000 	ldrsb.w	r3, [r3]
 8000a44:	2b00      	cmp	r3, #0
 8000a46:	dd05      	ble.n	8000a54 <storeCarVariables+0x80>
 8000a48:	4b48      	ldr	r3, [pc, #288]	; (8000b6c <storeCarVariables+0x198>)
 8000a4a:	681b      	ldr	r3, [r3, #0]
 8000a4c:	4a4a      	ldr	r2, [pc, #296]	; (8000b78 <storeCarVariables+0x1a4>)
 8000a4e:	212d      	movs	r1, #45	; 0x2d
 8000a50:	54d1      	strb	r1, [r2, r3]
 8000a52:	e004      	b.n	8000a5e <storeCarVariables+0x8a>
	else bufferTX[indexOfTXBuffer] = '+';
 8000a54:	4b45      	ldr	r3, [pc, #276]	; (8000b6c <storeCarVariables+0x198>)
 8000a56:	681b      	ldr	r3, [r3, #0]
 8000a58:	4a47      	ldr	r2, [pc, #284]	; (8000b78 <storeCarVariables+0x1a4>)
 8000a5a:	212b      	movs	r1, #43	; 0x2b
 8000a5c:	54d1      	strb	r1, [r2, r3]
	indexOfTXBuffer++;
 8000a5e:	4b43      	ldr	r3, [pc, #268]	; (8000b6c <storeCarVariables+0x198>)
 8000a60:	681b      	ldr	r3, [r3, #0]
 8000a62:	3301      	adds	r3, #1
 8000a64:	4a41      	ldr	r2, [pc, #260]	; (8000b6c <storeCarVariables+0x198>)
 8000a66:	6013      	str	r3, [r2, #0]
	bufferTX[indexOfTXBuffer] = takeAbsoulute(xAxis) + '0';
 8000a68:	4b44      	ldr	r3, [pc, #272]	; (8000b7c <storeCarVariables+0x1a8>)
 8000a6a:	f993 3000 	ldrsb.w	r3, [r3]
 8000a6e:	4618      	mov	r0, r3
 8000a70:	f7ff fba6 	bl	80001c0 <takeAbsoulute>
 8000a74:	4603      	mov	r3, r0
 8000a76:	461a      	mov	r2, r3
 8000a78:	4b3c      	ldr	r3, [pc, #240]	; (8000b6c <storeCarVariables+0x198>)
 8000a7a:	681b      	ldr	r3, [r3, #0]
 8000a7c:	3230      	adds	r2, #48	; 0x30
 8000a7e:	b2d1      	uxtb	r1, r2
 8000a80:	4a3d      	ldr	r2, [pc, #244]	; (8000b78 <storeCarVariables+0x1a4>)
 8000a82:	54d1      	strb	r1, [r2, r3]
	indexOfTXBuffer +=4;
 8000a84:	4b39      	ldr	r3, [pc, #228]	; (8000b6c <storeCarVariables+0x198>)
 8000a86:	681b      	ldr	r3, [r3, #0]
 8000a88:	3304      	adds	r3, #4
 8000a8a:	4a38      	ldr	r2, [pc, #224]	; (8000b6c <storeCarVariables+0x198>)
 8000a8c:	6013      	str	r3, [r2, #0]

	//store YAxis.
	if(yAxis > 0) bufferTX[indexOfTXBuffer] = '-';
 8000a8e:	4b3c      	ldr	r3, [pc, #240]	; (8000b80 <storeCarVariables+0x1ac>)
 8000a90:	f993 3000 	ldrsb.w	r3, [r3]
 8000a94:	2b00      	cmp	r3, #0
 8000a96:	dd05      	ble.n	8000aa4 <storeCarVariables+0xd0>
 8000a98:	4b34      	ldr	r3, [pc, #208]	; (8000b6c <storeCarVariables+0x198>)
 8000a9a:	681b      	ldr	r3, [r3, #0]
 8000a9c:	4a36      	ldr	r2, [pc, #216]	; (8000b78 <storeCarVariables+0x1a4>)
 8000a9e:	212d      	movs	r1, #45	; 0x2d
 8000aa0:	54d1      	strb	r1, [r2, r3]
 8000aa2:	e004      	b.n	8000aae <storeCarVariables+0xda>
	else		  bufferTX[indexOfTXBuffer] = '+';
 8000aa4:	4b31      	ldr	r3, [pc, #196]	; (8000b6c <storeCarVariables+0x198>)
 8000aa6:	681b      	ldr	r3, [r3, #0]
 8000aa8:	4a33      	ldr	r2, [pc, #204]	; (8000b78 <storeCarVariables+0x1a4>)
 8000aaa:	212b      	movs	r1, #43	; 0x2b
 8000aac:	54d1      	strb	r1, [r2, r3]
	indexOfTXBuffer++;
 8000aae:	4b2f      	ldr	r3, [pc, #188]	; (8000b6c <storeCarVariables+0x198>)
 8000ab0:	681b      	ldr	r3, [r3, #0]
 8000ab2:	3301      	adds	r3, #1
 8000ab4:	4a2d      	ldr	r2, [pc, #180]	; (8000b6c <storeCarVariables+0x198>)
 8000ab6:	6013      	str	r3, [r2, #0]
	bufferTX[indexOfTXBuffer] = takeAbsoulute(yAxis) + '0';
 8000ab8:	4b31      	ldr	r3, [pc, #196]	; (8000b80 <storeCarVariables+0x1ac>)
 8000aba:	f993 3000 	ldrsb.w	r3, [r3]
 8000abe:	4618      	mov	r0, r3
 8000ac0:	f7ff fb7e 	bl	80001c0 <takeAbsoulute>
 8000ac4:	4603      	mov	r3, r0
 8000ac6:	461a      	mov	r2, r3
 8000ac8:	4b28      	ldr	r3, [pc, #160]	; (8000b6c <storeCarVariables+0x198>)
 8000aca:	681b      	ldr	r3, [r3, #0]
 8000acc:	3230      	adds	r2, #48	; 0x30
 8000ace:	b2d1      	uxtb	r1, r2
 8000ad0:	4a29      	ldr	r2, [pc, #164]	; (8000b78 <storeCarVariables+0x1a4>)
 8000ad2:	54d1      	strb	r1, [r2, r3]
	indexOfTXBuffer +=4;
 8000ad4:	4b25      	ldr	r3, [pc, #148]	; (8000b6c <storeCarVariables+0x198>)
 8000ad6:	681b      	ldr	r3, [r3, #0]
 8000ad8:	3304      	adds	r3, #4
 8000ada:	4a24      	ldr	r2, [pc, #144]	; (8000b6c <storeCarVariables+0x198>)
 8000adc:	6013      	str	r3, [r2, #0]

	//store Right sign.
	bufferTX[indexOfTXBuffer] = carRightSign + '0';
 8000ade:	4b29      	ldr	r3, [pc, #164]	; (8000b84 <storeCarVariables+0x1b0>)
 8000ae0:	781a      	ldrb	r2, [r3, #0]
 8000ae2:	4b22      	ldr	r3, [pc, #136]	; (8000b6c <storeCarVariables+0x198>)
 8000ae4:	681b      	ldr	r3, [r3, #0]
 8000ae6:	3230      	adds	r2, #48	; 0x30
 8000ae8:	b2d1      	uxtb	r1, r2
 8000aea:	4a23      	ldr	r2, [pc, #140]	; (8000b78 <storeCarVariables+0x1a4>)
 8000aec:	54d1      	strb	r1, [r2, r3]
	indexOfTXBuffer +=4;
 8000aee:	4b1f      	ldr	r3, [pc, #124]	; (8000b6c <storeCarVariables+0x198>)
 8000af0:	681b      	ldr	r3, [r3, #0]
 8000af2:	3304      	adds	r3, #4
 8000af4:	4a1d      	ldr	r2, [pc, #116]	; (8000b6c <storeCarVariables+0x198>)
 8000af6:	6013      	str	r3, [r2, #0]

	//store Left sign.
	bufferTX[indexOfTXBuffer] = carLeftSign + '0';
 8000af8:	4b23      	ldr	r3, [pc, #140]	; (8000b88 <storeCarVariables+0x1b4>)
 8000afa:	781a      	ldrb	r2, [r3, #0]
 8000afc:	4b1b      	ldr	r3, [pc, #108]	; (8000b6c <storeCarVariables+0x198>)
 8000afe:	681b      	ldr	r3, [r3, #0]
 8000b00:	3230      	adds	r2, #48	; 0x30
 8000b02:	b2d1      	uxtb	r1, r2
 8000b04:	4a1c      	ldr	r2, [pc, #112]	; (8000b78 <storeCarVariables+0x1a4>)
 8000b06:	54d1      	strb	r1, [r2, r3]
	indexOfTXBuffer +=4;
 8000b08:	4b18      	ldr	r3, [pc, #96]	; (8000b6c <storeCarVariables+0x198>)
 8000b0a:	681b      	ldr	r3, [r3, #0]
 8000b0c:	3304      	adds	r3, #4
 8000b0e:	4a17      	ldr	r2, [pc, #92]	; (8000b6c <storeCarVariables+0x198>)
 8000b10:	6013      	str	r3, [r2, #0]

	//store Door sign.
	bufferTX[indexOfTXBuffer] = carDoorSign + '0';
 8000b12:	4b1e      	ldr	r3, [pc, #120]	; (8000b8c <storeCarVariables+0x1b8>)
 8000b14:	781a      	ldrb	r2, [r3, #0]
 8000b16:	4b15      	ldr	r3, [pc, #84]	; (8000b6c <storeCarVariables+0x198>)
 8000b18:	681b      	ldr	r3, [r3, #0]
 8000b1a:	3230      	adds	r2, #48	; 0x30
 8000b1c:	b2d1      	uxtb	r1, r2
 8000b1e:	4a16      	ldr	r2, [pc, #88]	; (8000b78 <storeCarVariables+0x1a4>)
 8000b20:	54d1      	strb	r1, [r2, r3]
	indexOfTXBuffer +=4;
 8000b22:	4b12      	ldr	r3, [pc, #72]	; (8000b6c <storeCarVariables+0x198>)
 8000b24:	681b      	ldr	r3, [r3, #0]
 8000b26:	3304      	adds	r3, #4
 8000b28:	4a10      	ldr	r2, [pc, #64]	; (8000b6c <storeCarVariables+0x198>)
 8000b2a:	6013      	str	r3, [r2, #0]

	for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000b2c:	4b18      	ldr	r3, [pc, #96]	; (8000b90 <storeCarVariables+0x1bc>)
 8000b2e:	2200      	movs	r2, #0
 8000b30:	601a      	str	r2, [r3, #0]
 8000b32:	e011      	b.n	8000b58 <storeCarVariables+0x184>
	{
		totalTXBuffer[indexoFtotalTXBuffer] = bufferTX[globalIndex];
 8000b34:	4b16      	ldr	r3, [pc, #88]	; (8000b90 <storeCarVariables+0x1bc>)
 8000b36:	681a      	ldr	r2, [r3, #0]
 8000b38:	4b16      	ldr	r3, [pc, #88]	; (8000b94 <storeCarVariables+0x1c0>)
 8000b3a:	681b      	ldr	r3, [r3, #0]
 8000b3c:	490e      	ldr	r1, [pc, #56]	; (8000b78 <storeCarVariables+0x1a4>)
 8000b3e:	5c89      	ldrb	r1, [r1, r2]
 8000b40:	4a15      	ldr	r2, [pc, #84]	; (8000b98 <storeCarVariables+0x1c4>)
 8000b42:	54d1      	strb	r1, [r2, r3]
		indexoFtotalTXBuffer++;
 8000b44:	4b13      	ldr	r3, [pc, #76]	; (8000b94 <storeCarVariables+0x1c0>)
 8000b46:	681b      	ldr	r3, [r3, #0]
 8000b48:	3301      	adds	r3, #1
 8000b4a:	4a12      	ldr	r2, [pc, #72]	; (8000b94 <storeCarVariables+0x1c0>)
 8000b4c:	6013      	str	r3, [r2, #0]
	for(globalIndex = 0; globalIndex < TX_SIZE; globalIndex++)
 8000b4e:	4b10      	ldr	r3, [pc, #64]	; (8000b90 <storeCarVariables+0x1bc>)
 8000b50:	681b      	ldr	r3, [r3, #0]
 8000b52:	3301      	adds	r3, #1
 8000b54:	4a0e      	ldr	r2, [pc, #56]	; (8000b90 <storeCarVariables+0x1bc>)
 8000b56:	6013      	str	r3, [r2, #0]
 8000b58:	4b0d      	ldr	r3, [pc, #52]	; (8000b90 <storeCarVariables+0x1bc>)
 8000b5a:	681b      	ldr	r3, [r3, #0]
 8000b5c:	2b31      	cmp	r3, #49	; 0x31
 8000b5e:	dde9      	ble.n	8000b34 <storeCarVariables+0x160>
	}
	indexoFtotalTXBuffer = 0;
 8000b60:	4b0c      	ldr	r3, [pc, #48]	; (8000b94 <storeCarVariables+0x1c0>)
 8000b62:	2200      	movs	r2, #0
 8000b64:	601a      	str	r2, [r3, #0]
}
 8000b66:	bf00      	nop
 8000b68:	bd80      	pop	{r7, pc}
 8000b6a:	bf00      	nop
 8000b6c:	20000270 	.word	0x20000270
 8000b70:	2000023a 	.word	0x2000023a
 8000b74:	2000023b 	.word	0x2000023b
 8000b78:	20000208 	.word	0x20000208
 8000b7c:	2000027a 	.word	0x2000027a
 8000b80:	2000027b 	.word	0x2000027b
 8000b84:	20000280 	.word	0x20000280
 8000b88:	2000023c 	.word	0x2000023c
 8000b8c:	2000023d 	.word	0x2000023d
 8000b90:	20000274 	.word	0x20000274
 8000b94:	20000268 	.word	0x20000268
 8000b98:	20000284 	.word	0x20000284

08000b9c <resetVariables>:

void resetVariables()
{
 8000b9c:	b480      	push	{r7}
 8000b9e:	af00      	add	r7, sp, #0
	speed = 0;
 8000ba0:	4b10      	ldr	r3, [pc, #64]	; (8000be4 <resetVariables+0x48>)
 8000ba2:	2200      	movs	r2, #0
 8000ba4:	701a      	strb	r2, [r3, #0]
	accerlation = 0;
 8000ba6:	4b10      	ldr	r3, [pc, #64]	; (8000be8 <resetVariables+0x4c>)
 8000ba8:	2200      	movs	r2, #0
 8000baa:	701a      	strb	r2, [r3, #0]
	xAxis = 0;
 8000bac:	4b0f      	ldr	r3, [pc, #60]	; (8000bec <resetVariables+0x50>)
 8000bae:	2200      	movs	r2, #0
 8000bb0:	701a      	strb	r2, [r3, #0]
	yAxis = 0;
 8000bb2:	4b0f      	ldr	r3, [pc, #60]	; (8000bf0 <resetVariables+0x54>)
 8000bb4:	2200      	movs	r2, #0
 8000bb6:	701a      	strb	r2, [r3, #0]
	leftSignCheck  = 0;
 8000bb8:	4b0e      	ldr	r3, [pc, #56]	; (8000bf4 <resetVariables+0x58>)
 8000bba:	2200      	movs	r2, #0
 8000bbc:	701a      	strb	r2, [r3, #0]
	rightSignCheck = 0;
 8000bbe:	4b0e      	ldr	r3, [pc, #56]	; (8000bf8 <resetVariables+0x5c>)
 8000bc0:	2200      	movs	r2, #0
 8000bc2:	701a      	strb	r2, [r3, #0]
	doorSignCheck  = 0;
 8000bc4:	4b0d      	ldr	r3, [pc, #52]	; (8000bfc <resetVariables+0x60>)
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	701a      	strb	r2, [r3, #0]
	positionIndication = 0;
 8000bca:	4b0d      	ldr	r3, [pc, #52]	; (8000c00 <resetVariables+0x64>)
 8000bcc:	2200      	movs	r2, #0
 8000bce:	701a      	strb	r2, [r3, #0]
	carXAxis = 0;
 8000bd0:	4b0c      	ldr	r3, [pc, #48]	; (8000c04 <resetVariables+0x68>)
 8000bd2:	2200      	movs	r2, #0
 8000bd4:	701a      	strb	r2, [r3, #0]
	carYAxis = 0;
 8000bd6:	4b0c      	ldr	r3, [pc, #48]	; (8000c08 <resetVariables+0x6c>)
 8000bd8:	2200      	movs	r2, #0
 8000bda:	701a      	strb	r2, [r3, #0]
}
 8000bdc:	bf00      	nop
 8000bde:	46bd      	mov	sp, r7
 8000be0:	bc80      	pop	{r7}
 8000be2:	4770      	bx	lr
 8000be4:	20000278 	.word	0x20000278
 8000be8:	20000279 	.word	0x20000279
 8000bec:	2000027a 	.word	0x2000027a
 8000bf0:	2000027b 	.word	0x2000027b
 8000bf4:	2000027c 	.word	0x2000027c
 8000bf8:	2000027d 	.word	0x2000027d
 8000bfc:	2000027e 	.word	0x2000027e
 8000c00:	2000027f 	.word	0x2000027f
 8000c04:	20000281 	.word	0x20000281
 8000c08:	20000282 	.word	0x20000282

08000c0c <HAL_UART_TxCpltCallback>:
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8000c0c:	b480      	push	{r7}
 8000c0e:	b083      	sub	sp, #12
 8000c10:	af00      	add	r7, sp, #0
 8000c12:	6078      	str	r0, [r7, #4]


}
 8000c14:	bf00      	nop
 8000c16:	370c      	adds	r7, #12
 8000c18:	46bd      	mov	sp, r7
 8000c1a:	bc80      	pop	{r7}
 8000c1c:	4770      	bx	lr
	...

08000c20 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8000c20:	b580      	push	{r7, lr}
 8000c22:	b082      	sub	sp, #8
 8000c24:	af00      	add	r7, sp, #0
 8000c26:	6078      	str	r0, [r7, #4]

	indexOfRXBuffer = 0;
 8000c28:	4b73      	ldr	r3, [pc, #460]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000c2a:	2200      	movs	r2, #0
 8000c2c:	601a      	str	r2, [r3, #0]
	while(indexOfRXBuffer != sizeof(bufferRX))
 8000c2e:	e0ca      	b.n	8000dc6 <HAL_UART_RxCpltCallback+0x1a6>
	{
			if(bufferRX[indexOfRXBuffer] == 's')
 8000c30:	4b71      	ldr	r3, [pc, #452]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000c32:	681b      	ldr	r3, [r3, #0]
 8000c34:	4a71      	ldr	r2, [pc, #452]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000c36:	5cd3      	ldrb	r3, [r2, r3]
 8000c38:	2b73      	cmp	r3, #115	; 0x73
 8000c3a:	d10e      	bne.n	8000c5a <HAL_UART_RxCpltCallback+0x3a>
			{
				speed = calculateValue(indexOfRXBuffer + MAX_SPEED_DIGIT + 1);
 8000c3c:	4b6e      	ldr	r3, [pc, #440]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000c3e:	681b      	ldr	r3, [r3, #0]
 8000c40:	3304      	adds	r3, #4
 8000c42:	4618      	mov	r0, r3
 8000c44:	f7ff fa82 	bl	800014c <calculateValue>
 8000c48:	4603      	mov	r3, r0
 8000c4a:	461a      	mov	r2, r3
 8000c4c:	4b6c      	ldr	r3, [pc, #432]	; (8000e00 <HAL_UART_RxCpltCallback+0x1e0>)
 8000c4e:	701a      	strb	r2, [r3, #0]
				indexOfRXBuffer += MAX_SPEED_DIGIT + 1;
 8000c50:	4b69      	ldr	r3, [pc, #420]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000c52:	681b      	ldr	r3, [r3, #0]
 8000c54:	3304      	adds	r3, #4
 8000c56:	4a68      	ldr	r2, [pc, #416]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000c58:	6013      	str	r3, [r2, #0]
			}
			if(bufferRX[indexOfRXBuffer] == 'a')
 8000c5a:	4b67      	ldr	r3, [pc, #412]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000c5c:	681b      	ldr	r3, [r3, #0]
 8000c5e:	4a67      	ldr	r2, [pc, #412]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000c60:	5cd3      	ldrb	r3, [r2, r3]
 8000c62:	2b61      	cmp	r3, #97	; 0x61
 8000c64:	d11e      	bne.n	8000ca4 <HAL_UART_RxCpltCallback+0x84>
			{
				accerlation = calculateValue(indexOfRXBuffer + MAX_ACCERLATION_DIGIT + 2);
 8000c66:	4b64      	ldr	r3, [pc, #400]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000c68:	681b      	ldr	r3, [r3, #0]
 8000c6a:	3304      	adds	r3, #4
 8000c6c:	4618      	mov	r0, r3
 8000c6e:	f7ff fa6d 	bl	800014c <calculateValue>
 8000c72:	4603      	mov	r3, r0
 8000c74:	b25a      	sxtb	r2, r3
 8000c76:	4b63      	ldr	r3, [pc, #396]	; (8000e04 <HAL_UART_RxCpltCallback+0x1e4>)
 8000c78:	701a      	strb	r2, [r3, #0]
				if(bufferRX[indexOfRXBuffer + 2] == '-') accerlation *= -1;
 8000c7a:	4b5f      	ldr	r3, [pc, #380]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000c7c:	681b      	ldr	r3, [r3, #0]
 8000c7e:	3302      	adds	r3, #2
 8000c80:	4a5e      	ldr	r2, [pc, #376]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000c82:	5cd3      	ldrb	r3, [r2, r3]
 8000c84:	2b2d      	cmp	r3, #45	; 0x2d
 8000c86:	d108      	bne.n	8000c9a <HAL_UART_RxCpltCallback+0x7a>
 8000c88:	4b5e      	ldr	r3, [pc, #376]	; (8000e04 <HAL_UART_RxCpltCallback+0x1e4>)
 8000c8a:	f993 3000 	ldrsb.w	r3, [r3]
 8000c8e:	b2db      	uxtb	r3, r3
 8000c90:	425b      	negs	r3, r3
 8000c92:	b2db      	uxtb	r3, r3
 8000c94:	b25a      	sxtb	r2, r3
 8000c96:	4b5b      	ldr	r3, [pc, #364]	; (8000e04 <HAL_UART_RxCpltCallback+0x1e4>)
 8000c98:	701a      	strb	r2, [r3, #0]
				indexOfRXBuffer += MAX_ACCERLATION_DIGIT + 2;
 8000c9a:	4b57      	ldr	r3, [pc, #348]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000c9c:	681b      	ldr	r3, [r3, #0]
 8000c9e:	3304      	adds	r3, #4
 8000ca0:	4a55      	ldr	r2, [pc, #340]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000ca2:	6013      	str	r3, [r2, #0]
			}
			if(bufferRX[indexOfRXBuffer] == 'x')
 8000ca4:	4b54      	ldr	r3, [pc, #336]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000ca6:	681b      	ldr	r3, [r3, #0]
 8000ca8:	4a54      	ldr	r2, [pc, #336]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000caa:	5cd3      	ldrb	r3, [r2, r3]
 8000cac:	2b78      	cmp	r3, #120	; 0x78
 8000cae:	d11e      	bne.n	8000cee <HAL_UART_RxCpltCallback+0xce>
			{

				xAxis = bufferRX[indexOfRXBuffer + MAX_X_AXIS_DIGIT + 2] - '0';
 8000cb0:	4b51      	ldr	r3, [pc, #324]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000cb2:	681b      	ldr	r3, [r3, #0]
 8000cb4:	3303      	adds	r3, #3
 8000cb6:	4a51      	ldr	r2, [pc, #324]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000cb8:	5cd3      	ldrb	r3, [r2, r3]
 8000cba:	3b30      	subs	r3, #48	; 0x30
 8000cbc:	b2db      	uxtb	r3, r3
 8000cbe:	b25a      	sxtb	r2, r3
 8000cc0:	4b51      	ldr	r3, [pc, #324]	; (8000e08 <HAL_UART_RxCpltCallback+0x1e8>)
 8000cc2:	701a      	strb	r2, [r3, #0]
				if(bufferRX[indexOfRXBuffer + 2] == '-') xAxis *= -1;
 8000cc4:	4b4c      	ldr	r3, [pc, #304]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000cc6:	681b      	ldr	r3, [r3, #0]
 8000cc8:	3302      	adds	r3, #2
 8000cca:	4a4c      	ldr	r2, [pc, #304]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000ccc:	5cd3      	ldrb	r3, [r2, r3]
 8000cce:	2b2d      	cmp	r3, #45	; 0x2d
 8000cd0:	d108      	bne.n	8000ce4 <HAL_UART_RxCpltCallback+0xc4>
 8000cd2:	4b4d      	ldr	r3, [pc, #308]	; (8000e08 <HAL_UART_RxCpltCallback+0x1e8>)
 8000cd4:	f993 3000 	ldrsb.w	r3, [r3]
 8000cd8:	b2db      	uxtb	r3, r3
 8000cda:	425b      	negs	r3, r3
 8000cdc:	b2db      	uxtb	r3, r3
 8000cde:	b25a      	sxtb	r2, r3
 8000ce0:	4b49      	ldr	r3, [pc, #292]	; (8000e08 <HAL_UART_RxCpltCallback+0x1e8>)
 8000ce2:	701a      	strb	r2, [r3, #0]
				indexOfRXBuffer += MAX_X_AXIS_DIGIT + 2;
 8000ce4:	4b44      	ldr	r3, [pc, #272]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000ce6:	681b      	ldr	r3, [r3, #0]
 8000ce8:	3303      	adds	r3, #3
 8000cea:	4a43      	ldr	r2, [pc, #268]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000cec:	6013      	str	r3, [r2, #0]

			}
			if(bufferRX[indexOfRXBuffer] == 'y')
 8000cee:	4b42      	ldr	r3, [pc, #264]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000cf0:	681b      	ldr	r3, [r3, #0]
 8000cf2:	4a42      	ldr	r2, [pc, #264]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000cf4:	5cd3      	ldrb	r3, [r2, r3]
 8000cf6:	2b79      	cmp	r3, #121	; 0x79
 8000cf8:	d11e      	bne.n	8000d38 <HAL_UART_RxCpltCallback+0x118>
			{

				yAxis = bufferRX[indexOfRXBuffer + MAX_Y_AXIS_DIGIT + 2] - '0';
 8000cfa:	4b3f      	ldr	r3, [pc, #252]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000cfc:	681b      	ldr	r3, [r3, #0]
 8000cfe:	3303      	adds	r3, #3
 8000d00:	4a3e      	ldr	r2, [pc, #248]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000d02:	5cd3      	ldrb	r3, [r2, r3]
 8000d04:	3b30      	subs	r3, #48	; 0x30
 8000d06:	b2db      	uxtb	r3, r3
 8000d08:	b25a      	sxtb	r2, r3
 8000d0a:	4b40      	ldr	r3, [pc, #256]	; (8000e0c <HAL_UART_RxCpltCallback+0x1ec>)
 8000d0c:	701a      	strb	r2, [r3, #0]
				if(bufferRX[indexOfRXBuffer + 2] == '-') yAxis *= -1;
 8000d0e:	4b3a      	ldr	r3, [pc, #232]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000d10:	681b      	ldr	r3, [r3, #0]
 8000d12:	3302      	adds	r3, #2
 8000d14:	4a39      	ldr	r2, [pc, #228]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000d16:	5cd3      	ldrb	r3, [r2, r3]
 8000d18:	2b2d      	cmp	r3, #45	; 0x2d
 8000d1a:	d108      	bne.n	8000d2e <HAL_UART_RxCpltCallback+0x10e>
 8000d1c:	4b3b      	ldr	r3, [pc, #236]	; (8000e0c <HAL_UART_RxCpltCallback+0x1ec>)
 8000d1e:	f993 3000 	ldrsb.w	r3, [r3]
 8000d22:	b2db      	uxtb	r3, r3
 8000d24:	425b      	negs	r3, r3
 8000d26:	b2db      	uxtb	r3, r3
 8000d28:	b25a      	sxtb	r2, r3
 8000d2a:	4b38      	ldr	r3, [pc, #224]	; (8000e0c <HAL_UART_RxCpltCallback+0x1ec>)
 8000d2c:	701a      	strb	r2, [r3, #0]
				indexOfRXBuffer += MAX_Y_AXIS_DIGIT + 2;
 8000d2e:	4b32      	ldr	r3, [pc, #200]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000d30:	681b      	ldr	r3, [r3, #0]
 8000d32:	3303      	adds	r3, #3
 8000d34:	4a30      	ldr	r2, [pc, #192]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000d36:	6013      	str	r3, [r2, #0]
			}
			if(bufferRX[indexOfRXBuffer] == 'l')
 8000d38:	4b2f      	ldr	r3, [pc, #188]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000d3a:	681b      	ldr	r3, [r3, #0]
 8000d3c:	4a2f      	ldr	r2, [pc, #188]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000d3e:	5cd3      	ldrb	r3, [r2, r3]
 8000d40:	2b6c      	cmp	r3, #108	; 0x6c
 8000d42:	d10d      	bne.n	8000d60 <HAL_UART_RxCpltCallback+0x140>
			{
				leftSignCheck = bufferRX[indexOfRXBuffer + 2] - '0';
 8000d44:	4b2c      	ldr	r3, [pc, #176]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000d46:	681b      	ldr	r3, [r3, #0]
 8000d48:	3302      	adds	r3, #2
 8000d4a:	4a2c      	ldr	r2, [pc, #176]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000d4c:	5cd3      	ldrb	r3, [r2, r3]
 8000d4e:	3b30      	subs	r3, #48	; 0x30
 8000d50:	b2da      	uxtb	r2, r3
 8000d52:	4b2f      	ldr	r3, [pc, #188]	; (8000e10 <HAL_UART_RxCpltCallback+0x1f0>)
 8000d54:	701a      	strb	r2, [r3, #0]
				indexOfRXBuffer += 2;
 8000d56:	4b28      	ldr	r3, [pc, #160]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000d58:	681b      	ldr	r3, [r3, #0]
 8000d5a:	3302      	adds	r3, #2
 8000d5c:	4a26      	ldr	r2, [pc, #152]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000d5e:	6013      	str	r3, [r2, #0]
			}
			if(bufferRX[indexOfRXBuffer] == 'r')
 8000d60:	4b25      	ldr	r3, [pc, #148]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000d62:	681b      	ldr	r3, [r3, #0]
 8000d64:	4a25      	ldr	r2, [pc, #148]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000d66:	5cd3      	ldrb	r3, [r2, r3]
 8000d68:	2b72      	cmp	r3, #114	; 0x72
 8000d6a:	d10d      	bne.n	8000d88 <HAL_UART_RxCpltCallback+0x168>
			{
				rightSignCheck = bufferRX[indexOfRXBuffer + 2] - '0';
 8000d6c:	4b22      	ldr	r3, [pc, #136]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000d6e:	681b      	ldr	r3, [r3, #0]
 8000d70:	3302      	adds	r3, #2
 8000d72:	4a22      	ldr	r2, [pc, #136]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000d74:	5cd3      	ldrb	r3, [r2, r3]
 8000d76:	3b30      	subs	r3, #48	; 0x30
 8000d78:	b2da      	uxtb	r2, r3
 8000d7a:	4b26      	ldr	r3, [pc, #152]	; (8000e14 <HAL_UART_RxCpltCallback+0x1f4>)
 8000d7c:	701a      	strb	r2, [r3, #0]
				indexOfRXBuffer += 2;
 8000d7e:	4b1e      	ldr	r3, [pc, #120]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000d80:	681b      	ldr	r3, [r3, #0]
 8000d82:	3302      	adds	r3, #2
 8000d84:	4a1c      	ldr	r2, [pc, #112]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000d86:	6013      	str	r3, [r2, #0]
			}
			if(bufferRX[indexOfRXBuffer] == 'd')
 8000d88:	4b1b      	ldr	r3, [pc, #108]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000d8a:	681b      	ldr	r3, [r3, #0]
 8000d8c:	4a1b      	ldr	r2, [pc, #108]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000d8e:	5cd3      	ldrb	r3, [r2, r3]
 8000d90:	2b64      	cmp	r3, #100	; 0x64
 8000d92:	d10d      	bne.n	8000db0 <HAL_UART_RxCpltCallback+0x190>
			{
				doorSignCheck = bufferRX[indexOfRXBuffer + 2] - '0';
 8000d94:	4b18      	ldr	r3, [pc, #96]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000d96:	681b      	ldr	r3, [r3, #0]
 8000d98:	3302      	adds	r3, #2
 8000d9a:	4a18      	ldr	r2, [pc, #96]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000d9c:	5cd3      	ldrb	r3, [r2, r3]
 8000d9e:	3b30      	subs	r3, #48	; 0x30
 8000da0:	b2da      	uxtb	r2, r3
 8000da2:	4b1d      	ldr	r3, [pc, #116]	; (8000e18 <HAL_UART_RxCpltCallback+0x1f8>)
 8000da4:	701a      	strb	r2, [r3, #0]
				indexOfRXBuffer += 2;
 8000da6:	4b14      	ldr	r3, [pc, #80]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000da8:	681b      	ldr	r3, [r3, #0]
 8000daa:	3302      	adds	r3, #2
 8000dac:	4a12      	ldr	r2, [pc, #72]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000dae:	6013      	str	r3, [r2, #0]
			}
			if(bufferRX[indexOfRXBuffer] == '.')
 8000db0:	4b11      	ldr	r3, [pc, #68]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000db2:	681b      	ldr	r3, [r3, #0]
 8000db4:	4a11      	ldr	r2, [pc, #68]	; (8000dfc <HAL_UART_RxCpltCallback+0x1dc>)
 8000db6:	5cd3      	ldrb	r3, [r2, r3]
 8000db8:	2b2e      	cmp	r3, #46	; 0x2e
 8000dba:	d00a      	beq.n	8000dd2 <HAL_UART_RxCpltCallback+0x1b2>
				break;

		indexOfRXBuffer++;
 8000dbc:	4b0e      	ldr	r3, [pc, #56]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000dbe:	681b      	ldr	r3, [r3, #0]
 8000dc0:	3301      	adds	r3, #1
 8000dc2:	4a0d      	ldr	r2, [pc, #52]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000dc4:	6013      	str	r3, [r2, #0]
	while(indexOfRXBuffer != sizeof(bufferRX))
 8000dc6:	4b0c      	ldr	r3, [pc, #48]	; (8000df8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000dc8:	681b      	ldr	r3, [r3, #0]
 8000dca:	2b32      	cmp	r3, #50	; 0x32
 8000dcc:	f47f af30 	bne.w	8000c30 <HAL_UART_RxCpltCallback+0x10>
 8000dd0:	e000      	b.n	8000dd4 <HAL_UART_RxCpltCallback+0x1b4>
				break;
 8000dd2:	bf00      	nop

	}

	indicatePosition();
 8000dd4:	f7ff fa5e 	bl	8000294 <indicatePosition>
	sendWarning();
 8000dd8:	f7ff fad0 	bl	800037c <sendWarning>

    storeCarVariables();
 8000ddc:	f7ff fdfa 	bl	80009d4 <storeCarVariables>
    HAL_UART_Transmit(&huart1, totalTXBuffer, sizeof(totalTXBuffer), 0xFF);
 8000de0:	23ff      	movs	r3, #255	; 0xff
 8000de2:	22c8      	movs	r2, #200	; 0xc8
 8000de4:	490d      	ldr	r1, [pc, #52]	; (8000e1c <HAL_UART_RxCpltCallback+0x1fc>)
 8000de6:	480e      	ldr	r0, [pc, #56]	; (8000e20 <HAL_UART_RxCpltCallback+0x200>)
 8000de8:	f001 f9bb 	bl	8002162 <HAL_UART_Transmit>
    resetVariables();
 8000dec:	f7ff fed6 	bl	8000b9c <resetVariables>

}
 8000df0:	bf00      	nop
 8000df2:	3708      	adds	r7, #8
 8000df4:	46bd      	mov	sp, r7
 8000df6:	bd80      	pop	{r7, pc}
 8000df8:	2000026c 	.word	0x2000026c
 8000dfc:	20000390 	.word	0x20000390
 8000e00:	20000278 	.word	0x20000278
 8000e04:	20000279 	.word	0x20000279
 8000e08:	2000027a 	.word	0x2000027a
 8000e0c:	2000027b 	.word	0x2000027b
 8000e10:	2000027c 	.word	0x2000027c
 8000e14:	2000027d 	.word	0x2000027d
 8000e18:	2000027e 	.word	0x2000027e
 8000e1c:	20000284 	.word	0x20000284
 8000e20:	2000034c 	.word	0x2000034c

08000e24 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000e24:	b580      	push	{r7, lr}
 8000e26:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */
	for(indexoFtotalTXBuffer = 0; indexoFtotalTXBuffer < 200; indexoFtotalTXBuffer++)
 8000e28:	4b11      	ldr	r3, [pc, #68]	; (8000e70 <main+0x4c>)
 8000e2a:	2200      	movs	r2, #0
 8000e2c:	601a      	str	r2, [r3, #0]
 8000e2e:	e009      	b.n	8000e44 <main+0x20>
		totalTXBuffer[indexoFtotalTXBuffer] = '?';
 8000e30:	4b0f      	ldr	r3, [pc, #60]	; (8000e70 <main+0x4c>)
 8000e32:	681b      	ldr	r3, [r3, #0]
 8000e34:	4a0f      	ldr	r2, [pc, #60]	; (8000e74 <main+0x50>)
 8000e36:	213f      	movs	r1, #63	; 0x3f
 8000e38:	54d1      	strb	r1, [r2, r3]
	for(indexoFtotalTXBuffer = 0; indexoFtotalTXBuffer < 200; indexoFtotalTXBuffer++)
 8000e3a:	4b0d      	ldr	r3, [pc, #52]	; (8000e70 <main+0x4c>)
 8000e3c:	681b      	ldr	r3, [r3, #0]
 8000e3e:	3301      	adds	r3, #1
 8000e40:	4a0b      	ldr	r2, [pc, #44]	; (8000e70 <main+0x4c>)
 8000e42:	6013      	str	r3, [r2, #0]
 8000e44:	4b0a      	ldr	r3, [pc, #40]	; (8000e70 <main+0x4c>)
 8000e46:	681b      	ldr	r3, [r3, #0]
 8000e48:	2bc7      	cmp	r3, #199	; 0xc7
 8000e4a:	ddf1      	ble.n	8000e30 <main+0xc>
	indexoFtotalTXBuffer = 0;
 8000e4c:	4b08      	ldr	r3, [pc, #32]	; (8000e70 <main+0x4c>)
 8000e4e:	2200      	movs	r2, #0
 8000e50:	601a      	str	r2, [r3, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000e52:	f000 f97b 	bl	800114c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000e56:	f000 f813 	bl	8000e80 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000e5a:	f000 f877 	bl	8000f4c <MX_GPIO_Init>
  MX_USART1_UART_Init();
 8000e5e:	f000 f84b 	bl	8000ef8 <MX_USART1_UART_Init>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	 HAL_UART_Receive_IT(&huart1, bufferRX, sizeof(bufferRX));
 8000e62:	2232      	movs	r2, #50	; 0x32
 8000e64:	4904      	ldr	r1, [pc, #16]	; (8000e78 <main+0x54>)
 8000e66:	4805      	ldr	r0, [pc, #20]	; (8000e7c <main+0x58>)
 8000e68:	f001 fa0d 	bl	8002286 <HAL_UART_Receive_IT>
 8000e6c:	e7f9      	b.n	8000e62 <main+0x3e>
 8000e6e:	bf00      	nop
 8000e70:	20000268 	.word	0x20000268
 8000e74:	20000284 	.word	0x20000284
 8000e78:	20000390 	.word	0x20000390
 8000e7c:	2000034c 	.word	0x2000034c

08000e80 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000e80:	b580      	push	{r7, lr}
 8000e82:	b090      	sub	sp, #64	; 0x40
 8000e84:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000e86:	f107 0318 	add.w	r3, r7, #24
 8000e8a:	2228      	movs	r2, #40	; 0x28
 8000e8c:	2100      	movs	r1, #0
 8000e8e:	4618      	mov	r0, r3
 8000e90:	f001 fe6e 	bl	8002b70 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000e94:	1d3b      	adds	r3, r7, #4
 8000e96:	2200      	movs	r2, #0
 8000e98:	601a      	str	r2, [r3, #0]
 8000e9a:	605a      	str	r2, [r3, #4]
 8000e9c:	609a      	str	r2, [r3, #8]
 8000e9e:	60da      	str	r2, [r3, #12]
 8000ea0:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000ea2:	2302      	movs	r3, #2
 8000ea4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000ea6:	2301      	movs	r3, #1
 8000ea8:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000eaa:	2310      	movs	r3, #16
 8000eac:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000eae:	2300      	movs	r3, #0
 8000eb0:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000eb2:	f107 0318 	add.w	r3, r7, #24
 8000eb6:	4618      	mov	r0, r3
 8000eb8:	f000 fcec 	bl	8001894 <HAL_RCC_OscConfig>
 8000ebc:	4603      	mov	r3, r0
 8000ebe:	2b00      	cmp	r3, #0
 8000ec0:	d001      	beq.n	8000ec6 <SystemClock_Config+0x46>
  {
    Error_Handler();
 8000ec2:	f000 f859 	bl	8000f78 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000ec6:	230f      	movs	r3, #15
 8000ec8:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000eca:	2300      	movs	r3, #0
 8000ecc:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000ece:	2300      	movs	r3, #0
 8000ed0:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000ed2:	2300      	movs	r3, #0
 8000ed4:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000ed6:	2300      	movs	r3, #0
 8000ed8:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000eda:	1d3b      	adds	r3, r7, #4
 8000edc:	2100      	movs	r1, #0
 8000ede:	4618      	mov	r0, r3
 8000ee0:	f000 ff58 	bl	8001d94 <HAL_RCC_ClockConfig>
 8000ee4:	4603      	mov	r3, r0
 8000ee6:	2b00      	cmp	r3, #0
 8000ee8:	d001      	beq.n	8000eee <SystemClock_Config+0x6e>
  {
    Error_Handler();
 8000eea:	f000 f845 	bl	8000f78 <Error_Handler>
  }
}
 8000eee:	bf00      	nop
 8000ef0:	3740      	adds	r7, #64	; 0x40
 8000ef2:	46bd      	mov	sp, r7
 8000ef4:	bd80      	pop	{r7, pc}
	...

08000ef8 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000efc:	4b11      	ldr	r3, [pc, #68]	; (8000f44 <MX_USART1_UART_Init+0x4c>)
 8000efe:	4a12      	ldr	r2, [pc, #72]	; (8000f48 <MX_USART1_UART_Init+0x50>)
 8000f00:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8000f02:	4b10      	ldr	r3, [pc, #64]	; (8000f44 <MX_USART1_UART_Init+0x4c>)
 8000f04:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000f08:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000f0a:	4b0e      	ldr	r3, [pc, #56]	; (8000f44 <MX_USART1_UART_Init+0x4c>)
 8000f0c:	2200      	movs	r2, #0
 8000f0e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000f10:	4b0c      	ldr	r3, [pc, #48]	; (8000f44 <MX_USART1_UART_Init+0x4c>)
 8000f12:	2200      	movs	r2, #0
 8000f14:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000f16:	4b0b      	ldr	r3, [pc, #44]	; (8000f44 <MX_USART1_UART_Init+0x4c>)
 8000f18:	2200      	movs	r2, #0
 8000f1a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000f1c:	4b09      	ldr	r3, [pc, #36]	; (8000f44 <MX_USART1_UART_Init+0x4c>)
 8000f1e:	220c      	movs	r2, #12
 8000f20:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000f22:	4b08      	ldr	r3, [pc, #32]	; (8000f44 <MX_USART1_UART_Init+0x4c>)
 8000f24:	2200      	movs	r2, #0
 8000f26:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000f28:	4b06      	ldr	r3, [pc, #24]	; (8000f44 <MX_USART1_UART_Init+0x4c>)
 8000f2a:	2200      	movs	r2, #0
 8000f2c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000f2e:	4805      	ldr	r0, [pc, #20]	; (8000f44 <MX_USART1_UART_Init+0x4c>)
 8000f30:	f001 f8ca 	bl	80020c8 <HAL_UART_Init>
 8000f34:	4603      	mov	r3, r0
 8000f36:	2b00      	cmp	r3, #0
 8000f38:	d001      	beq.n	8000f3e <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8000f3a:	f000 f81d 	bl	8000f78 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000f3e:	bf00      	nop
 8000f40:	bd80      	pop	{r7, pc}
 8000f42:	bf00      	nop
 8000f44:	2000034c 	.word	0x2000034c
 8000f48:	40013800 	.word	0x40013800

08000f4c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000f4c:	b480      	push	{r7}
 8000f4e:	b083      	sub	sp, #12
 8000f50:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000f52:	4b08      	ldr	r3, [pc, #32]	; (8000f74 <MX_GPIO_Init+0x28>)
 8000f54:	699b      	ldr	r3, [r3, #24]
 8000f56:	4a07      	ldr	r2, [pc, #28]	; (8000f74 <MX_GPIO_Init+0x28>)
 8000f58:	f043 0304 	orr.w	r3, r3, #4
 8000f5c:	6193      	str	r3, [r2, #24]
 8000f5e:	4b05      	ldr	r3, [pc, #20]	; (8000f74 <MX_GPIO_Init+0x28>)
 8000f60:	699b      	ldr	r3, [r3, #24]
 8000f62:	f003 0304 	and.w	r3, r3, #4
 8000f66:	607b      	str	r3, [r7, #4]
 8000f68:	687b      	ldr	r3, [r7, #4]

}
 8000f6a:	bf00      	nop
 8000f6c:	370c      	adds	r7, #12
 8000f6e:	46bd      	mov	sp, r7
 8000f70:	bc80      	pop	{r7}
 8000f72:	4770      	bx	lr
 8000f74:	40021000 	.word	0x40021000

08000f78 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000f78:	b480      	push	{r7}
 8000f7a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000f7c:	b672      	cpsid	i
}
 8000f7e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000f80:	e7fe      	b.n	8000f80 <Error_Handler+0x8>
	...

08000f84 <HAL_MspInit>:
 8000f84:	b480      	push	{r7}
 8000f86:	b085      	sub	sp, #20
 8000f88:	af00      	add	r7, sp, #0
 8000f8a:	4b15      	ldr	r3, [pc, #84]	; (8000fe0 <HAL_MspInit+0x5c>)
 8000f8c:	699b      	ldr	r3, [r3, #24]
 8000f8e:	4a14      	ldr	r2, [pc, #80]	; (8000fe0 <HAL_MspInit+0x5c>)
 8000f90:	f043 0301 	orr.w	r3, r3, #1
 8000f94:	6193      	str	r3, [r2, #24]
 8000f96:	4b12      	ldr	r3, [pc, #72]	; (8000fe0 <HAL_MspInit+0x5c>)
 8000f98:	699b      	ldr	r3, [r3, #24]
 8000f9a:	f003 0301 	and.w	r3, r3, #1
 8000f9e:	60bb      	str	r3, [r7, #8]
 8000fa0:	68bb      	ldr	r3, [r7, #8]
 8000fa2:	4b0f      	ldr	r3, [pc, #60]	; (8000fe0 <HAL_MspInit+0x5c>)
 8000fa4:	69db      	ldr	r3, [r3, #28]
 8000fa6:	4a0e      	ldr	r2, [pc, #56]	; (8000fe0 <HAL_MspInit+0x5c>)
 8000fa8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000fac:	61d3      	str	r3, [r2, #28]
 8000fae:	4b0c      	ldr	r3, [pc, #48]	; (8000fe0 <HAL_MspInit+0x5c>)
 8000fb0:	69db      	ldr	r3, [r3, #28]
 8000fb2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000fb6:	607b      	str	r3, [r7, #4]
 8000fb8:	687b      	ldr	r3, [r7, #4]
 8000fba:	4b0a      	ldr	r3, [pc, #40]	; (8000fe4 <HAL_MspInit+0x60>)
 8000fbc:	685b      	ldr	r3, [r3, #4]
 8000fbe:	60fb      	str	r3, [r7, #12]
 8000fc0:	68fb      	ldr	r3, [r7, #12]
 8000fc2:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000fc6:	60fb      	str	r3, [r7, #12]
 8000fc8:	68fb      	ldr	r3, [r7, #12]
 8000fca:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000fce:	60fb      	str	r3, [r7, #12]
 8000fd0:	4a04      	ldr	r2, [pc, #16]	; (8000fe4 <HAL_MspInit+0x60>)
 8000fd2:	68fb      	ldr	r3, [r7, #12]
 8000fd4:	6053      	str	r3, [r2, #4]
 8000fd6:	bf00      	nop
 8000fd8:	3714      	adds	r7, #20
 8000fda:	46bd      	mov	sp, r7
 8000fdc:	bc80      	pop	{r7}
 8000fde:	4770      	bx	lr
 8000fe0:	40021000 	.word	0x40021000
 8000fe4:	40010000 	.word	0x40010000

08000fe8 <HAL_UART_MspInit>:
 8000fe8:	b580      	push	{r7, lr}
 8000fea:	b088      	sub	sp, #32
 8000fec:	af00      	add	r7, sp, #0
 8000fee:	6078      	str	r0, [r7, #4]
 8000ff0:	f107 0310 	add.w	r3, r7, #16
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	601a      	str	r2, [r3, #0]
 8000ff8:	605a      	str	r2, [r3, #4]
 8000ffa:	609a      	str	r2, [r3, #8]
 8000ffc:	60da      	str	r2, [r3, #12]
 8000ffe:	687b      	ldr	r3, [r7, #4]
 8001000:	681b      	ldr	r3, [r3, #0]
 8001002:	4a20      	ldr	r2, [pc, #128]	; (8001084 <HAL_UART_MspInit+0x9c>)
 8001004:	4293      	cmp	r3, r2
 8001006:	d139      	bne.n	800107c <HAL_UART_MspInit+0x94>
 8001008:	4b1f      	ldr	r3, [pc, #124]	; (8001088 <HAL_UART_MspInit+0xa0>)
 800100a:	699b      	ldr	r3, [r3, #24]
 800100c:	4a1e      	ldr	r2, [pc, #120]	; (8001088 <HAL_UART_MspInit+0xa0>)
 800100e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001012:	6193      	str	r3, [r2, #24]
 8001014:	4b1c      	ldr	r3, [pc, #112]	; (8001088 <HAL_UART_MspInit+0xa0>)
 8001016:	699b      	ldr	r3, [r3, #24]
 8001018:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800101c:	60fb      	str	r3, [r7, #12]
 800101e:	68fb      	ldr	r3, [r7, #12]
 8001020:	4b19      	ldr	r3, [pc, #100]	; (8001088 <HAL_UART_MspInit+0xa0>)
 8001022:	699b      	ldr	r3, [r3, #24]
 8001024:	4a18      	ldr	r2, [pc, #96]	; (8001088 <HAL_UART_MspInit+0xa0>)
 8001026:	f043 0304 	orr.w	r3, r3, #4
 800102a:	6193      	str	r3, [r2, #24]
 800102c:	4b16      	ldr	r3, [pc, #88]	; (8001088 <HAL_UART_MspInit+0xa0>)
 800102e:	699b      	ldr	r3, [r3, #24]
 8001030:	f003 0304 	and.w	r3, r3, #4
 8001034:	60bb      	str	r3, [r7, #8]
 8001036:	68bb      	ldr	r3, [r7, #8]
 8001038:	f44f 7300 	mov.w	r3, #512	; 0x200
 800103c:	613b      	str	r3, [r7, #16]
 800103e:	2302      	movs	r3, #2
 8001040:	617b      	str	r3, [r7, #20]
 8001042:	2303      	movs	r3, #3
 8001044:	61fb      	str	r3, [r7, #28]
 8001046:	f107 0310 	add.w	r3, r7, #16
 800104a:	4619      	mov	r1, r3
 800104c:	480f      	ldr	r0, [pc, #60]	; (800108c <HAL_UART_MspInit+0xa4>)
 800104e:	f000 fa9d 	bl	800158c <HAL_GPIO_Init>
 8001052:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001056:	613b      	str	r3, [r7, #16]
 8001058:	2300      	movs	r3, #0
 800105a:	617b      	str	r3, [r7, #20]
 800105c:	2300      	movs	r3, #0
 800105e:	61bb      	str	r3, [r7, #24]
 8001060:	f107 0310 	add.w	r3, r7, #16
 8001064:	4619      	mov	r1, r3
 8001066:	4809      	ldr	r0, [pc, #36]	; (800108c <HAL_UART_MspInit+0xa4>)
 8001068:	f000 fa90 	bl	800158c <HAL_GPIO_Init>
 800106c:	2200      	movs	r2, #0
 800106e:	2100      	movs	r1, #0
 8001070:	2025      	movs	r0, #37	; 0x25
 8001072:	f000 f9a4 	bl	80013be <HAL_NVIC_SetPriority>
 8001076:	2025      	movs	r0, #37	; 0x25
 8001078:	f000 f9bd 	bl	80013f6 <HAL_NVIC_EnableIRQ>
 800107c:	bf00      	nop
 800107e:	3720      	adds	r7, #32
 8001080:	46bd      	mov	sp, r7
 8001082:	bd80      	pop	{r7, pc}
 8001084:	40013800 	.word	0x40013800
 8001088:	40021000 	.word	0x40021000
 800108c:	40010800 	.word	0x40010800

08001090 <NMI_Handler>:
 8001090:	b480      	push	{r7}
 8001092:	af00      	add	r7, sp, #0
 8001094:	e7fe      	b.n	8001094 <NMI_Handler+0x4>

08001096 <HardFault_Handler>:
 8001096:	b480      	push	{r7}
 8001098:	af00      	add	r7, sp, #0
 800109a:	e7fe      	b.n	800109a <HardFault_Handler+0x4>

0800109c <MemManage_Handler>:
 800109c:	b480      	push	{r7}
 800109e:	af00      	add	r7, sp, #0
 80010a0:	e7fe      	b.n	80010a0 <MemManage_Handler+0x4>

080010a2 <BusFault_Handler>:
 80010a2:	b480      	push	{r7}
 80010a4:	af00      	add	r7, sp, #0
 80010a6:	e7fe      	b.n	80010a6 <BusFault_Handler+0x4>

080010a8 <UsageFault_Handler>:
 80010a8:	b480      	push	{r7}
 80010aa:	af00      	add	r7, sp, #0
 80010ac:	e7fe      	b.n	80010ac <UsageFault_Handler+0x4>

080010ae <SVC_Handler>:
 80010ae:	b480      	push	{r7}
 80010b0:	af00      	add	r7, sp, #0
 80010b2:	bf00      	nop
 80010b4:	46bd      	mov	sp, r7
 80010b6:	bc80      	pop	{r7}
 80010b8:	4770      	bx	lr

080010ba <DebugMon_Handler>:
 80010ba:	b480      	push	{r7}
 80010bc:	af00      	add	r7, sp, #0
 80010be:	bf00      	nop
 80010c0:	46bd      	mov	sp, r7
 80010c2:	bc80      	pop	{r7}
 80010c4:	4770      	bx	lr

080010c6 <PendSV_Handler>:
 80010c6:	b480      	push	{r7}
 80010c8:	af00      	add	r7, sp, #0
 80010ca:	bf00      	nop
 80010cc:	46bd      	mov	sp, r7
 80010ce:	bc80      	pop	{r7}
 80010d0:	4770      	bx	lr

080010d2 <SysTick_Handler>:
 80010d2:	b580      	push	{r7, lr}
 80010d4:	af00      	add	r7, sp, #0
 80010d6:	f000 f87f 	bl	80011d8 <HAL_IncTick>
 80010da:	bf00      	nop
 80010dc:	bd80      	pop	{r7, pc}
	...

080010e0 <USART1_IRQHandler>:
 80010e0:	b580      	push	{r7, lr}
 80010e2:	af00      	add	r7, sp, #0
 80010e4:	4802      	ldr	r0, [pc, #8]	; (80010f0 <USART1_IRQHandler+0x10>)
 80010e6:	f001 f8ff 	bl	80022e8 <HAL_UART_IRQHandler>
 80010ea:	bf00      	nop
 80010ec:	bd80      	pop	{r7, pc}
 80010ee:	bf00      	nop
 80010f0:	2000034c 	.word	0x2000034c

080010f4 <SystemInit>:
 80010f4:	b480      	push	{r7}
 80010f6:	af00      	add	r7, sp, #0
 80010f8:	bf00      	nop
 80010fa:	46bd      	mov	sp, r7
 80010fc:	bc80      	pop	{r7}
 80010fe:	4770      	bx	lr

08001100 <Reset_Handler>:
 8001100:	480c      	ldr	r0, [pc, #48]	; (8001134 <LoopFillZerobss+0x12>)
 8001102:	490d      	ldr	r1, [pc, #52]	; (8001138 <LoopFillZerobss+0x16>)
 8001104:	4a0d      	ldr	r2, [pc, #52]	; (800113c <LoopFillZerobss+0x1a>)
 8001106:	2300      	movs	r3, #0
 8001108:	e002      	b.n	8001110 <LoopCopyDataInit>

0800110a <CopyDataInit>:
 800110a:	58d4      	ldr	r4, [r2, r3]
 800110c:	50c4      	str	r4, [r0, r3]
 800110e:	3304      	adds	r3, #4

08001110 <LoopCopyDataInit>:
 8001110:	18c4      	adds	r4, r0, r3
 8001112:	428c      	cmp	r4, r1
 8001114:	d3f9      	bcc.n	800110a <CopyDataInit>
 8001116:	4a0a      	ldr	r2, [pc, #40]	; (8001140 <LoopFillZerobss+0x1e>)
 8001118:	4c0a      	ldr	r4, [pc, #40]	; (8001144 <LoopFillZerobss+0x22>)
 800111a:	2300      	movs	r3, #0
 800111c:	e001      	b.n	8001122 <LoopFillZerobss>

0800111e <FillZerobss>:
 800111e:	6013      	str	r3, [r2, #0]
 8001120:	3204      	adds	r2, #4

08001122 <LoopFillZerobss>:
 8001122:	42a2      	cmp	r2, r4
 8001124:	d3fb      	bcc.n	800111e <FillZerobss>
 8001126:	f7ff ffe5 	bl	80010f4 <SystemInit>
 800112a:	f001 fcfd 	bl	8002b28 <__libc_init_array>
 800112e:	f7ff fe79 	bl	8000e24 <main>
 8001132:	4770      	bx	lr
 8001134:	20000000 	.word	0x20000000
 8001138:	2000024c 	.word	0x2000024c
 800113c:	08002bc8 	.word	0x08002bc8
 8001140:	2000024c 	.word	0x2000024c
 8001144:	200003c8 	.word	0x200003c8

08001148 <ADC1_2_IRQHandler>:
 8001148:	e7fe      	b.n	8001148 <ADC1_2_IRQHandler>
	...

0800114c <HAL_Init>:
 800114c:	b580      	push	{r7, lr}
 800114e:	af00      	add	r7, sp, #0
 8001150:	4b08      	ldr	r3, [pc, #32]	; (8001174 <HAL_Init+0x28>)
 8001152:	681b      	ldr	r3, [r3, #0]
 8001154:	4a07      	ldr	r2, [pc, #28]	; (8001174 <HAL_Init+0x28>)
 8001156:	f043 0310 	orr.w	r3, r3, #16
 800115a:	6013      	str	r3, [r2, #0]
 800115c:	2003      	movs	r0, #3
 800115e:	f000 f923 	bl	80013a8 <HAL_NVIC_SetPriorityGrouping>
 8001162:	200f      	movs	r0, #15
 8001164:	f000 f808 	bl	8001178 <HAL_InitTick>
 8001168:	f7ff ff0c 	bl	8000f84 <HAL_MspInit>
 800116c:	2300      	movs	r3, #0
 800116e:	4618      	mov	r0, r3
 8001170:	bd80      	pop	{r7, pc}
 8001172:	bf00      	nop
 8001174:	40022000 	.word	0x40022000

08001178 <HAL_InitTick>:
 8001178:	b580      	push	{r7, lr}
 800117a:	b082      	sub	sp, #8
 800117c:	af00      	add	r7, sp, #0
 800117e:	6078      	str	r0, [r7, #4]
 8001180:	4b12      	ldr	r3, [pc, #72]	; (80011cc <HAL_InitTick+0x54>)
 8001182:	681a      	ldr	r2, [r3, #0]
 8001184:	4b12      	ldr	r3, [pc, #72]	; (80011d0 <HAL_InitTick+0x58>)
 8001186:	781b      	ldrb	r3, [r3, #0]
 8001188:	4619      	mov	r1, r3
 800118a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800118e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001192:	fbb2 f3f3 	udiv	r3, r2, r3
 8001196:	4618      	mov	r0, r3
 8001198:	f000 f93b 	bl	8001412 <HAL_SYSTICK_Config>
 800119c:	4603      	mov	r3, r0
 800119e:	2b00      	cmp	r3, #0
 80011a0:	d001      	beq.n	80011a6 <HAL_InitTick+0x2e>
 80011a2:	2301      	movs	r3, #1
 80011a4:	e00e      	b.n	80011c4 <HAL_InitTick+0x4c>
 80011a6:	687b      	ldr	r3, [r7, #4]
 80011a8:	2b0f      	cmp	r3, #15
 80011aa:	d80a      	bhi.n	80011c2 <HAL_InitTick+0x4a>
 80011ac:	2200      	movs	r2, #0
 80011ae:	6879      	ldr	r1, [r7, #4]
 80011b0:	f04f 30ff 	mov.w	r0, #4294967295
 80011b4:	f000 f903 	bl	80013be <HAL_NVIC_SetPriority>
 80011b8:	4a06      	ldr	r2, [pc, #24]	; (80011d4 <HAL_InitTick+0x5c>)
 80011ba:	687b      	ldr	r3, [r7, #4]
 80011bc:	6013      	str	r3, [r2, #0]
 80011be:	2300      	movs	r3, #0
 80011c0:	e000      	b.n	80011c4 <HAL_InitTick+0x4c>
 80011c2:	2301      	movs	r3, #1
 80011c4:	4618      	mov	r0, r3
 80011c6:	3708      	adds	r7, #8
 80011c8:	46bd      	mov	sp, r7
 80011ca:	bd80      	pop	{r7, pc}
 80011cc:	20000240 	.word	0x20000240
 80011d0:	20000248 	.word	0x20000248
 80011d4:	20000244 	.word	0x20000244

080011d8 <HAL_IncTick>:
 80011d8:	b480      	push	{r7}
 80011da:	af00      	add	r7, sp, #0
 80011dc:	4b05      	ldr	r3, [pc, #20]	; (80011f4 <HAL_IncTick+0x1c>)
 80011de:	781b      	ldrb	r3, [r3, #0]
 80011e0:	461a      	mov	r2, r3
 80011e2:	4b05      	ldr	r3, [pc, #20]	; (80011f8 <HAL_IncTick+0x20>)
 80011e4:	681b      	ldr	r3, [r3, #0]
 80011e6:	4413      	add	r3, r2
 80011e8:	4a03      	ldr	r2, [pc, #12]	; (80011f8 <HAL_IncTick+0x20>)
 80011ea:	6013      	str	r3, [r2, #0]
 80011ec:	bf00      	nop
 80011ee:	46bd      	mov	sp, r7
 80011f0:	bc80      	pop	{r7}
 80011f2:	4770      	bx	lr
 80011f4:	20000248 	.word	0x20000248
 80011f8:	200003c4 	.word	0x200003c4

080011fc <HAL_GetTick>:
 80011fc:	b480      	push	{r7}
 80011fe:	af00      	add	r7, sp, #0
 8001200:	4b02      	ldr	r3, [pc, #8]	; (800120c <HAL_GetTick+0x10>)
 8001202:	681b      	ldr	r3, [r3, #0]
 8001204:	4618      	mov	r0, r3
 8001206:	46bd      	mov	sp, r7
 8001208:	bc80      	pop	{r7}
 800120a:	4770      	bx	lr
 800120c:	200003c4 	.word	0x200003c4

08001210 <__NVIC_SetPriorityGrouping>:
 8001210:	b480      	push	{r7}
 8001212:	b085      	sub	sp, #20
 8001214:	af00      	add	r7, sp, #0
 8001216:	6078      	str	r0, [r7, #4]
 8001218:	687b      	ldr	r3, [r7, #4]
 800121a:	f003 0307 	and.w	r3, r3, #7
 800121e:	60fb      	str	r3, [r7, #12]
 8001220:	4b0c      	ldr	r3, [pc, #48]	; (8001254 <__NVIC_SetPriorityGrouping+0x44>)
 8001222:	68db      	ldr	r3, [r3, #12]
 8001224:	60bb      	str	r3, [r7, #8]
 8001226:	68ba      	ldr	r2, [r7, #8]
 8001228:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800122c:	4013      	ands	r3, r2
 800122e:	60bb      	str	r3, [r7, #8]
 8001230:	68fb      	ldr	r3, [r7, #12]
 8001232:	021a      	lsls	r2, r3, #8
 8001234:	68bb      	ldr	r3, [r7, #8]
 8001236:	4313      	orrs	r3, r2
 8001238:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800123c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001240:	60bb      	str	r3, [r7, #8]
 8001242:	4a04      	ldr	r2, [pc, #16]	; (8001254 <__NVIC_SetPriorityGrouping+0x44>)
 8001244:	68bb      	ldr	r3, [r7, #8]
 8001246:	60d3      	str	r3, [r2, #12]
 8001248:	bf00      	nop
 800124a:	3714      	adds	r7, #20
 800124c:	46bd      	mov	sp, r7
 800124e:	bc80      	pop	{r7}
 8001250:	4770      	bx	lr
 8001252:	bf00      	nop
 8001254:	e000ed00 	.word	0xe000ed00

08001258 <__NVIC_GetPriorityGrouping>:
 8001258:	b480      	push	{r7}
 800125a:	af00      	add	r7, sp, #0
 800125c:	4b04      	ldr	r3, [pc, #16]	; (8001270 <__NVIC_GetPriorityGrouping+0x18>)
 800125e:	68db      	ldr	r3, [r3, #12]
 8001260:	0a1b      	lsrs	r3, r3, #8
 8001262:	f003 0307 	and.w	r3, r3, #7
 8001266:	4618      	mov	r0, r3
 8001268:	46bd      	mov	sp, r7
 800126a:	bc80      	pop	{r7}
 800126c:	4770      	bx	lr
 800126e:	bf00      	nop
 8001270:	e000ed00 	.word	0xe000ed00

08001274 <__NVIC_EnableIRQ>:
 8001274:	b480      	push	{r7}
 8001276:	b083      	sub	sp, #12
 8001278:	af00      	add	r7, sp, #0
 800127a:	4603      	mov	r3, r0
 800127c:	71fb      	strb	r3, [r7, #7]
 800127e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001282:	2b00      	cmp	r3, #0
 8001284:	db0b      	blt.n	800129e <__NVIC_EnableIRQ+0x2a>
 8001286:	79fb      	ldrb	r3, [r7, #7]
 8001288:	f003 021f 	and.w	r2, r3, #31
 800128c:	4906      	ldr	r1, [pc, #24]	; (80012a8 <__NVIC_EnableIRQ+0x34>)
 800128e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001292:	095b      	lsrs	r3, r3, #5
 8001294:	2001      	movs	r0, #1
 8001296:	fa00 f202 	lsl.w	r2, r0, r2
 800129a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800129e:	bf00      	nop
 80012a0:	370c      	adds	r7, #12
 80012a2:	46bd      	mov	sp, r7
 80012a4:	bc80      	pop	{r7}
 80012a6:	4770      	bx	lr
 80012a8:	e000e100 	.word	0xe000e100

080012ac <__NVIC_SetPriority>:
 80012ac:	b480      	push	{r7}
 80012ae:	b083      	sub	sp, #12
 80012b0:	af00      	add	r7, sp, #0
 80012b2:	4603      	mov	r3, r0
 80012b4:	6039      	str	r1, [r7, #0]
 80012b6:	71fb      	strb	r3, [r7, #7]
 80012b8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012bc:	2b00      	cmp	r3, #0
 80012be:	db0a      	blt.n	80012d6 <__NVIC_SetPriority+0x2a>
 80012c0:	683b      	ldr	r3, [r7, #0]
 80012c2:	b2da      	uxtb	r2, r3
 80012c4:	490c      	ldr	r1, [pc, #48]	; (80012f8 <__NVIC_SetPriority+0x4c>)
 80012c6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012ca:	0112      	lsls	r2, r2, #4
 80012cc:	b2d2      	uxtb	r2, r2
 80012ce:	440b      	add	r3, r1
 80012d0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80012d4:	e00a      	b.n	80012ec <__NVIC_SetPriority+0x40>
 80012d6:	683b      	ldr	r3, [r7, #0]
 80012d8:	b2da      	uxtb	r2, r3
 80012da:	4908      	ldr	r1, [pc, #32]	; (80012fc <__NVIC_SetPriority+0x50>)
 80012dc:	79fb      	ldrb	r3, [r7, #7]
 80012de:	f003 030f 	and.w	r3, r3, #15
 80012e2:	3b04      	subs	r3, #4
 80012e4:	0112      	lsls	r2, r2, #4
 80012e6:	b2d2      	uxtb	r2, r2
 80012e8:	440b      	add	r3, r1
 80012ea:	761a      	strb	r2, [r3, #24]
 80012ec:	bf00      	nop
 80012ee:	370c      	adds	r7, #12
 80012f0:	46bd      	mov	sp, r7
 80012f2:	bc80      	pop	{r7}
 80012f4:	4770      	bx	lr
 80012f6:	bf00      	nop
 80012f8:	e000e100 	.word	0xe000e100
 80012fc:	e000ed00 	.word	0xe000ed00

08001300 <NVIC_EncodePriority>:
 8001300:	b480      	push	{r7}
 8001302:	b089      	sub	sp, #36	; 0x24
 8001304:	af00      	add	r7, sp, #0
 8001306:	60f8      	str	r0, [r7, #12]
 8001308:	60b9      	str	r1, [r7, #8]
 800130a:	607a      	str	r2, [r7, #4]
 800130c:	68fb      	ldr	r3, [r7, #12]
 800130e:	f003 0307 	and.w	r3, r3, #7
 8001312:	61fb      	str	r3, [r7, #28]
 8001314:	69fb      	ldr	r3, [r7, #28]
 8001316:	f1c3 0307 	rsb	r3, r3, #7
 800131a:	2b04      	cmp	r3, #4
 800131c:	bf28      	it	cs
 800131e:	2304      	movcs	r3, #4
 8001320:	61bb      	str	r3, [r7, #24]
 8001322:	69fb      	ldr	r3, [r7, #28]
 8001324:	3304      	adds	r3, #4
 8001326:	2b06      	cmp	r3, #6
 8001328:	d902      	bls.n	8001330 <NVIC_EncodePriority+0x30>
 800132a:	69fb      	ldr	r3, [r7, #28]
 800132c:	3b03      	subs	r3, #3
 800132e:	e000      	b.n	8001332 <NVIC_EncodePriority+0x32>
 8001330:	2300      	movs	r3, #0
 8001332:	617b      	str	r3, [r7, #20]
 8001334:	f04f 32ff 	mov.w	r2, #4294967295
 8001338:	69bb      	ldr	r3, [r7, #24]
 800133a:	fa02 f303 	lsl.w	r3, r2, r3
 800133e:	43da      	mvns	r2, r3
 8001340:	68bb      	ldr	r3, [r7, #8]
 8001342:	401a      	ands	r2, r3
 8001344:	697b      	ldr	r3, [r7, #20]
 8001346:	409a      	lsls	r2, r3
 8001348:	f04f 31ff 	mov.w	r1, #4294967295
 800134c:	697b      	ldr	r3, [r7, #20]
 800134e:	fa01 f303 	lsl.w	r3, r1, r3
 8001352:	43d9      	mvns	r1, r3
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	400b      	ands	r3, r1
 8001358:	4313      	orrs	r3, r2
 800135a:	4618      	mov	r0, r3
 800135c:	3724      	adds	r7, #36	; 0x24
 800135e:	46bd      	mov	sp, r7
 8001360:	bc80      	pop	{r7}
 8001362:	4770      	bx	lr

08001364 <SysTick_Config>:
 8001364:	b580      	push	{r7, lr}
 8001366:	b082      	sub	sp, #8
 8001368:	af00      	add	r7, sp, #0
 800136a:	6078      	str	r0, [r7, #4]
 800136c:	687b      	ldr	r3, [r7, #4]
 800136e:	3b01      	subs	r3, #1
 8001370:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001374:	d301      	bcc.n	800137a <SysTick_Config+0x16>
 8001376:	2301      	movs	r3, #1
 8001378:	e00f      	b.n	800139a <SysTick_Config+0x36>
 800137a:	4a0a      	ldr	r2, [pc, #40]	; (80013a4 <SysTick_Config+0x40>)
 800137c:	687b      	ldr	r3, [r7, #4]
 800137e:	3b01      	subs	r3, #1
 8001380:	6053      	str	r3, [r2, #4]
 8001382:	210f      	movs	r1, #15
 8001384:	f04f 30ff 	mov.w	r0, #4294967295
 8001388:	f7ff ff90 	bl	80012ac <__NVIC_SetPriority>
 800138c:	4b05      	ldr	r3, [pc, #20]	; (80013a4 <SysTick_Config+0x40>)
 800138e:	2200      	movs	r2, #0
 8001390:	609a      	str	r2, [r3, #8]
 8001392:	4b04      	ldr	r3, [pc, #16]	; (80013a4 <SysTick_Config+0x40>)
 8001394:	2207      	movs	r2, #7
 8001396:	601a      	str	r2, [r3, #0]
 8001398:	2300      	movs	r3, #0
 800139a:	4618      	mov	r0, r3
 800139c:	3708      	adds	r7, #8
 800139e:	46bd      	mov	sp, r7
 80013a0:	bd80      	pop	{r7, pc}
 80013a2:	bf00      	nop
 80013a4:	e000e010 	.word	0xe000e010

080013a8 <HAL_NVIC_SetPriorityGrouping>:
 80013a8:	b580      	push	{r7, lr}
 80013aa:	b082      	sub	sp, #8
 80013ac:	af00      	add	r7, sp, #0
 80013ae:	6078      	str	r0, [r7, #4]
 80013b0:	6878      	ldr	r0, [r7, #4]
 80013b2:	f7ff ff2d 	bl	8001210 <__NVIC_SetPriorityGrouping>
 80013b6:	bf00      	nop
 80013b8:	3708      	adds	r7, #8
 80013ba:	46bd      	mov	sp, r7
 80013bc:	bd80      	pop	{r7, pc}

080013be <HAL_NVIC_SetPriority>:
 80013be:	b580      	push	{r7, lr}
 80013c0:	b086      	sub	sp, #24
 80013c2:	af00      	add	r7, sp, #0
 80013c4:	4603      	mov	r3, r0
 80013c6:	60b9      	str	r1, [r7, #8]
 80013c8:	607a      	str	r2, [r7, #4]
 80013ca:	73fb      	strb	r3, [r7, #15]
 80013cc:	2300      	movs	r3, #0
 80013ce:	617b      	str	r3, [r7, #20]
 80013d0:	f7ff ff42 	bl	8001258 <__NVIC_GetPriorityGrouping>
 80013d4:	6178      	str	r0, [r7, #20]
 80013d6:	687a      	ldr	r2, [r7, #4]
 80013d8:	68b9      	ldr	r1, [r7, #8]
 80013da:	6978      	ldr	r0, [r7, #20]
 80013dc:	f7ff ff90 	bl	8001300 <NVIC_EncodePriority>
 80013e0:	4602      	mov	r2, r0
 80013e2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80013e6:	4611      	mov	r1, r2
 80013e8:	4618      	mov	r0, r3
 80013ea:	f7ff ff5f 	bl	80012ac <__NVIC_SetPriority>
 80013ee:	bf00      	nop
 80013f0:	3718      	adds	r7, #24
 80013f2:	46bd      	mov	sp, r7
 80013f4:	bd80      	pop	{r7, pc}

080013f6 <HAL_NVIC_EnableIRQ>:
 80013f6:	b580      	push	{r7, lr}
 80013f8:	b082      	sub	sp, #8
 80013fa:	af00      	add	r7, sp, #0
 80013fc:	4603      	mov	r3, r0
 80013fe:	71fb      	strb	r3, [r7, #7]
 8001400:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001404:	4618      	mov	r0, r3
 8001406:	f7ff ff35 	bl	8001274 <__NVIC_EnableIRQ>
 800140a:	bf00      	nop
 800140c:	3708      	adds	r7, #8
 800140e:	46bd      	mov	sp, r7
 8001410:	bd80      	pop	{r7, pc}

08001412 <HAL_SYSTICK_Config>:
 8001412:	b580      	push	{r7, lr}
 8001414:	b082      	sub	sp, #8
 8001416:	af00      	add	r7, sp, #0
 8001418:	6078      	str	r0, [r7, #4]
 800141a:	6878      	ldr	r0, [r7, #4]
 800141c:	f7ff ffa2 	bl	8001364 <SysTick_Config>
 8001420:	4603      	mov	r3, r0
 8001422:	4618      	mov	r0, r3
 8001424:	3708      	adds	r7, #8
 8001426:	46bd      	mov	sp, r7
 8001428:	bd80      	pop	{r7, pc}

0800142a <HAL_DMA_Abort>:
 800142a:	b480      	push	{r7}
 800142c:	b085      	sub	sp, #20
 800142e:	af00      	add	r7, sp, #0
 8001430:	6078      	str	r0, [r7, #4]
 8001432:	2300      	movs	r3, #0
 8001434:	73fb      	strb	r3, [r7, #15]
 8001436:	687b      	ldr	r3, [r7, #4]
 8001438:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800143c:	2b02      	cmp	r3, #2
 800143e:	d008      	beq.n	8001452 <HAL_DMA_Abort+0x28>
 8001440:	687b      	ldr	r3, [r7, #4]
 8001442:	2204      	movs	r2, #4
 8001444:	639a      	str	r2, [r3, #56]	; 0x38
 8001446:	687b      	ldr	r3, [r7, #4]
 8001448:	2200      	movs	r2, #0
 800144a:	f883 2020 	strb.w	r2, [r3, #32]
 800144e:	2301      	movs	r3, #1
 8001450:	e020      	b.n	8001494 <HAL_DMA_Abort+0x6a>
 8001452:	687b      	ldr	r3, [r7, #4]
 8001454:	681b      	ldr	r3, [r3, #0]
 8001456:	681a      	ldr	r2, [r3, #0]
 8001458:	687b      	ldr	r3, [r7, #4]
 800145a:	681b      	ldr	r3, [r3, #0]
 800145c:	f022 020e 	bic.w	r2, r2, #14
 8001460:	601a      	str	r2, [r3, #0]
 8001462:	687b      	ldr	r3, [r7, #4]
 8001464:	681b      	ldr	r3, [r3, #0]
 8001466:	681a      	ldr	r2, [r3, #0]
 8001468:	687b      	ldr	r3, [r7, #4]
 800146a:	681b      	ldr	r3, [r3, #0]
 800146c:	f022 0201 	bic.w	r2, r2, #1
 8001470:	601a      	str	r2, [r3, #0]
 8001472:	687b      	ldr	r3, [r7, #4]
 8001474:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001476:	687b      	ldr	r3, [r7, #4]
 8001478:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800147a:	2101      	movs	r1, #1
 800147c:	fa01 f202 	lsl.w	r2, r1, r2
 8001480:	605a      	str	r2, [r3, #4]
 8001482:	687b      	ldr	r3, [r7, #4]
 8001484:	2201      	movs	r2, #1
 8001486:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800148a:	687b      	ldr	r3, [r7, #4]
 800148c:	2200      	movs	r2, #0
 800148e:	f883 2020 	strb.w	r2, [r3, #32]
 8001492:	7bfb      	ldrb	r3, [r7, #15]
 8001494:	4618      	mov	r0, r3
 8001496:	3714      	adds	r7, #20
 8001498:	46bd      	mov	sp, r7
 800149a:	bc80      	pop	{r7}
 800149c:	4770      	bx	lr
	...

080014a0 <HAL_DMA_Abort_IT>:
 80014a0:	b580      	push	{r7, lr}
 80014a2:	b084      	sub	sp, #16
 80014a4:	af00      	add	r7, sp, #0
 80014a6:	6078      	str	r0, [r7, #4]
 80014a8:	2300      	movs	r3, #0
 80014aa:	73fb      	strb	r3, [r7, #15]
 80014ac:	687b      	ldr	r3, [r7, #4]
 80014ae:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80014b2:	2b02      	cmp	r3, #2
 80014b4:	d005      	beq.n	80014c2 <HAL_DMA_Abort_IT+0x22>
 80014b6:	687b      	ldr	r3, [r7, #4]
 80014b8:	2204      	movs	r2, #4
 80014ba:	639a      	str	r2, [r3, #56]	; 0x38
 80014bc:	2301      	movs	r3, #1
 80014be:	73fb      	strb	r3, [r7, #15]
 80014c0:	e051      	b.n	8001566 <HAL_DMA_Abort_IT+0xc6>
 80014c2:	687b      	ldr	r3, [r7, #4]
 80014c4:	681b      	ldr	r3, [r3, #0]
 80014c6:	681a      	ldr	r2, [r3, #0]
 80014c8:	687b      	ldr	r3, [r7, #4]
 80014ca:	681b      	ldr	r3, [r3, #0]
 80014cc:	f022 020e 	bic.w	r2, r2, #14
 80014d0:	601a      	str	r2, [r3, #0]
 80014d2:	687b      	ldr	r3, [r7, #4]
 80014d4:	681b      	ldr	r3, [r3, #0]
 80014d6:	681a      	ldr	r2, [r3, #0]
 80014d8:	687b      	ldr	r3, [r7, #4]
 80014da:	681b      	ldr	r3, [r3, #0]
 80014dc:	f022 0201 	bic.w	r2, r2, #1
 80014e0:	601a      	str	r2, [r3, #0]
 80014e2:	687b      	ldr	r3, [r7, #4]
 80014e4:	681b      	ldr	r3, [r3, #0]
 80014e6:	4a22      	ldr	r2, [pc, #136]	; (8001570 <HAL_DMA_Abort_IT+0xd0>)
 80014e8:	4293      	cmp	r3, r2
 80014ea:	d029      	beq.n	8001540 <HAL_DMA_Abort_IT+0xa0>
 80014ec:	687b      	ldr	r3, [r7, #4]
 80014ee:	681b      	ldr	r3, [r3, #0]
 80014f0:	4a20      	ldr	r2, [pc, #128]	; (8001574 <HAL_DMA_Abort_IT+0xd4>)
 80014f2:	4293      	cmp	r3, r2
 80014f4:	d022      	beq.n	800153c <HAL_DMA_Abort_IT+0x9c>
 80014f6:	687b      	ldr	r3, [r7, #4]
 80014f8:	681b      	ldr	r3, [r3, #0]
 80014fa:	4a1f      	ldr	r2, [pc, #124]	; (8001578 <HAL_DMA_Abort_IT+0xd8>)
 80014fc:	4293      	cmp	r3, r2
 80014fe:	d01a      	beq.n	8001536 <HAL_DMA_Abort_IT+0x96>
 8001500:	687b      	ldr	r3, [r7, #4]
 8001502:	681b      	ldr	r3, [r3, #0]
 8001504:	4a1d      	ldr	r2, [pc, #116]	; (800157c <HAL_DMA_Abort_IT+0xdc>)
 8001506:	4293      	cmp	r3, r2
 8001508:	d012      	beq.n	8001530 <HAL_DMA_Abort_IT+0x90>
 800150a:	687b      	ldr	r3, [r7, #4]
 800150c:	681b      	ldr	r3, [r3, #0]
 800150e:	4a1c      	ldr	r2, [pc, #112]	; (8001580 <HAL_DMA_Abort_IT+0xe0>)
 8001510:	4293      	cmp	r3, r2
 8001512:	d00a      	beq.n	800152a <HAL_DMA_Abort_IT+0x8a>
 8001514:	687b      	ldr	r3, [r7, #4]
 8001516:	681b      	ldr	r3, [r3, #0]
 8001518:	4a1a      	ldr	r2, [pc, #104]	; (8001584 <HAL_DMA_Abort_IT+0xe4>)
 800151a:	4293      	cmp	r3, r2
 800151c:	d102      	bne.n	8001524 <HAL_DMA_Abort_IT+0x84>
 800151e:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8001522:	e00e      	b.n	8001542 <HAL_DMA_Abort_IT+0xa2>
 8001524:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001528:	e00b      	b.n	8001542 <HAL_DMA_Abort_IT+0xa2>
 800152a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800152e:	e008      	b.n	8001542 <HAL_DMA_Abort_IT+0xa2>
 8001530:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001534:	e005      	b.n	8001542 <HAL_DMA_Abort_IT+0xa2>
 8001536:	f44f 7380 	mov.w	r3, #256	; 0x100
 800153a:	e002      	b.n	8001542 <HAL_DMA_Abort_IT+0xa2>
 800153c:	2310      	movs	r3, #16
 800153e:	e000      	b.n	8001542 <HAL_DMA_Abort_IT+0xa2>
 8001540:	2301      	movs	r3, #1
 8001542:	4a11      	ldr	r2, [pc, #68]	; (8001588 <HAL_DMA_Abort_IT+0xe8>)
 8001544:	6053      	str	r3, [r2, #4]
 8001546:	687b      	ldr	r3, [r7, #4]
 8001548:	2201      	movs	r2, #1
 800154a:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800154e:	687b      	ldr	r3, [r7, #4]
 8001550:	2200      	movs	r2, #0
 8001552:	f883 2020 	strb.w	r2, [r3, #32]
 8001556:	687b      	ldr	r3, [r7, #4]
 8001558:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800155a:	2b00      	cmp	r3, #0
 800155c:	d003      	beq.n	8001566 <HAL_DMA_Abort_IT+0xc6>
 800155e:	687b      	ldr	r3, [r7, #4]
 8001560:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001562:	6878      	ldr	r0, [r7, #4]
 8001564:	4798      	blx	r3
 8001566:	7bfb      	ldrb	r3, [r7, #15]
 8001568:	4618      	mov	r0, r3
 800156a:	3710      	adds	r7, #16
 800156c:	46bd      	mov	sp, r7
 800156e:	bd80      	pop	{r7, pc}
 8001570:	40020008 	.word	0x40020008
 8001574:	4002001c 	.word	0x4002001c
 8001578:	40020030 	.word	0x40020030
 800157c:	40020044 	.word	0x40020044
 8001580:	40020058 	.word	0x40020058
 8001584:	4002006c 	.word	0x4002006c
 8001588:	40020000 	.word	0x40020000

0800158c <HAL_GPIO_Init>:
 800158c:	b480      	push	{r7}
 800158e:	b08b      	sub	sp, #44	; 0x2c
 8001590:	af00      	add	r7, sp, #0
 8001592:	6078      	str	r0, [r7, #4]
 8001594:	6039      	str	r1, [r7, #0]
 8001596:	2300      	movs	r3, #0
 8001598:	627b      	str	r3, [r7, #36]	; 0x24
 800159a:	2300      	movs	r3, #0
 800159c:	623b      	str	r3, [r7, #32]
 800159e:	e169      	b.n	8001874 <HAL_GPIO_Init+0x2e8>
 80015a0:	2201      	movs	r2, #1
 80015a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015a4:	fa02 f303 	lsl.w	r3, r2, r3
 80015a8:	61fb      	str	r3, [r7, #28]
 80015aa:	683b      	ldr	r3, [r7, #0]
 80015ac:	681b      	ldr	r3, [r3, #0]
 80015ae:	69fa      	ldr	r2, [r7, #28]
 80015b0:	4013      	ands	r3, r2
 80015b2:	61bb      	str	r3, [r7, #24]
 80015b4:	69ba      	ldr	r2, [r7, #24]
 80015b6:	69fb      	ldr	r3, [r7, #28]
 80015b8:	429a      	cmp	r2, r3
 80015ba:	f040 8158 	bne.w	800186e <HAL_GPIO_Init+0x2e2>
 80015be:	683b      	ldr	r3, [r7, #0]
 80015c0:	685b      	ldr	r3, [r3, #4]
 80015c2:	4a9a      	ldr	r2, [pc, #616]	; (800182c <HAL_GPIO_Init+0x2a0>)
 80015c4:	4293      	cmp	r3, r2
 80015c6:	d05e      	beq.n	8001686 <HAL_GPIO_Init+0xfa>
 80015c8:	4a98      	ldr	r2, [pc, #608]	; (800182c <HAL_GPIO_Init+0x2a0>)
 80015ca:	4293      	cmp	r3, r2
 80015cc:	d875      	bhi.n	80016ba <HAL_GPIO_Init+0x12e>
 80015ce:	4a98      	ldr	r2, [pc, #608]	; (8001830 <HAL_GPIO_Init+0x2a4>)
 80015d0:	4293      	cmp	r3, r2
 80015d2:	d058      	beq.n	8001686 <HAL_GPIO_Init+0xfa>
 80015d4:	4a96      	ldr	r2, [pc, #600]	; (8001830 <HAL_GPIO_Init+0x2a4>)
 80015d6:	4293      	cmp	r3, r2
 80015d8:	d86f      	bhi.n	80016ba <HAL_GPIO_Init+0x12e>
 80015da:	4a96      	ldr	r2, [pc, #600]	; (8001834 <HAL_GPIO_Init+0x2a8>)
 80015dc:	4293      	cmp	r3, r2
 80015de:	d052      	beq.n	8001686 <HAL_GPIO_Init+0xfa>
 80015e0:	4a94      	ldr	r2, [pc, #592]	; (8001834 <HAL_GPIO_Init+0x2a8>)
 80015e2:	4293      	cmp	r3, r2
 80015e4:	d869      	bhi.n	80016ba <HAL_GPIO_Init+0x12e>
 80015e6:	4a94      	ldr	r2, [pc, #592]	; (8001838 <HAL_GPIO_Init+0x2ac>)
 80015e8:	4293      	cmp	r3, r2
 80015ea:	d04c      	beq.n	8001686 <HAL_GPIO_Init+0xfa>
 80015ec:	4a92      	ldr	r2, [pc, #584]	; (8001838 <HAL_GPIO_Init+0x2ac>)
 80015ee:	4293      	cmp	r3, r2
 80015f0:	d863      	bhi.n	80016ba <HAL_GPIO_Init+0x12e>
 80015f2:	4a92      	ldr	r2, [pc, #584]	; (800183c <HAL_GPIO_Init+0x2b0>)
 80015f4:	4293      	cmp	r3, r2
 80015f6:	d046      	beq.n	8001686 <HAL_GPIO_Init+0xfa>
 80015f8:	4a90      	ldr	r2, [pc, #576]	; (800183c <HAL_GPIO_Init+0x2b0>)
 80015fa:	4293      	cmp	r3, r2
 80015fc:	d85d      	bhi.n	80016ba <HAL_GPIO_Init+0x12e>
 80015fe:	2b12      	cmp	r3, #18
 8001600:	d82a      	bhi.n	8001658 <HAL_GPIO_Init+0xcc>
 8001602:	2b12      	cmp	r3, #18
 8001604:	d859      	bhi.n	80016ba <HAL_GPIO_Init+0x12e>
 8001606:	a201      	add	r2, pc, #4	; (adr r2, 800160c <HAL_GPIO_Init+0x80>)
 8001608:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800160c:	08001687 	.word	0x08001687
 8001610:	08001661 	.word	0x08001661
 8001614:	08001673 	.word	0x08001673
 8001618:	080016b5 	.word	0x080016b5
 800161c:	080016bb 	.word	0x080016bb
 8001620:	080016bb 	.word	0x080016bb
 8001624:	080016bb 	.word	0x080016bb
 8001628:	080016bb 	.word	0x080016bb
 800162c:	080016bb 	.word	0x080016bb
 8001630:	080016bb 	.word	0x080016bb
 8001634:	080016bb 	.word	0x080016bb
 8001638:	080016bb 	.word	0x080016bb
 800163c:	080016bb 	.word	0x080016bb
 8001640:	080016bb 	.word	0x080016bb
 8001644:	080016bb 	.word	0x080016bb
 8001648:	080016bb 	.word	0x080016bb
 800164c:	080016bb 	.word	0x080016bb
 8001650:	08001669 	.word	0x08001669
 8001654:	0800167d 	.word	0x0800167d
 8001658:	4a79      	ldr	r2, [pc, #484]	; (8001840 <HAL_GPIO_Init+0x2b4>)
 800165a:	4293      	cmp	r3, r2
 800165c:	d013      	beq.n	8001686 <HAL_GPIO_Init+0xfa>
 800165e:	e02c      	b.n	80016ba <HAL_GPIO_Init+0x12e>
 8001660:	683b      	ldr	r3, [r7, #0]
 8001662:	68db      	ldr	r3, [r3, #12]
 8001664:	623b      	str	r3, [r7, #32]
 8001666:	e029      	b.n	80016bc <HAL_GPIO_Init+0x130>
 8001668:	683b      	ldr	r3, [r7, #0]
 800166a:	68db      	ldr	r3, [r3, #12]
 800166c:	3304      	adds	r3, #4
 800166e:	623b      	str	r3, [r7, #32]
 8001670:	e024      	b.n	80016bc <HAL_GPIO_Init+0x130>
 8001672:	683b      	ldr	r3, [r7, #0]
 8001674:	68db      	ldr	r3, [r3, #12]
 8001676:	3308      	adds	r3, #8
 8001678:	623b      	str	r3, [r7, #32]
 800167a:	e01f      	b.n	80016bc <HAL_GPIO_Init+0x130>
 800167c:	683b      	ldr	r3, [r7, #0]
 800167e:	68db      	ldr	r3, [r3, #12]
 8001680:	330c      	adds	r3, #12
 8001682:	623b      	str	r3, [r7, #32]
 8001684:	e01a      	b.n	80016bc <HAL_GPIO_Init+0x130>
 8001686:	683b      	ldr	r3, [r7, #0]
 8001688:	689b      	ldr	r3, [r3, #8]
 800168a:	2b00      	cmp	r3, #0
 800168c:	d102      	bne.n	8001694 <HAL_GPIO_Init+0x108>
 800168e:	2304      	movs	r3, #4
 8001690:	623b      	str	r3, [r7, #32]
 8001692:	e013      	b.n	80016bc <HAL_GPIO_Init+0x130>
 8001694:	683b      	ldr	r3, [r7, #0]
 8001696:	689b      	ldr	r3, [r3, #8]
 8001698:	2b01      	cmp	r3, #1
 800169a:	d105      	bne.n	80016a8 <HAL_GPIO_Init+0x11c>
 800169c:	2308      	movs	r3, #8
 800169e:	623b      	str	r3, [r7, #32]
 80016a0:	687b      	ldr	r3, [r7, #4]
 80016a2:	69fa      	ldr	r2, [r7, #28]
 80016a4:	611a      	str	r2, [r3, #16]
 80016a6:	e009      	b.n	80016bc <HAL_GPIO_Init+0x130>
 80016a8:	2308      	movs	r3, #8
 80016aa:	623b      	str	r3, [r7, #32]
 80016ac:	687b      	ldr	r3, [r7, #4]
 80016ae:	69fa      	ldr	r2, [r7, #28]
 80016b0:	615a      	str	r2, [r3, #20]
 80016b2:	e003      	b.n	80016bc <HAL_GPIO_Init+0x130>
 80016b4:	2300      	movs	r3, #0
 80016b6:	623b      	str	r3, [r7, #32]
 80016b8:	e000      	b.n	80016bc <HAL_GPIO_Init+0x130>
 80016ba:	bf00      	nop
 80016bc:	69bb      	ldr	r3, [r7, #24]
 80016be:	2bff      	cmp	r3, #255	; 0xff
 80016c0:	d801      	bhi.n	80016c6 <HAL_GPIO_Init+0x13a>
 80016c2:	687b      	ldr	r3, [r7, #4]
 80016c4:	e001      	b.n	80016ca <HAL_GPIO_Init+0x13e>
 80016c6:	687b      	ldr	r3, [r7, #4]
 80016c8:	3304      	adds	r3, #4
 80016ca:	617b      	str	r3, [r7, #20]
 80016cc:	69bb      	ldr	r3, [r7, #24]
 80016ce:	2bff      	cmp	r3, #255	; 0xff
 80016d0:	d802      	bhi.n	80016d8 <HAL_GPIO_Init+0x14c>
 80016d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016d4:	009b      	lsls	r3, r3, #2
 80016d6:	e002      	b.n	80016de <HAL_GPIO_Init+0x152>
 80016d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016da:	3b08      	subs	r3, #8
 80016dc:	009b      	lsls	r3, r3, #2
 80016de:	613b      	str	r3, [r7, #16]
 80016e0:	697b      	ldr	r3, [r7, #20]
 80016e2:	681a      	ldr	r2, [r3, #0]
 80016e4:	210f      	movs	r1, #15
 80016e6:	693b      	ldr	r3, [r7, #16]
 80016e8:	fa01 f303 	lsl.w	r3, r1, r3
 80016ec:	43db      	mvns	r3, r3
 80016ee:	401a      	ands	r2, r3
 80016f0:	6a39      	ldr	r1, [r7, #32]
 80016f2:	693b      	ldr	r3, [r7, #16]
 80016f4:	fa01 f303 	lsl.w	r3, r1, r3
 80016f8:	431a      	orrs	r2, r3
 80016fa:	697b      	ldr	r3, [r7, #20]
 80016fc:	601a      	str	r2, [r3, #0]
 80016fe:	683b      	ldr	r3, [r7, #0]
 8001700:	685b      	ldr	r3, [r3, #4]
 8001702:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001706:	2b00      	cmp	r3, #0
 8001708:	f000 80b1 	beq.w	800186e <HAL_GPIO_Init+0x2e2>
 800170c:	4b4d      	ldr	r3, [pc, #308]	; (8001844 <HAL_GPIO_Init+0x2b8>)
 800170e:	699b      	ldr	r3, [r3, #24]
 8001710:	4a4c      	ldr	r2, [pc, #304]	; (8001844 <HAL_GPIO_Init+0x2b8>)
 8001712:	f043 0301 	orr.w	r3, r3, #1
 8001716:	6193      	str	r3, [r2, #24]
 8001718:	4b4a      	ldr	r3, [pc, #296]	; (8001844 <HAL_GPIO_Init+0x2b8>)
 800171a:	699b      	ldr	r3, [r3, #24]
 800171c:	f003 0301 	and.w	r3, r3, #1
 8001720:	60bb      	str	r3, [r7, #8]
 8001722:	68bb      	ldr	r3, [r7, #8]
 8001724:	4a48      	ldr	r2, [pc, #288]	; (8001848 <HAL_GPIO_Init+0x2bc>)
 8001726:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001728:	089b      	lsrs	r3, r3, #2
 800172a:	3302      	adds	r3, #2
 800172c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001730:	60fb      	str	r3, [r7, #12]
 8001732:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001734:	f003 0303 	and.w	r3, r3, #3
 8001738:	009b      	lsls	r3, r3, #2
 800173a:	220f      	movs	r2, #15
 800173c:	fa02 f303 	lsl.w	r3, r2, r3
 8001740:	43db      	mvns	r3, r3
 8001742:	68fa      	ldr	r2, [r7, #12]
 8001744:	4013      	ands	r3, r2
 8001746:	60fb      	str	r3, [r7, #12]
 8001748:	687b      	ldr	r3, [r7, #4]
 800174a:	4a40      	ldr	r2, [pc, #256]	; (800184c <HAL_GPIO_Init+0x2c0>)
 800174c:	4293      	cmp	r3, r2
 800174e:	d013      	beq.n	8001778 <HAL_GPIO_Init+0x1ec>
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	4a3f      	ldr	r2, [pc, #252]	; (8001850 <HAL_GPIO_Init+0x2c4>)
 8001754:	4293      	cmp	r3, r2
 8001756:	d00d      	beq.n	8001774 <HAL_GPIO_Init+0x1e8>
 8001758:	687b      	ldr	r3, [r7, #4]
 800175a:	4a3e      	ldr	r2, [pc, #248]	; (8001854 <HAL_GPIO_Init+0x2c8>)
 800175c:	4293      	cmp	r3, r2
 800175e:	d007      	beq.n	8001770 <HAL_GPIO_Init+0x1e4>
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	4a3d      	ldr	r2, [pc, #244]	; (8001858 <HAL_GPIO_Init+0x2cc>)
 8001764:	4293      	cmp	r3, r2
 8001766:	d101      	bne.n	800176c <HAL_GPIO_Init+0x1e0>
 8001768:	2303      	movs	r3, #3
 800176a:	e006      	b.n	800177a <HAL_GPIO_Init+0x1ee>
 800176c:	2304      	movs	r3, #4
 800176e:	e004      	b.n	800177a <HAL_GPIO_Init+0x1ee>
 8001770:	2302      	movs	r3, #2
 8001772:	e002      	b.n	800177a <HAL_GPIO_Init+0x1ee>
 8001774:	2301      	movs	r3, #1
 8001776:	e000      	b.n	800177a <HAL_GPIO_Init+0x1ee>
 8001778:	2300      	movs	r3, #0
 800177a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800177c:	f002 0203 	and.w	r2, r2, #3
 8001780:	0092      	lsls	r2, r2, #2
 8001782:	4093      	lsls	r3, r2
 8001784:	68fa      	ldr	r2, [r7, #12]
 8001786:	4313      	orrs	r3, r2
 8001788:	60fb      	str	r3, [r7, #12]
 800178a:	492f      	ldr	r1, [pc, #188]	; (8001848 <HAL_GPIO_Init+0x2bc>)
 800178c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800178e:	089b      	lsrs	r3, r3, #2
 8001790:	3302      	adds	r3, #2
 8001792:	68fa      	ldr	r2, [r7, #12]
 8001794:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001798:	683b      	ldr	r3, [r7, #0]
 800179a:	685b      	ldr	r3, [r3, #4]
 800179c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80017a0:	2b00      	cmp	r3, #0
 80017a2:	d006      	beq.n	80017b2 <HAL_GPIO_Init+0x226>
 80017a4:	4b2d      	ldr	r3, [pc, #180]	; (800185c <HAL_GPIO_Init+0x2d0>)
 80017a6:	681a      	ldr	r2, [r3, #0]
 80017a8:	492c      	ldr	r1, [pc, #176]	; (800185c <HAL_GPIO_Init+0x2d0>)
 80017aa:	69bb      	ldr	r3, [r7, #24]
 80017ac:	4313      	orrs	r3, r2
 80017ae:	600b      	str	r3, [r1, #0]
 80017b0:	e006      	b.n	80017c0 <HAL_GPIO_Init+0x234>
 80017b2:	4b2a      	ldr	r3, [pc, #168]	; (800185c <HAL_GPIO_Init+0x2d0>)
 80017b4:	681a      	ldr	r2, [r3, #0]
 80017b6:	69bb      	ldr	r3, [r7, #24]
 80017b8:	43db      	mvns	r3, r3
 80017ba:	4928      	ldr	r1, [pc, #160]	; (800185c <HAL_GPIO_Init+0x2d0>)
 80017bc:	4013      	ands	r3, r2
 80017be:	600b      	str	r3, [r1, #0]
 80017c0:	683b      	ldr	r3, [r7, #0]
 80017c2:	685b      	ldr	r3, [r3, #4]
 80017c4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80017c8:	2b00      	cmp	r3, #0
 80017ca:	d006      	beq.n	80017da <HAL_GPIO_Init+0x24e>
 80017cc:	4b23      	ldr	r3, [pc, #140]	; (800185c <HAL_GPIO_Init+0x2d0>)
 80017ce:	685a      	ldr	r2, [r3, #4]
 80017d0:	4922      	ldr	r1, [pc, #136]	; (800185c <HAL_GPIO_Init+0x2d0>)
 80017d2:	69bb      	ldr	r3, [r7, #24]
 80017d4:	4313      	orrs	r3, r2
 80017d6:	604b      	str	r3, [r1, #4]
 80017d8:	e006      	b.n	80017e8 <HAL_GPIO_Init+0x25c>
 80017da:	4b20      	ldr	r3, [pc, #128]	; (800185c <HAL_GPIO_Init+0x2d0>)
 80017dc:	685a      	ldr	r2, [r3, #4]
 80017de:	69bb      	ldr	r3, [r7, #24]
 80017e0:	43db      	mvns	r3, r3
 80017e2:	491e      	ldr	r1, [pc, #120]	; (800185c <HAL_GPIO_Init+0x2d0>)
 80017e4:	4013      	ands	r3, r2
 80017e6:	604b      	str	r3, [r1, #4]
 80017e8:	683b      	ldr	r3, [r7, #0]
 80017ea:	685b      	ldr	r3, [r3, #4]
 80017ec:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80017f0:	2b00      	cmp	r3, #0
 80017f2:	d006      	beq.n	8001802 <HAL_GPIO_Init+0x276>
 80017f4:	4b19      	ldr	r3, [pc, #100]	; (800185c <HAL_GPIO_Init+0x2d0>)
 80017f6:	689a      	ldr	r2, [r3, #8]
 80017f8:	4918      	ldr	r1, [pc, #96]	; (800185c <HAL_GPIO_Init+0x2d0>)
 80017fa:	69bb      	ldr	r3, [r7, #24]
 80017fc:	4313      	orrs	r3, r2
 80017fe:	608b      	str	r3, [r1, #8]
 8001800:	e006      	b.n	8001810 <HAL_GPIO_Init+0x284>
 8001802:	4b16      	ldr	r3, [pc, #88]	; (800185c <HAL_GPIO_Init+0x2d0>)
 8001804:	689a      	ldr	r2, [r3, #8]
 8001806:	69bb      	ldr	r3, [r7, #24]
 8001808:	43db      	mvns	r3, r3
 800180a:	4914      	ldr	r1, [pc, #80]	; (800185c <HAL_GPIO_Init+0x2d0>)
 800180c:	4013      	ands	r3, r2
 800180e:	608b      	str	r3, [r1, #8]
 8001810:	683b      	ldr	r3, [r7, #0]
 8001812:	685b      	ldr	r3, [r3, #4]
 8001814:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001818:	2b00      	cmp	r3, #0
 800181a:	d021      	beq.n	8001860 <HAL_GPIO_Init+0x2d4>
 800181c:	4b0f      	ldr	r3, [pc, #60]	; (800185c <HAL_GPIO_Init+0x2d0>)
 800181e:	68da      	ldr	r2, [r3, #12]
 8001820:	490e      	ldr	r1, [pc, #56]	; (800185c <HAL_GPIO_Init+0x2d0>)
 8001822:	69bb      	ldr	r3, [r7, #24]
 8001824:	4313      	orrs	r3, r2
 8001826:	60cb      	str	r3, [r1, #12]
 8001828:	e021      	b.n	800186e <HAL_GPIO_Init+0x2e2>
 800182a:	bf00      	nop
 800182c:	10320000 	.word	0x10320000
 8001830:	10310000 	.word	0x10310000
 8001834:	10220000 	.word	0x10220000
 8001838:	10210000 	.word	0x10210000
 800183c:	10120000 	.word	0x10120000
 8001840:	10110000 	.word	0x10110000
 8001844:	40021000 	.word	0x40021000
 8001848:	40010000 	.word	0x40010000
 800184c:	40010800 	.word	0x40010800
 8001850:	40010c00 	.word	0x40010c00
 8001854:	40011000 	.word	0x40011000
 8001858:	40011400 	.word	0x40011400
 800185c:	40010400 	.word	0x40010400
 8001860:	4b0b      	ldr	r3, [pc, #44]	; (8001890 <HAL_GPIO_Init+0x304>)
 8001862:	68da      	ldr	r2, [r3, #12]
 8001864:	69bb      	ldr	r3, [r7, #24]
 8001866:	43db      	mvns	r3, r3
 8001868:	4909      	ldr	r1, [pc, #36]	; (8001890 <HAL_GPIO_Init+0x304>)
 800186a:	4013      	ands	r3, r2
 800186c:	60cb      	str	r3, [r1, #12]
 800186e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001870:	3301      	adds	r3, #1
 8001872:	627b      	str	r3, [r7, #36]	; 0x24
 8001874:	683b      	ldr	r3, [r7, #0]
 8001876:	681a      	ldr	r2, [r3, #0]
 8001878:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800187a:	fa22 f303 	lsr.w	r3, r2, r3
 800187e:	2b00      	cmp	r3, #0
 8001880:	f47f ae8e 	bne.w	80015a0 <HAL_GPIO_Init+0x14>
 8001884:	bf00      	nop
 8001886:	bf00      	nop
 8001888:	372c      	adds	r7, #44	; 0x2c
 800188a:	46bd      	mov	sp, r7
 800188c:	bc80      	pop	{r7}
 800188e:	4770      	bx	lr
 8001890:	40010400 	.word	0x40010400

08001894 <HAL_RCC_OscConfig>:
 8001894:	b580      	push	{r7, lr}
 8001896:	b086      	sub	sp, #24
 8001898:	af00      	add	r7, sp, #0
 800189a:	6078      	str	r0, [r7, #4]
 800189c:	687b      	ldr	r3, [r7, #4]
 800189e:	2b00      	cmp	r3, #0
 80018a0:	d101      	bne.n	80018a6 <HAL_RCC_OscConfig+0x12>
 80018a2:	2301      	movs	r3, #1
 80018a4:	e26c      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 80018a6:	687b      	ldr	r3, [r7, #4]
 80018a8:	681b      	ldr	r3, [r3, #0]
 80018aa:	f003 0301 	and.w	r3, r3, #1
 80018ae:	2b00      	cmp	r3, #0
 80018b0:	f000 8087 	beq.w	80019c2 <HAL_RCC_OscConfig+0x12e>
 80018b4:	4b92      	ldr	r3, [pc, #584]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 80018b6:	685b      	ldr	r3, [r3, #4]
 80018b8:	f003 030c 	and.w	r3, r3, #12
 80018bc:	2b04      	cmp	r3, #4
 80018be:	d00c      	beq.n	80018da <HAL_RCC_OscConfig+0x46>
 80018c0:	4b8f      	ldr	r3, [pc, #572]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 80018c2:	685b      	ldr	r3, [r3, #4]
 80018c4:	f003 030c 	and.w	r3, r3, #12
 80018c8:	2b08      	cmp	r3, #8
 80018ca:	d112      	bne.n	80018f2 <HAL_RCC_OscConfig+0x5e>
 80018cc:	4b8c      	ldr	r3, [pc, #560]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 80018ce:	685b      	ldr	r3, [r3, #4]
 80018d0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80018d4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80018d8:	d10b      	bne.n	80018f2 <HAL_RCC_OscConfig+0x5e>
 80018da:	4b89      	ldr	r3, [pc, #548]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 80018dc:	681b      	ldr	r3, [r3, #0]
 80018de:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80018e2:	2b00      	cmp	r3, #0
 80018e4:	d06c      	beq.n	80019c0 <HAL_RCC_OscConfig+0x12c>
 80018e6:	687b      	ldr	r3, [r7, #4]
 80018e8:	685b      	ldr	r3, [r3, #4]
 80018ea:	2b00      	cmp	r3, #0
 80018ec:	d168      	bne.n	80019c0 <HAL_RCC_OscConfig+0x12c>
 80018ee:	2301      	movs	r3, #1
 80018f0:	e246      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 80018f2:	687b      	ldr	r3, [r7, #4]
 80018f4:	685b      	ldr	r3, [r3, #4]
 80018f6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80018fa:	d106      	bne.n	800190a <HAL_RCC_OscConfig+0x76>
 80018fc:	4b80      	ldr	r3, [pc, #512]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 80018fe:	681b      	ldr	r3, [r3, #0]
 8001900:	4a7f      	ldr	r2, [pc, #508]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001902:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001906:	6013      	str	r3, [r2, #0]
 8001908:	e02e      	b.n	8001968 <HAL_RCC_OscConfig+0xd4>
 800190a:	687b      	ldr	r3, [r7, #4]
 800190c:	685b      	ldr	r3, [r3, #4]
 800190e:	2b00      	cmp	r3, #0
 8001910:	d10c      	bne.n	800192c <HAL_RCC_OscConfig+0x98>
 8001912:	4b7b      	ldr	r3, [pc, #492]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001914:	681b      	ldr	r3, [r3, #0]
 8001916:	4a7a      	ldr	r2, [pc, #488]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001918:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800191c:	6013      	str	r3, [r2, #0]
 800191e:	4b78      	ldr	r3, [pc, #480]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001920:	681b      	ldr	r3, [r3, #0]
 8001922:	4a77      	ldr	r2, [pc, #476]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001924:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001928:	6013      	str	r3, [r2, #0]
 800192a:	e01d      	b.n	8001968 <HAL_RCC_OscConfig+0xd4>
 800192c:	687b      	ldr	r3, [r7, #4]
 800192e:	685b      	ldr	r3, [r3, #4]
 8001930:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001934:	d10c      	bne.n	8001950 <HAL_RCC_OscConfig+0xbc>
 8001936:	4b72      	ldr	r3, [pc, #456]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001938:	681b      	ldr	r3, [r3, #0]
 800193a:	4a71      	ldr	r2, [pc, #452]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 800193c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001940:	6013      	str	r3, [r2, #0]
 8001942:	4b6f      	ldr	r3, [pc, #444]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001944:	681b      	ldr	r3, [r3, #0]
 8001946:	4a6e      	ldr	r2, [pc, #440]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001948:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800194c:	6013      	str	r3, [r2, #0]
 800194e:	e00b      	b.n	8001968 <HAL_RCC_OscConfig+0xd4>
 8001950:	4b6b      	ldr	r3, [pc, #428]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001952:	681b      	ldr	r3, [r3, #0]
 8001954:	4a6a      	ldr	r2, [pc, #424]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001956:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800195a:	6013      	str	r3, [r2, #0]
 800195c:	4b68      	ldr	r3, [pc, #416]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 800195e:	681b      	ldr	r3, [r3, #0]
 8001960:	4a67      	ldr	r2, [pc, #412]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001962:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001966:	6013      	str	r3, [r2, #0]
 8001968:	687b      	ldr	r3, [r7, #4]
 800196a:	685b      	ldr	r3, [r3, #4]
 800196c:	2b00      	cmp	r3, #0
 800196e:	d013      	beq.n	8001998 <HAL_RCC_OscConfig+0x104>
 8001970:	f7ff fc44 	bl	80011fc <HAL_GetTick>
 8001974:	6138      	str	r0, [r7, #16]
 8001976:	e008      	b.n	800198a <HAL_RCC_OscConfig+0xf6>
 8001978:	f7ff fc40 	bl	80011fc <HAL_GetTick>
 800197c:	4602      	mov	r2, r0
 800197e:	693b      	ldr	r3, [r7, #16]
 8001980:	1ad3      	subs	r3, r2, r3
 8001982:	2b64      	cmp	r3, #100	; 0x64
 8001984:	d901      	bls.n	800198a <HAL_RCC_OscConfig+0xf6>
 8001986:	2303      	movs	r3, #3
 8001988:	e1fa      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 800198a:	4b5d      	ldr	r3, [pc, #372]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 800198c:	681b      	ldr	r3, [r3, #0]
 800198e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001992:	2b00      	cmp	r3, #0
 8001994:	d0f0      	beq.n	8001978 <HAL_RCC_OscConfig+0xe4>
 8001996:	e014      	b.n	80019c2 <HAL_RCC_OscConfig+0x12e>
 8001998:	f7ff fc30 	bl	80011fc <HAL_GetTick>
 800199c:	6138      	str	r0, [r7, #16]
 800199e:	e008      	b.n	80019b2 <HAL_RCC_OscConfig+0x11e>
 80019a0:	f7ff fc2c 	bl	80011fc <HAL_GetTick>
 80019a4:	4602      	mov	r2, r0
 80019a6:	693b      	ldr	r3, [r7, #16]
 80019a8:	1ad3      	subs	r3, r2, r3
 80019aa:	2b64      	cmp	r3, #100	; 0x64
 80019ac:	d901      	bls.n	80019b2 <HAL_RCC_OscConfig+0x11e>
 80019ae:	2303      	movs	r3, #3
 80019b0:	e1e6      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 80019b2:	4b53      	ldr	r3, [pc, #332]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 80019b4:	681b      	ldr	r3, [r3, #0]
 80019b6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80019ba:	2b00      	cmp	r3, #0
 80019bc:	d1f0      	bne.n	80019a0 <HAL_RCC_OscConfig+0x10c>
 80019be:	e000      	b.n	80019c2 <HAL_RCC_OscConfig+0x12e>
 80019c0:	bf00      	nop
 80019c2:	687b      	ldr	r3, [r7, #4]
 80019c4:	681b      	ldr	r3, [r3, #0]
 80019c6:	f003 0302 	and.w	r3, r3, #2
 80019ca:	2b00      	cmp	r3, #0
 80019cc:	d063      	beq.n	8001a96 <HAL_RCC_OscConfig+0x202>
 80019ce:	4b4c      	ldr	r3, [pc, #304]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 80019d0:	685b      	ldr	r3, [r3, #4]
 80019d2:	f003 030c 	and.w	r3, r3, #12
 80019d6:	2b00      	cmp	r3, #0
 80019d8:	d00b      	beq.n	80019f2 <HAL_RCC_OscConfig+0x15e>
 80019da:	4b49      	ldr	r3, [pc, #292]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 80019dc:	685b      	ldr	r3, [r3, #4]
 80019de:	f003 030c 	and.w	r3, r3, #12
 80019e2:	2b08      	cmp	r3, #8
 80019e4:	d11c      	bne.n	8001a20 <HAL_RCC_OscConfig+0x18c>
 80019e6:	4b46      	ldr	r3, [pc, #280]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 80019e8:	685b      	ldr	r3, [r3, #4]
 80019ea:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80019ee:	2b00      	cmp	r3, #0
 80019f0:	d116      	bne.n	8001a20 <HAL_RCC_OscConfig+0x18c>
 80019f2:	4b43      	ldr	r3, [pc, #268]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 80019f4:	681b      	ldr	r3, [r3, #0]
 80019f6:	f003 0302 	and.w	r3, r3, #2
 80019fa:	2b00      	cmp	r3, #0
 80019fc:	d005      	beq.n	8001a0a <HAL_RCC_OscConfig+0x176>
 80019fe:	687b      	ldr	r3, [r7, #4]
 8001a00:	691b      	ldr	r3, [r3, #16]
 8001a02:	2b01      	cmp	r3, #1
 8001a04:	d001      	beq.n	8001a0a <HAL_RCC_OscConfig+0x176>
 8001a06:	2301      	movs	r3, #1
 8001a08:	e1ba      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 8001a0a:	4b3d      	ldr	r3, [pc, #244]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001a0c:	681b      	ldr	r3, [r3, #0]
 8001a0e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001a12:	687b      	ldr	r3, [r7, #4]
 8001a14:	695b      	ldr	r3, [r3, #20]
 8001a16:	00db      	lsls	r3, r3, #3
 8001a18:	4939      	ldr	r1, [pc, #228]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001a1a:	4313      	orrs	r3, r2
 8001a1c:	600b      	str	r3, [r1, #0]
 8001a1e:	e03a      	b.n	8001a96 <HAL_RCC_OscConfig+0x202>
 8001a20:	687b      	ldr	r3, [r7, #4]
 8001a22:	691b      	ldr	r3, [r3, #16]
 8001a24:	2b00      	cmp	r3, #0
 8001a26:	d020      	beq.n	8001a6a <HAL_RCC_OscConfig+0x1d6>
 8001a28:	4b36      	ldr	r3, [pc, #216]	; (8001b04 <HAL_RCC_OscConfig+0x270>)
 8001a2a:	2201      	movs	r2, #1
 8001a2c:	601a      	str	r2, [r3, #0]
 8001a2e:	f7ff fbe5 	bl	80011fc <HAL_GetTick>
 8001a32:	6138      	str	r0, [r7, #16]
 8001a34:	e008      	b.n	8001a48 <HAL_RCC_OscConfig+0x1b4>
 8001a36:	f7ff fbe1 	bl	80011fc <HAL_GetTick>
 8001a3a:	4602      	mov	r2, r0
 8001a3c:	693b      	ldr	r3, [r7, #16]
 8001a3e:	1ad3      	subs	r3, r2, r3
 8001a40:	2b02      	cmp	r3, #2
 8001a42:	d901      	bls.n	8001a48 <HAL_RCC_OscConfig+0x1b4>
 8001a44:	2303      	movs	r3, #3
 8001a46:	e19b      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 8001a48:	4b2d      	ldr	r3, [pc, #180]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001a4a:	681b      	ldr	r3, [r3, #0]
 8001a4c:	f003 0302 	and.w	r3, r3, #2
 8001a50:	2b00      	cmp	r3, #0
 8001a52:	d0f0      	beq.n	8001a36 <HAL_RCC_OscConfig+0x1a2>
 8001a54:	4b2a      	ldr	r3, [pc, #168]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001a56:	681b      	ldr	r3, [r3, #0]
 8001a58:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001a5c:	687b      	ldr	r3, [r7, #4]
 8001a5e:	695b      	ldr	r3, [r3, #20]
 8001a60:	00db      	lsls	r3, r3, #3
 8001a62:	4927      	ldr	r1, [pc, #156]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001a64:	4313      	orrs	r3, r2
 8001a66:	600b      	str	r3, [r1, #0]
 8001a68:	e015      	b.n	8001a96 <HAL_RCC_OscConfig+0x202>
 8001a6a:	4b26      	ldr	r3, [pc, #152]	; (8001b04 <HAL_RCC_OscConfig+0x270>)
 8001a6c:	2200      	movs	r2, #0
 8001a6e:	601a      	str	r2, [r3, #0]
 8001a70:	f7ff fbc4 	bl	80011fc <HAL_GetTick>
 8001a74:	6138      	str	r0, [r7, #16]
 8001a76:	e008      	b.n	8001a8a <HAL_RCC_OscConfig+0x1f6>
 8001a78:	f7ff fbc0 	bl	80011fc <HAL_GetTick>
 8001a7c:	4602      	mov	r2, r0
 8001a7e:	693b      	ldr	r3, [r7, #16]
 8001a80:	1ad3      	subs	r3, r2, r3
 8001a82:	2b02      	cmp	r3, #2
 8001a84:	d901      	bls.n	8001a8a <HAL_RCC_OscConfig+0x1f6>
 8001a86:	2303      	movs	r3, #3
 8001a88:	e17a      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 8001a8a:	4b1d      	ldr	r3, [pc, #116]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001a8c:	681b      	ldr	r3, [r3, #0]
 8001a8e:	f003 0302 	and.w	r3, r3, #2
 8001a92:	2b00      	cmp	r3, #0
 8001a94:	d1f0      	bne.n	8001a78 <HAL_RCC_OscConfig+0x1e4>
 8001a96:	687b      	ldr	r3, [r7, #4]
 8001a98:	681b      	ldr	r3, [r3, #0]
 8001a9a:	f003 0308 	and.w	r3, r3, #8
 8001a9e:	2b00      	cmp	r3, #0
 8001aa0:	d03a      	beq.n	8001b18 <HAL_RCC_OscConfig+0x284>
 8001aa2:	687b      	ldr	r3, [r7, #4]
 8001aa4:	699b      	ldr	r3, [r3, #24]
 8001aa6:	2b00      	cmp	r3, #0
 8001aa8:	d019      	beq.n	8001ade <HAL_RCC_OscConfig+0x24a>
 8001aaa:	4b17      	ldr	r3, [pc, #92]	; (8001b08 <HAL_RCC_OscConfig+0x274>)
 8001aac:	2201      	movs	r2, #1
 8001aae:	601a      	str	r2, [r3, #0]
 8001ab0:	f7ff fba4 	bl	80011fc <HAL_GetTick>
 8001ab4:	6138      	str	r0, [r7, #16]
 8001ab6:	e008      	b.n	8001aca <HAL_RCC_OscConfig+0x236>
 8001ab8:	f7ff fba0 	bl	80011fc <HAL_GetTick>
 8001abc:	4602      	mov	r2, r0
 8001abe:	693b      	ldr	r3, [r7, #16]
 8001ac0:	1ad3      	subs	r3, r2, r3
 8001ac2:	2b02      	cmp	r3, #2
 8001ac4:	d901      	bls.n	8001aca <HAL_RCC_OscConfig+0x236>
 8001ac6:	2303      	movs	r3, #3
 8001ac8:	e15a      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 8001aca:	4b0d      	ldr	r3, [pc, #52]	; (8001b00 <HAL_RCC_OscConfig+0x26c>)
 8001acc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ace:	f003 0302 	and.w	r3, r3, #2
 8001ad2:	2b00      	cmp	r3, #0
 8001ad4:	d0f0      	beq.n	8001ab8 <HAL_RCC_OscConfig+0x224>
 8001ad6:	2001      	movs	r0, #1
 8001ad8:	f000 fad8 	bl	800208c <RCC_Delay>
 8001adc:	e01c      	b.n	8001b18 <HAL_RCC_OscConfig+0x284>
 8001ade:	4b0a      	ldr	r3, [pc, #40]	; (8001b08 <HAL_RCC_OscConfig+0x274>)
 8001ae0:	2200      	movs	r2, #0
 8001ae2:	601a      	str	r2, [r3, #0]
 8001ae4:	f7ff fb8a 	bl	80011fc <HAL_GetTick>
 8001ae8:	6138      	str	r0, [r7, #16]
 8001aea:	e00f      	b.n	8001b0c <HAL_RCC_OscConfig+0x278>
 8001aec:	f7ff fb86 	bl	80011fc <HAL_GetTick>
 8001af0:	4602      	mov	r2, r0
 8001af2:	693b      	ldr	r3, [r7, #16]
 8001af4:	1ad3      	subs	r3, r2, r3
 8001af6:	2b02      	cmp	r3, #2
 8001af8:	d908      	bls.n	8001b0c <HAL_RCC_OscConfig+0x278>
 8001afa:	2303      	movs	r3, #3
 8001afc:	e140      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 8001afe:	bf00      	nop
 8001b00:	40021000 	.word	0x40021000
 8001b04:	42420000 	.word	0x42420000
 8001b08:	42420480 	.word	0x42420480
 8001b0c:	4b9e      	ldr	r3, [pc, #632]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001b0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001b10:	f003 0302 	and.w	r3, r3, #2
 8001b14:	2b00      	cmp	r3, #0
 8001b16:	d1e9      	bne.n	8001aec <HAL_RCC_OscConfig+0x258>
 8001b18:	687b      	ldr	r3, [r7, #4]
 8001b1a:	681b      	ldr	r3, [r3, #0]
 8001b1c:	f003 0304 	and.w	r3, r3, #4
 8001b20:	2b00      	cmp	r3, #0
 8001b22:	f000 80a6 	beq.w	8001c72 <HAL_RCC_OscConfig+0x3de>
 8001b26:	2300      	movs	r3, #0
 8001b28:	75fb      	strb	r3, [r7, #23]
 8001b2a:	4b97      	ldr	r3, [pc, #604]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001b2c:	69db      	ldr	r3, [r3, #28]
 8001b2e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b32:	2b00      	cmp	r3, #0
 8001b34:	d10d      	bne.n	8001b52 <HAL_RCC_OscConfig+0x2be>
 8001b36:	4b94      	ldr	r3, [pc, #592]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001b38:	69db      	ldr	r3, [r3, #28]
 8001b3a:	4a93      	ldr	r2, [pc, #588]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001b3c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001b40:	61d3      	str	r3, [r2, #28]
 8001b42:	4b91      	ldr	r3, [pc, #580]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001b44:	69db      	ldr	r3, [r3, #28]
 8001b46:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b4a:	60bb      	str	r3, [r7, #8]
 8001b4c:	68bb      	ldr	r3, [r7, #8]
 8001b4e:	2301      	movs	r3, #1
 8001b50:	75fb      	strb	r3, [r7, #23]
 8001b52:	4b8e      	ldr	r3, [pc, #568]	; (8001d8c <HAL_RCC_OscConfig+0x4f8>)
 8001b54:	681b      	ldr	r3, [r3, #0]
 8001b56:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001b5a:	2b00      	cmp	r3, #0
 8001b5c:	d118      	bne.n	8001b90 <HAL_RCC_OscConfig+0x2fc>
 8001b5e:	4b8b      	ldr	r3, [pc, #556]	; (8001d8c <HAL_RCC_OscConfig+0x4f8>)
 8001b60:	681b      	ldr	r3, [r3, #0]
 8001b62:	4a8a      	ldr	r2, [pc, #552]	; (8001d8c <HAL_RCC_OscConfig+0x4f8>)
 8001b64:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001b68:	6013      	str	r3, [r2, #0]
 8001b6a:	f7ff fb47 	bl	80011fc <HAL_GetTick>
 8001b6e:	6138      	str	r0, [r7, #16]
 8001b70:	e008      	b.n	8001b84 <HAL_RCC_OscConfig+0x2f0>
 8001b72:	f7ff fb43 	bl	80011fc <HAL_GetTick>
 8001b76:	4602      	mov	r2, r0
 8001b78:	693b      	ldr	r3, [r7, #16]
 8001b7a:	1ad3      	subs	r3, r2, r3
 8001b7c:	2b64      	cmp	r3, #100	; 0x64
 8001b7e:	d901      	bls.n	8001b84 <HAL_RCC_OscConfig+0x2f0>
 8001b80:	2303      	movs	r3, #3
 8001b82:	e0fd      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 8001b84:	4b81      	ldr	r3, [pc, #516]	; (8001d8c <HAL_RCC_OscConfig+0x4f8>)
 8001b86:	681b      	ldr	r3, [r3, #0]
 8001b88:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001b8c:	2b00      	cmp	r3, #0
 8001b8e:	d0f0      	beq.n	8001b72 <HAL_RCC_OscConfig+0x2de>
 8001b90:	687b      	ldr	r3, [r7, #4]
 8001b92:	68db      	ldr	r3, [r3, #12]
 8001b94:	2b01      	cmp	r3, #1
 8001b96:	d106      	bne.n	8001ba6 <HAL_RCC_OscConfig+0x312>
 8001b98:	4b7b      	ldr	r3, [pc, #492]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001b9a:	6a1b      	ldr	r3, [r3, #32]
 8001b9c:	4a7a      	ldr	r2, [pc, #488]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001b9e:	f043 0301 	orr.w	r3, r3, #1
 8001ba2:	6213      	str	r3, [r2, #32]
 8001ba4:	e02d      	b.n	8001c02 <HAL_RCC_OscConfig+0x36e>
 8001ba6:	687b      	ldr	r3, [r7, #4]
 8001ba8:	68db      	ldr	r3, [r3, #12]
 8001baa:	2b00      	cmp	r3, #0
 8001bac:	d10c      	bne.n	8001bc8 <HAL_RCC_OscConfig+0x334>
 8001bae:	4b76      	ldr	r3, [pc, #472]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001bb0:	6a1b      	ldr	r3, [r3, #32]
 8001bb2:	4a75      	ldr	r2, [pc, #468]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001bb4:	f023 0301 	bic.w	r3, r3, #1
 8001bb8:	6213      	str	r3, [r2, #32]
 8001bba:	4b73      	ldr	r3, [pc, #460]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001bbc:	6a1b      	ldr	r3, [r3, #32]
 8001bbe:	4a72      	ldr	r2, [pc, #456]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001bc0:	f023 0304 	bic.w	r3, r3, #4
 8001bc4:	6213      	str	r3, [r2, #32]
 8001bc6:	e01c      	b.n	8001c02 <HAL_RCC_OscConfig+0x36e>
 8001bc8:	687b      	ldr	r3, [r7, #4]
 8001bca:	68db      	ldr	r3, [r3, #12]
 8001bcc:	2b05      	cmp	r3, #5
 8001bce:	d10c      	bne.n	8001bea <HAL_RCC_OscConfig+0x356>
 8001bd0:	4b6d      	ldr	r3, [pc, #436]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001bd2:	6a1b      	ldr	r3, [r3, #32]
 8001bd4:	4a6c      	ldr	r2, [pc, #432]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001bd6:	f043 0304 	orr.w	r3, r3, #4
 8001bda:	6213      	str	r3, [r2, #32]
 8001bdc:	4b6a      	ldr	r3, [pc, #424]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001bde:	6a1b      	ldr	r3, [r3, #32]
 8001be0:	4a69      	ldr	r2, [pc, #420]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001be2:	f043 0301 	orr.w	r3, r3, #1
 8001be6:	6213      	str	r3, [r2, #32]
 8001be8:	e00b      	b.n	8001c02 <HAL_RCC_OscConfig+0x36e>
 8001bea:	4b67      	ldr	r3, [pc, #412]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001bec:	6a1b      	ldr	r3, [r3, #32]
 8001bee:	4a66      	ldr	r2, [pc, #408]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001bf0:	f023 0301 	bic.w	r3, r3, #1
 8001bf4:	6213      	str	r3, [r2, #32]
 8001bf6:	4b64      	ldr	r3, [pc, #400]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001bf8:	6a1b      	ldr	r3, [r3, #32]
 8001bfa:	4a63      	ldr	r2, [pc, #396]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001bfc:	f023 0304 	bic.w	r3, r3, #4
 8001c00:	6213      	str	r3, [r2, #32]
 8001c02:	687b      	ldr	r3, [r7, #4]
 8001c04:	68db      	ldr	r3, [r3, #12]
 8001c06:	2b00      	cmp	r3, #0
 8001c08:	d015      	beq.n	8001c36 <HAL_RCC_OscConfig+0x3a2>
 8001c0a:	f7ff faf7 	bl	80011fc <HAL_GetTick>
 8001c0e:	6138      	str	r0, [r7, #16]
 8001c10:	e00a      	b.n	8001c28 <HAL_RCC_OscConfig+0x394>
 8001c12:	f7ff faf3 	bl	80011fc <HAL_GetTick>
 8001c16:	4602      	mov	r2, r0
 8001c18:	693b      	ldr	r3, [r7, #16]
 8001c1a:	1ad3      	subs	r3, r2, r3
 8001c1c:	f241 3288 	movw	r2, #5000	; 0x1388
 8001c20:	4293      	cmp	r3, r2
 8001c22:	d901      	bls.n	8001c28 <HAL_RCC_OscConfig+0x394>
 8001c24:	2303      	movs	r3, #3
 8001c26:	e0ab      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 8001c28:	4b57      	ldr	r3, [pc, #348]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001c2a:	6a1b      	ldr	r3, [r3, #32]
 8001c2c:	f003 0302 	and.w	r3, r3, #2
 8001c30:	2b00      	cmp	r3, #0
 8001c32:	d0ee      	beq.n	8001c12 <HAL_RCC_OscConfig+0x37e>
 8001c34:	e014      	b.n	8001c60 <HAL_RCC_OscConfig+0x3cc>
 8001c36:	f7ff fae1 	bl	80011fc <HAL_GetTick>
 8001c3a:	6138      	str	r0, [r7, #16]
 8001c3c:	e00a      	b.n	8001c54 <HAL_RCC_OscConfig+0x3c0>
 8001c3e:	f7ff fadd 	bl	80011fc <HAL_GetTick>
 8001c42:	4602      	mov	r2, r0
 8001c44:	693b      	ldr	r3, [r7, #16]
 8001c46:	1ad3      	subs	r3, r2, r3
 8001c48:	f241 3288 	movw	r2, #5000	; 0x1388
 8001c4c:	4293      	cmp	r3, r2
 8001c4e:	d901      	bls.n	8001c54 <HAL_RCC_OscConfig+0x3c0>
 8001c50:	2303      	movs	r3, #3
 8001c52:	e095      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 8001c54:	4b4c      	ldr	r3, [pc, #304]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001c56:	6a1b      	ldr	r3, [r3, #32]
 8001c58:	f003 0302 	and.w	r3, r3, #2
 8001c5c:	2b00      	cmp	r3, #0
 8001c5e:	d1ee      	bne.n	8001c3e <HAL_RCC_OscConfig+0x3aa>
 8001c60:	7dfb      	ldrb	r3, [r7, #23]
 8001c62:	2b01      	cmp	r3, #1
 8001c64:	d105      	bne.n	8001c72 <HAL_RCC_OscConfig+0x3de>
 8001c66:	4b48      	ldr	r3, [pc, #288]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001c68:	69db      	ldr	r3, [r3, #28]
 8001c6a:	4a47      	ldr	r2, [pc, #284]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001c6c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001c70:	61d3      	str	r3, [r2, #28]
 8001c72:	687b      	ldr	r3, [r7, #4]
 8001c74:	69db      	ldr	r3, [r3, #28]
 8001c76:	2b00      	cmp	r3, #0
 8001c78:	f000 8081 	beq.w	8001d7e <HAL_RCC_OscConfig+0x4ea>
 8001c7c:	4b42      	ldr	r3, [pc, #264]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001c7e:	685b      	ldr	r3, [r3, #4]
 8001c80:	f003 030c 	and.w	r3, r3, #12
 8001c84:	2b08      	cmp	r3, #8
 8001c86:	d061      	beq.n	8001d4c <HAL_RCC_OscConfig+0x4b8>
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	69db      	ldr	r3, [r3, #28]
 8001c8c:	2b02      	cmp	r3, #2
 8001c8e:	d146      	bne.n	8001d1e <HAL_RCC_OscConfig+0x48a>
 8001c90:	4b3f      	ldr	r3, [pc, #252]	; (8001d90 <HAL_RCC_OscConfig+0x4fc>)
 8001c92:	2200      	movs	r2, #0
 8001c94:	601a      	str	r2, [r3, #0]
 8001c96:	f7ff fab1 	bl	80011fc <HAL_GetTick>
 8001c9a:	6138      	str	r0, [r7, #16]
 8001c9c:	e008      	b.n	8001cb0 <HAL_RCC_OscConfig+0x41c>
 8001c9e:	f7ff faad 	bl	80011fc <HAL_GetTick>
 8001ca2:	4602      	mov	r2, r0
 8001ca4:	693b      	ldr	r3, [r7, #16]
 8001ca6:	1ad3      	subs	r3, r2, r3
 8001ca8:	2b02      	cmp	r3, #2
 8001caa:	d901      	bls.n	8001cb0 <HAL_RCC_OscConfig+0x41c>
 8001cac:	2303      	movs	r3, #3
 8001cae:	e067      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 8001cb0:	4b35      	ldr	r3, [pc, #212]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001cb2:	681b      	ldr	r3, [r3, #0]
 8001cb4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001cb8:	2b00      	cmp	r3, #0
 8001cba:	d1f0      	bne.n	8001c9e <HAL_RCC_OscConfig+0x40a>
 8001cbc:	687b      	ldr	r3, [r7, #4]
 8001cbe:	6a1b      	ldr	r3, [r3, #32]
 8001cc0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001cc4:	d108      	bne.n	8001cd8 <HAL_RCC_OscConfig+0x444>
 8001cc6:	4b30      	ldr	r3, [pc, #192]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001cc8:	685b      	ldr	r3, [r3, #4]
 8001cca:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	689b      	ldr	r3, [r3, #8]
 8001cd2:	492d      	ldr	r1, [pc, #180]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001cd4:	4313      	orrs	r3, r2
 8001cd6:	604b      	str	r3, [r1, #4]
 8001cd8:	4b2b      	ldr	r3, [pc, #172]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001cda:	685b      	ldr	r3, [r3, #4]
 8001cdc:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001ce0:	687b      	ldr	r3, [r7, #4]
 8001ce2:	6a19      	ldr	r1, [r3, #32]
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ce8:	430b      	orrs	r3, r1
 8001cea:	4927      	ldr	r1, [pc, #156]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001cec:	4313      	orrs	r3, r2
 8001cee:	604b      	str	r3, [r1, #4]
 8001cf0:	4b27      	ldr	r3, [pc, #156]	; (8001d90 <HAL_RCC_OscConfig+0x4fc>)
 8001cf2:	2201      	movs	r2, #1
 8001cf4:	601a      	str	r2, [r3, #0]
 8001cf6:	f7ff fa81 	bl	80011fc <HAL_GetTick>
 8001cfa:	6138      	str	r0, [r7, #16]
 8001cfc:	e008      	b.n	8001d10 <HAL_RCC_OscConfig+0x47c>
 8001cfe:	f7ff fa7d 	bl	80011fc <HAL_GetTick>
 8001d02:	4602      	mov	r2, r0
 8001d04:	693b      	ldr	r3, [r7, #16]
 8001d06:	1ad3      	subs	r3, r2, r3
 8001d08:	2b02      	cmp	r3, #2
 8001d0a:	d901      	bls.n	8001d10 <HAL_RCC_OscConfig+0x47c>
 8001d0c:	2303      	movs	r3, #3
 8001d0e:	e037      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 8001d10:	4b1d      	ldr	r3, [pc, #116]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001d12:	681b      	ldr	r3, [r3, #0]
 8001d14:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001d18:	2b00      	cmp	r3, #0
 8001d1a:	d0f0      	beq.n	8001cfe <HAL_RCC_OscConfig+0x46a>
 8001d1c:	e02f      	b.n	8001d7e <HAL_RCC_OscConfig+0x4ea>
 8001d1e:	4b1c      	ldr	r3, [pc, #112]	; (8001d90 <HAL_RCC_OscConfig+0x4fc>)
 8001d20:	2200      	movs	r2, #0
 8001d22:	601a      	str	r2, [r3, #0]
 8001d24:	f7ff fa6a 	bl	80011fc <HAL_GetTick>
 8001d28:	6138      	str	r0, [r7, #16]
 8001d2a:	e008      	b.n	8001d3e <HAL_RCC_OscConfig+0x4aa>
 8001d2c:	f7ff fa66 	bl	80011fc <HAL_GetTick>
 8001d30:	4602      	mov	r2, r0
 8001d32:	693b      	ldr	r3, [r7, #16]
 8001d34:	1ad3      	subs	r3, r2, r3
 8001d36:	2b02      	cmp	r3, #2
 8001d38:	d901      	bls.n	8001d3e <HAL_RCC_OscConfig+0x4aa>
 8001d3a:	2303      	movs	r3, #3
 8001d3c:	e020      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 8001d3e:	4b12      	ldr	r3, [pc, #72]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001d40:	681b      	ldr	r3, [r3, #0]
 8001d42:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001d46:	2b00      	cmp	r3, #0
 8001d48:	d1f0      	bne.n	8001d2c <HAL_RCC_OscConfig+0x498>
 8001d4a:	e018      	b.n	8001d7e <HAL_RCC_OscConfig+0x4ea>
 8001d4c:	687b      	ldr	r3, [r7, #4]
 8001d4e:	69db      	ldr	r3, [r3, #28]
 8001d50:	2b01      	cmp	r3, #1
 8001d52:	d101      	bne.n	8001d58 <HAL_RCC_OscConfig+0x4c4>
 8001d54:	2301      	movs	r3, #1
 8001d56:	e013      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 8001d58:	4b0b      	ldr	r3, [pc, #44]	; (8001d88 <HAL_RCC_OscConfig+0x4f4>)
 8001d5a:	685b      	ldr	r3, [r3, #4]
 8001d5c:	60fb      	str	r3, [r7, #12]
 8001d5e:	68fb      	ldr	r3, [r7, #12]
 8001d60:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	6a1b      	ldr	r3, [r3, #32]
 8001d68:	429a      	cmp	r2, r3
 8001d6a:	d106      	bne.n	8001d7a <HAL_RCC_OscConfig+0x4e6>
 8001d6c:	68fb      	ldr	r3, [r7, #12]
 8001d6e:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001d72:	687b      	ldr	r3, [r7, #4]
 8001d74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001d76:	429a      	cmp	r2, r3
 8001d78:	d001      	beq.n	8001d7e <HAL_RCC_OscConfig+0x4ea>
 8001d7a:	2301      	movs	r3, #1
 8001d7c:	e000      	b.n	8001d80 <HAL_RCC_OscConfig+0x4ec>
 8001d7e:	2300      	movs	r3, #0
 8001d80:	4618      	mov	r0, r3
 8001d82:	3718      	adds	r7, #24
 8001d84:	46bd      	mov	sp, r7
 8001d86:	bd80      	pop	{r7, pc}
 8001d88:	40021000 	.word	0x40021000
 8001d8c:	40007000 	.word	0x40007000
 8001d90:	42420060 	.word	0x42420060

08001d94 <HAL_RCC_ClockConfig>:
 8001d94:	b580      	push	{r7, lr}
 8001d96:	b084      	sub	sp, #16
 8001d98:	af00      	add	r7, sp, #0
 8001d9a:	6078      	str	r0, [r7, #4]
 8001d9c:	6039      	str	r1, [r7, #0]
 8001d9e:	687b      	ldr	r3, [r7, #4]
 8001da0:	2b00      	cmp	r3, #0
 8001da2:	d101      	bne.n	8001da8 <HAL_RCC_ClockConfig+0x14>
 8001da4:	2301      	movs	r3, #1
 8001da6:	e0d0      	b.n	8001f4a <HAL_RCC_ClockConfig+0x1b6>
 8001da8:	4b6a      	ldr	r3, [pc, #424]	; (8001f54 <HAL_RCC_ClockConfig+0x1c0>)
 8001daa:	681b      	ldr	r3, [r3, #0]
 8001dac:	f003 0307 	and.w	r3, r3, #7
 8001db0:	683a      	ldr	r2, [r7, #0]
 8001db2:	429a      	cmp	r2, r3
 8001db4:	d910      	bls.n	8001dd8 <HAL_RCC_ClockConfig+0x44>
 8001db6:	4b67      	ldr	r3, [pc, #412]	; (8001f54 <HAL_RCC_ClockConfig+0x1c0>)
 8001db8:	681b      	ldr	r3, [r3, #0]
 8001dba:	f023 0207 	bic.w	r2, r3, #7
 8001dbe:	4965      	ldr	r1, [pc, #404]	; (8001f54 <HAL_RCC_ClockConfig+0x1c0>)
 8001dc0:	683b      	ldr	r3, [r7, #0]
 8001dc2:	4313      	orrs	r3, r2
 8001dc4:	600b      	str	r3, [r1, #0]
 8001dc6:	4b63      	ldr	r3, [pc, #396]	; (8001f54 <HAL_RCC_ClockConfig+0x1c0>)
 8001dc8:	681b      	ldr	r3, [r3, #0]
 8001dca:	f003 0307 	and.w	r3, r3, #7
 8001dce:	683a      	ldr	r2, [r7, #0]
 8001dd0:	429a      	cmp	r2, r3
 8001dd2:	d001      	beq.n	8001dd8 <HAL_RCC_ClockConfig+0x44>
 8001dd4:	2301      	movs	r3, #1
 8001dd6:	e0b8      	b.n	8001f4a <HAL_RCC_ClockConfig+0x1b6>
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	681b      	ldr	r3, [r3, #0]
 8001ddc:	f003 0302 	and.w	r3, r3, #2
 8001de0:	2b00      	cmp	r3, #0
 8001de2:	d020      	beq.n	8001e26 <HAL_RCC_ClockConfig+0x92>
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	681b      	ldr	r3, [r3, #0]
 8001de8:	f003 0304 	and.w	r3, r3, #4
 8001dec:	2b00      	cmp	r3, #0
 8001dee:	d005      	beq.n	8001dfc <HAL_RCC_ClockConfig+0x68>
 8001df0:	4b59      	ldr	r3, [pc, #356]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001df2:	685b      	ldr	r3, [r3, #4]
 8001df4:	4a58      	ldr	r2, [pc, #352]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001df6:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001dfa:	6053      	str	r3, [r2, #4]
 8001dfc:	687b      	ldr	r3, [r7, #4]
 8001dfe:	681b      	ldr	r3, [r3, #0]
 8001e00:	f003 0308 	and.w	r3, r3, #8
 8001e04:	2b00      	cmp	r3, #0
 8001e06:	d005      	beq.n	8001e14 <HAL_RCC_ClockConfig+0x80>
 8001e08:	4b53      	ldr	r3, [pc, #332]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001e0a:	685b      	ldr	r3, [r3, #4]
 8001e0c:	4a52      	ldr	r2, [pc, #328]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001e0e:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001e12:	6053      	str	r3, [r2, #4]
 8001e14:	4b50      	ldr	r3, [pc, #320]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001e16:	685b      	ldr	r3, [r3, #4]
 8001e18:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001e1c:	687b      	ldr	r3, [r7, #4]
 8001e1e:	689b      	ldr	r3, [r3, #8]
 8001e20:	494d      	ldr	r1, [pc, #308]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001e22:	4313      	orrs	r3, r2
 8001e24:	604b      	str	r3, [r1, #4]
 8001e26:	687b      	ldr	r3, [r7, #4]
 8001e28:	681b      	ldr	r3, [r3, #0]
 8001e2a:	f003 0301 	and.w	r3, r3, #1
 8001e2e:	2b00      	cmp	r3, #0
 8001e30:	d040      	beq.n	8001eb4 <HAL_RCC_ClockConfig+0x120>
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	685b      	ldr	r3, [r3, #4]
 8001e36:	2b01      	cmp	r3, #1
 8001e38:	d107      	bne.n	8001e4a <HAL_RCC_ClockConfig+0xb6>
 8001e3a:	4b47      	ldr	r3, [pc, #284]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001e3c:	681b      	ldr	r3, [r3, #0]
 8001e3e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001e42:	2b00      	cmp	r3, #0
 8001e44:	d115      	bne.n	8001e72 <HAL_RCC_ClockConfig+0xde>
 8001e46:	2301      	movs	r3, #1
 8001e48:	e07f      	b.n	8001f4a <HAL_RCC_ClockConfig+0x1b6>
 8001e4a:	687b      	ldr	r3, [r7, #4]
 8001e4c:	685b      	ldr	r3, [r3, #4]
 8001e4e:	2b02      	cmp	r3, #2
 8001e50:	d107      	bne.n	8001e62 <HAL_RCC_ClockConfig+0xce>
 8001e52:	4b41      	ldr	r3, [pc, #260]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001e54:	681b      	ldr	r3, [r3, #0]
 8001e56:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001e5a:	2b00      	cmp	r3, #0
 8001e5c:	d109      	bne.n	8001e72 <HAL_RCC_ClockConfig+0xde>
 8001e5e:	2301      	movs	r3, #1
 8001e60:	e073      	b.n	8001f4a <HAL_RCC_ClockConfig+0x1b6>
 8001e62:	4b3d      	ldr	r3, [pc, #244]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001e64:	681b      	ldr	r3, [r3, #0]
 8001e66:	f003 0302 	and.w	r3, r3, #2
 8001e6a:	2b00      	cmp	r3, #0
 8001e6c:	d101      	bne.n	8001e72 <HAL_RCC_ClockConfig+0xde>
 8001e6e:	2301      	movs	r3, #1
 8001e70:	e06b      	b.n	8001f4a <HAL_RCC_ClockConfig+0x1b6>
 8001e72:	4b39      	ldr	r3, [pc, #228]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001e74:	685b      	ldr	r3, [r3, #4]
 8001e76:	f023 0203 	bic.w	r2, r3, #3
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	685b      	ldr	r3, [r3, #4]
 8001e7e:	4936      	ldr	r1, [pc, #216]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001e80:	4313      	orrs	r3, r2
 8001e82:	604b      	str	r3, [r1, #4]
 8001e84:	f7ff f9ba 	bl	80011fc <HAL_GetTick>
 8001e88:	60f8      	str	r0, [r7, #12]
 8001e8a:	e00a      	b.n	8001ea2 <HAL_RCC_ClockConfig+0x10e>
 8001e8c:	f7ff f9b6 	bl	80011fc <HAL_GetTick>
 8001e90:	4602      	mov	r2, r0
 8001e92:	68fb      	ldr	r3, [r7, #12]
 8001e94:	1ad3      	subs	r3, r2, r3
 8001e96:	f241 3288 	movw	r2, #5000	; 0x1388
 8001e9a:	4293      	cmp	r3, r2
 8001e9c:	d901      	bls.n	8001ea2 <HAL_RCC_ClockConfig+0x10e>
 8001e9e:	2303      	movs	r3, #3
 8001ea0:	e053      	b.n	8001f4a <HAL_RCC_ClockConfig+0x1b6>
 8001ea2:	4b2d      	ldr	r3, [pc, #180]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001ea4:	685b      	ldr	r3, [r3, #4]
 8001ea6:	f003 020c 	and.w	r2, r3, #12
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	685b      	ldr	r3, [r3, #4]
 8001eae:	009b      	lsls	r3, r3, #2
 8001eb0:	429a      	cmp	r2, r3
 8001eb2:	d1eb      	bne.n	8001e8c <HAL_RCC_ClockConfig+0xf8>
 8001eb4:	4b27      	ldr	r3, [pc, #156]	; (8001f54 <HAL_RCC_ClockConfig+0x1c0>)
 8001eb6:	681b      	ldr	r3, [r3, #0]
 8001eb8:	f003 0307 	and.w	r3, r3, #7
 8001ebc:	683a      	ldr	r2, [r7, #0]
 8001ebe:	429a      	cmp	r2, r3
 8001ec0:	d210      	bcs.n	8001ee4 <HAL_RCC_ClockConfig+0x150>
 8001ec2:	4b24      	ldr	r3, [pc, #144]	; (8001f54 <HAL_RCC_ClockConfig+0x1c0>)
 8001ec4:	681b      	ldr	r3, [r3, #0]
 8001ec6:	f023 0207 	bic.w	r2, r3, #7
 8001eca:	4922      	ldr	r1, [pc, #136]	; (8001f54 <HAL_RCC_ClockConfig+0x1c0>)
 8001ecc:	683b      	ldr	r3, [r7, #0]
 8001ece:	4313      	orrs	r3, r2
 8001ed0:	600b      	str	r3, [r1, #0]
 8001ed2:	4b20      	ldr	r3, [pc, #128]	; (8001f54 <HAL_RCC_ClockConfig+0x1c0>)
 8001ed4:	681b      	ldr	r3, [r3, #0]
 8001ed6:	f003 0307 	and.w	r3, r3, #7
 8001eda:	683a      	ldr	r2, [r7, #0]
 8001edc:	429a      	cmp	r2, r3
 8001ede:	d001      	beq.n	8001ee4 <HAL_RCC_ClockConfig+0x150>
 8001ee0:	2301      	movs	r3, #1
 8001ee2:	e032      	b.n	8001f4a <HAL_RCC_ClockConfig+0x1b6>
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	681b      	ldr	r3, [r3, #0]
 8001ee8:	f003 0304 	and.w	r3, r3, #4
 8001eec:	2b00      	cmp	r3, #0
 8001eee:	d008      	beq.n	8001f02 <HAL_RCC_ClockConfig+0x16e>
 8001ef0:	4b19      	ldr	r3, [pc, #100]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001ef2:	685b      	ldr	r3, [r3, #4]
 8001ef4:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	68db      	ldr	r3, [r3, #12]
 8001efc:	4916      	ldr	r1, [pc, #88]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001efe:	4313      	orrs	r3, r2
 8001f00:	604b      	str	r3, [r1, #4]
 8001f02:	687b      	ldr	r3, [r7, #4]
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	f003 0308 	and.w	r3, r3, #8
 8001f0a:	2b00      	cmp	r3, #0
 8001f0c:	d009      	beq.n	8001f22 <HAL_RCC_ClockConfig+0x18e>
 8001f0e:	4b12      	ldr	r3, [pc, #72]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001f10:	685b      	ldr	r3, [r3, #4]
 8001f12:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001f16:	687b      	ldr	r3, [r7, #4]
 8001f18:	691b      	ldr	r3, [r3, #16]
 8001f1a:	00db      	lsls	r3, r3, #3
 8001f1c:	490e      	ldr	r1, [pc, #56]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001f1e:	4313      	orrs	r3, r2
 8001f20:	604b      	str	r3, [r1, #4]
 8001f22:	f000 f821 	bl	8001f68 <HAL_RCC_GetSysClockFreq>
 8001f26:	4602      	mov	r2, r0
 8001f28:	4b0b      	ldr	r3, [pc, #44]	; (8001f58 <HAL_RCC_ClockConfig+0x1c4>)
 8001f2a:	685b      	ldr	r3, [r3, #4]
 8001f2c:	091b      	lsrs	r3, r3, #4
 8001f2e:	f003 030f 	and.w	r3, r3, #15
 8001f32:	490a      	ldr	r1, [pc, #40]	; (8001f5c <HAL_RCC_ClockConfig+0x1c8>)
 8001f34:	5ccb      	ldrb	r3, [r1, r3]
 8001f36:	fa22 f303 	lsr.w	r3, r2, r3
 8001f3a:	4a09      	ldr	r2, [pc, #36]	; (8001f60 <HAL_RCC_ClockConfig+0x1cc>)
 8001f3c:	6013      	str	r3, [r2, #0]
 8001f3e:	4b09      	ldr	r3, [pc, #36]	; (8001f64 <HAL_RCC_ClockConfig+0x1d0>)
 8001f40:	681b      	ldr	r3, [r3, #0]
 8001f42:	4618      	mov	r0, r3
 8001f44:	f7ff f918 	bl	8001178 <HAL_InitTick>
 8001f48:	2300      	movs	r3, #0
 8001f4a:	4618      	mov	r0, r3
 8001f4c:	3710      	adds	r7, #16
 8001f4e:	46bd      	mov	sp, r7
 8001f50:	bd80      	pop	{r7, pc}
 8001f52:	bf00      	nop
 8001f54:	40022000 	.word	0x40022000
 8001f58:	40021000 	.word	0x40021000
 8001f5c:	08002ba8 	.word	0x08002ba8
 8001f60:	20000240 	.word	0x20000240
 8001f64:	20000244 	.word	0x20000244

08001f68 <HAL_RCC_GetSysClockFreq>:
 8001f68:	b490      	push	{r4, r7}
 8001f6a:	b08a      	sub	sp, #40	; 0x28
 8001f6c:	af00      	add	r7, sp, #0
 8001f6e:	4b2a      	ldr	r3, [pc, #168]	; (8002018 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001f70:	1d3c      	adds	r4, r7, #4
 8001f72:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001f74:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001f78:	f240 2301 	movw	r3, #513	; 0x201
 8001f7c:	803b      	strh	r3, [r7, #0]
 8001f7e:	2300      	movs	r3, #0
 8001f80:	61fb      	str	r3, [r7, #28]
 8001f82:	2300      	movs	r3, #0
 8001f84:	61bb      	str	r3, [r7, #24]
 8001f86:	2300      	movs	r3, #0
 8001f88:	627b      	str	r3, [r7, #36]	; 0x24
 8001f8a:	2300      	movs	r3, #0
 8001f8c:	617b      	str	r3, [r7, #20]
 8001f8e:	2300      	movs	r3, #0
 8001f90:	623b      	str	r3, [r7, #32]
 8001f92:	4b22      	ldr	r3, [pc, #136]	; (800201c <HAL_RCC_GetSysClockFreq+0xb4>)
 8001f94:	685b      	ldr	r3, [r3, #4]
 8001f96:	61fb      	str	r3, [r7, #28]
 8001f98:	69fb      	ldr	r3, [r7, #28]
 8001f9a:	f003 030c 	and.w	r3, r3, #12
 8001f9e:	2b04      	cmp	r3, #4
 8001fa0:	d002      	beq.n	8001fa8 <HAL_RCC_GetSysClockFreq+0x40>
 8001fa2:	2b08      	cmp	r3, #8
 8001fa4:	d003      	beq.n	8001fae <HAL_RCC_GetSysClockFreq+0x46>
 8001fa6:	e02d      	b.n	8002004 <HAL_RCC_GetSysClockFreq+0x9c>
 8001fa8:	4b1d      	ldr	r3, [pc, #116]	; (8002020 <HAL_RCC_GetSysClockFreq+0xb8>)
 8001faa:	623b      	str	r3, [r7, #32]
 8001fac:	e02d      	b.n	800200a <HAL_RCC_GetSysClockFreq+0xa2>
 8001fae:	69fb      	ldr	r3, [r7, #28]
 8001fb0:	0c9b      	lsrs	r3, r3, #18
 8001fb2:	f003 030f 	and.w	r3, r3, #15
 8001fb6:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001fba:	4413      	add	r3, r2
 8001fbc:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001fc0:	617b      	str	r3, [r7, #20]
 8001fc2:	69fb      	ldr	r3, [r7, #28]
 8001fc4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001fc8:	2b00      	cmp	r3, #0
 8001fca:	d013      	beq.n	8001ff4 <HAL_RCC_GetSysClockFreq+0x8c>
 8001fcc:	4b13      	ldr	r3, [pc, #76]	; (800201c <HAL_RCC_GetSysClockFreq+0xb4>)
 8001fce:	685b      	ldr	r3, [r3, #4]
 8001fd0:	0c5b      	lsrs	r3, r3, #17
 8001fd2:	f003 0301 	and.w	r3, r3, #1
 8001fd6:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001fda:	4413      	add	r3, r2
 8001fdc:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001fe0:	61bb      	str	r3, [r7, #24]
 8001fe2:	697b      	ldr	r3, [r7, #20]
 8001fe4:	4a0e      	ldr	r2, [pc, #56]	; (8002020 <HAL_RCC_GetSysClockFreq+0xb8>)
 8001fe6:	fb02 f203 	mul.w	r2, r2, r3
 8001fea:	69bb      	ldr	r3, [r7, #24]
 8001fec:	fbb2 f3f3 	udiv	r3, r2, r3
 8001ff0:	627b      	str	r3, [r7, #36]	; 0x24
 8001ff2:	e004      	b.n	8001ffe <HAL_RCC_GetSysClockFreq+0x96>
 8001ff4:	697b      	ldr	r3, [r7, #20]
 8001ff6:	4a0b      	ldr	r2, [pc, #44]	; (8002024 <HAL_RCC_GetSysClockFreq+0xbc>)
 8001ff8:	fb02 f303 	mul.w	r3, r2, r3
 8001ffc:	627b      	str	r3, [r7, #36]	; 0x24
 8001ffe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002000:	623b      	str	r3, [r7, #32]
 8002002:	e002      	b.n	800200a <HAL_RCC_GetSysClockFreq+0xa2>
 8002004:	4b06      	ldr	r3, [pc, #24]	; (8002020 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002006:	623b      	str	r3, [r7, #32]
 8002008:	bf00      	nop
 800200a:	6a3b      	ldr	r3, [r7, #32]
 800200c:	4618      	mov	r0, r3
 800200e:	3728      	adds	r7, #40	; 0x28
 8002010:	46bd      	mov	sp, r7
 8002012:	bc90      	pop	{r4, r7}
 8002014:	4770      	bx	lr
 8002016:	bf00      	nop
 8002018:	08002b98 	.word	0x08002b98
 800201c:	40021000 	.word	0x40021000
 8002020:	007a1200 	.word	0x007a1200
 8002024:	003d0900 	.word	0x003d0900

08002028 <HAL_RCC_GetHCLKFreq>:
 8002028:	b480      	push	{r7}
 800202a:	af00      	add	r7, sp, #0
 800202c:	4b02      	ldr	r3, [pc, #8]	; (8002038 <HAL_RCC_GetHCLKFreq+0x10>)
 800202e:	681b      	ldr	r3, [r3, #0]
 8002030:	4618      	mov	r0, r3
 8002032:	46bd      	mov	sp, r7
 8002034:	bc80      	pop	{r7}
 8002036:	4770      	bx	lr
 8002038:	20000240 	.word	0x20000240

0800203c <HAL_RCC_GetPCLK1Freq>:
 800203c:	b580      	push	{r7, lr}
 800203e:	af00      	add	r7, sp, #0
 8002040:	f7ff fff2 	bl	8002028 <HAL_RCC_GetHCLKFreq>
 8002044:	4602      	mov	r2, r0
 8002046:	4b05      	ldr	r3, [pc, #20]	; (800205c <HAL_RCC_GetPCLK1Freq+0x20>)
 8002048:	685b      	ldr	r3, [r3, #4]
 800204a:	0a1b      	lsrs	r3, r3, #8
 800204c:	f003 0307 	and.w	r3, r3, #7
 8002050:	4903      	ldr	r1, [pc, #12]	; (8002060 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002052:	5ccb      	ldrb	r3, [r1, r3]
 8002054:	fa22 f303 	lsr.w	r3, r2, r3
 8002058:	4618      	mov	r0, r3
 800205a:	bd80      	pop	{r7, pc}
 800205c:	40021000 	.word	0x40021000
 8002060:	08002bb8 	.word	0x08002bb8

08002064 <HAL_RCC_GetPCLK2Freq>:
 8002064:	b580      	push	{r7, lr}
 8002066:	af00      	add	r7, sp, #0
 8002068:	f7ff ffde 	bl	8002028 <HAL_RCC_GetHCLKFreq>
 800206c:	4602      	mov	r2, r0
 800206e:	4b05      	ldr	r3, [pc, #20]	; (8002084 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002070:	685b      	ldr	r3, [r3, #4]
 8002072:	0adb      	lsrs	r3, r3, #11
 8002074:	f003 0307 	and.w	r3, r3, #7
 8002078:	4903      	ldr	r1, [pc, #12]	; (8002088 <HAL_RCC_GetPCLK2Freq+0x24>)
 800207a:	5ccb      	ldrb	r3, [r1, r3]
 800207c:	fa22 f303 	lsr.w	r3, r2, r3
 8002080:	4618      	mov	r0, r3
 8002082:	bd80      	pop	{r7, pc}
 8002084:	40021000 	.word	0x40021000
 8002088:	08002bb8 	.word	0x08002bb8

0800208c <RCC_Delay>:
 800208c:	b480      	push	{r7}
 800208e:	b085      	sub	sp, #20
 8002090:	af00      	add	r7, sp, #0
 8002092:	6078      	str	r0, [r7, #4]
 8002094:	4b0a      	ldr	r3, [pc, #40]	; (80020c0 <RCC_Delay+0x34>)
 8002096:	681b      	ldr	r3, [r3, #0]
 8002098:	4a0a      	ldr	r2, [pc, #40]	; (80020c4 <RCC_Delay+0x38>)
 800209a:	fba2 2303 	umull	r2, r3, r2, r3
 800209e:	0a5b      	lsrs	r3, r3, #9
 80020a0:	687a      	ldr	r2, [r7, #4]
 80020a2:	fb02 f303 	mul.w	r3, r2, r3
 80020a6:	60fb      	str	r3, [r7, #12]
 80020a8:	bf00      	nop
 80020aa:	68fb      	ldr	r3, [r7, #12]
 80020ac:	1e5a      	subs	r2, r3, #1
 80020ae:	60fa      	str	r2, [r7, #12]
 80020b0:	2b00      	cmp	r3, #0
 80020b2:	d1f9      	bne.n	80020a8 <RCC_Delay+0x1c>
 80020b4:	bf00      	nop
 80020b6:	bf00      	nop
 80020b8:	3714      	adds	r7, #20
 80020ba:	46bd      	mov	sp, r7
 80020bc:	bc80      	pop	{r7}
 80020be:	4770      	bx	lr
 80020c0:	20000240 	.word	0x20000240
 80020c4:	10624dd3 	.word	0x10624dd3

080020c8 <HAL_UART_Init>:
 80020c8:	b580      	push	{r7, lr}
 80020ca:	b082      	sub	sp, #8
 80020cc:	af00      	add	r7, sp, #0
 80020ce:	6078      	str	r0, [r7, #4]
 80020d0:	687b      	ldr	r3, [r7, #4]
 80020d2:	2b00      	cmp	r3, #0
 80020d4:	d101      	bne.n	80020da <HAL_UART_Init+0x12>
 80020d6:	2301      	movs	r3, #1
 80020d8:	e03f      	b.n	800215a <HAL_UART_Init+0x92>
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80020e0:	b2db      	uxtb	r3, r3
 80020e2:	2b00      	cmp	r3, #0
 80020e4:	d106      	bne.n	80020f4 <HAL_UART_Init+0x2c>
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	2200      	movs	r2, #0
 80020ea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80020ee:	6878      	ldr	r0, [r7, #4]
 80020f0:	f7fe ff7a 	bl	8000fe8 <HAL_UART_MspInit>
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	2224      	movs	r2, #36	; 0x24
 80020f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	681b      	ldr	r3, [r3, #0]
 8002100:	68da      	ldr	r2, [r3, #12]
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	681b      	ldr	r3, [r3, #0]
 8002106:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800210a:	60da      	str	r2, [r3, #12]
 800210c:	6878      	ldr	r0, [r7, #4]
 800210e:	f000 fc7d 	bl	8002a0c <UART_SetConfig>
 8002112:	687b      	ldr	r3, [r7, #4]
 8002114:	681b      	ldr	r3, [r3, #0]
 8002116:	691a      	ldr	r2, [r3, #16]
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	681b      	ldr	r3, [r3, #0]
 800211c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002120:	611a      	str	r2, [r3, #16]
 8002122:	687b      	ldr	r3, [r7, #4]
 8002124:	681b      	ldr	r3, [r3, #0]
 8002126:	695a      	ldr	r2, [r3, #20]
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002130:	615a      	str	r2, [r3, #20]
 8002132:	687b      	ldr	r3, [r7, #4]
 8002134:	681b      	ldr	r3, [r3, #0]
 8002136:	68da      	ldr	r2, [r3, #12]
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	681b      	ldr	r3, [r3, #0]
 800213c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002140:	60da      	str	r2, [r3, #12]
 8002142:	687b      	ldr	r3, [r7, #4]
 8002144:	2200      	movs	r2, #0
 8002146:	641a      	str	r2, [r3, #64]	; 0x40
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	2220      	movs	r2, #32
 800214c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	2220      	movs	r2, #32
 8002154:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002158:	2300      	movs	r3, #0
 800215a:	4618      	mov	r0, r3
 800215c:	3708      	adds	r7, #8
 800215e:	46bd      	mov	sp, r7
 8002160:	bd80      	pop	{r7, pc}

08002162 <HAL_UART_Transmit>:
 8002162:	b580      	push	{r7, lr}
 8002164:	b08a      	sub	sp, #40	; 0x28
 8002166:	af02      	add	r7, sp, #8
 8002168:	60f8      	str	r0, [r7, #12]
 800216a:	60b9      	str	r1, [r7, #8]
 800216c:	603b      	str	r3, [r7, #0]
 800216e:	4613      	mov	r3, r2
 8002170:	80fb      	strh	r3, [r7, #6]
 8002172:	2300      	movs	r3, #0
 8002174:	617b      	str	r3, [r7, #20]
 8002176:	68fb      	ldr	r3, [r7, #12]
 8002178:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800217c:	b2db      	uxtb	r3, r3
 800217e:	2b20      	cmp	r3, #32
 8002180:	d17c      	bne.n	800227c <HAL_UART_Transmit+0x11a>
 8002182:	68bb      	ldr	r3, [r7, #8]
 8002184:	2b00      	cmp	r3, #0
 8002186:	d002      	beq.n	800218e <HAL_UART_Transmit+0x2c>
 8002188:	88fb      	ldrh	r3, [r7, #6]
 800218a:	2b00      	cmp	r3, #0
 800218c:	d101      	bne.n	8002192 <HAL_UART_Transmit+0x30>
 800218e:	2301      	movs	r3, #1
 8002190:	e075      	b.n	800227e <HAL_UART_Transmit+0x11c>
 8002192:	68fb      	ldr	r3, [r7, #12]
 8002194:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002198:	2b01      	cmp	r3, #1
 800219a:	d101      	bne.n	80021a0 <HAL_UART_Transmit+0x3e>
 800219c:	2302      	movs	r3, #2
 800219e:	e06e      	b.n	800227e <HAL_UART_Transmit+0x11c>
 80021a0:	68fb      	ldr	r3, [r7, #12]
 80021a2:	2201      	movs	r2, #1
 80021a4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80021a8:	68fb      	ldr	r3, [r7, #12]
 80021aa:	2200      	movs	r2, #0
 80021ac:	641a      	str	r2, [r3, #64]	; 0x40
 80021ae:	68fb      	ldr	r3, [r7, #12]
 80021b0:	2221      	movs	r2, #33	; 0x21
 80021b2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80021b6:	f7ff f821 	bl	80011fc <HAL_GetTick>
 80021ba:	6178      	str	r0, [r7, #20]
 80021bc:	68fb      	ldr	r3, [r7, #12]
 80021be:	88fa      	ldrh	r2, [r7, #6]
 80021c0:	849a      	strh	r2, [r3, #36]	; 0x24
 80021c2:	68fb      	ldr	r3, [r7, #12]
 80021c4:	88fa      	ldrh	r2, [r7, #6]
 80021c6:	84da      	strh	r2, [r3, #38]	; 0x26
 80021c8:	68fb      	ldr	r3, [r7, #12]
 80021ca:	689b      	ldr	r3, [r3, #8]
 80021cc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80021d0:	d108      	bne.n	80021e4 <HAL_UART_Transmit+0x82>
 80021d2:	68fb      	ldr	r3, [r7, #12]
 80021d4:	691b      	ldr	r3, [r3, #16]
 80021d6:	2b00      	cmp	r3, #0
 80021d8:	d104      	bne.n	80021e4 <HAL_UART_Transmit+0x82>
 80021da:	2300      	movs	r3, #0
 80021dc:	61fb      	str	r3, [r7, #28]
 80021de:	68bb      	ldr	r3, [r7, #8]
 80021e0:	61bb      	str	r3, [r7, #24]
 80021e2:	e003      	b.n	80021ec <HAL_UART_Transmit+0x8a>
 80021e4:	68bb      	ldr	r3, [r7, #8]
 80021e6:	61fb      	str	r3, [r7, #28]
 80021e8:	2300      	movs	r3, #0
 80021ea:	61bb      	str	r3, [r7, #24]
 80021ec:	68fb      	ldr	r3, [r7, #12]
 80021ee:	2200      	movs	r2, #0
 80021f0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80021f4:	e02a      	b.n	800224c <HAL_UART_Transmit+0xea>
 80021f6:	683b      	ldr	r3, [r7, #0]
 80021f8:	9300      	str	r3, [sp, #0]
 80021fa:	697b      	ldr	r3, [r7, #20]
 80021fc:	2200      	movs	r2, #0
 80021fe:	2180      	movs	r1, #128	; 0x80
 8002200:	68f8      	ldr	r0, [r7, #12]
 8002202:	f000 fa2f 	bl	8002664 <UART_WaitOnFlagUntilTimeout>
 8002206:	4603      	mov	r3, r0
 8002208:	2b00      	cmp	r3, #0
 800220a:	d001      	beq.n	8002210 <HAL_UART_Transmit+0xae>
 800220c:	2303      	movs	r3, #3
 800220e:	e036      	b.n	800227e <HAL_UART_Transmit+0x11c>
 8002210:	69fb      	ldr	r3, [r7, #28]
 8002212:	2b00      	cmp	r3, #0
 8002214:	d10b      	bne.n	800222e <HAL_UART_Transmit+0xcc>
 8002216:	69bb      	ldr	r3, [r7, #24]
 8002218:	881b      	ldrh	r3, [r3, #0]
 800221a:	461a      	mov	r2, r3
 800221c:	68fb      	ldr	r3, [r7, #12]
 800221e:	681b      	ldr	r3, [r3, #0]
 8002220:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002224:	605a      	str	r2, [r3, #4]
 8002226:	69bb      	ldr	r3, [r7, #24]
 8002228:	3302      	adds	r3, #2
 800222a:	61bb      	str	r3, [r7, #24]
 800222c:	e007      	b.n	800223e <HAL_UART_Transmit+0xdc>
 800222e:	69fb      	ldr	r3, [r7, #28]
 8002230:	781a      	ldrb	r2, [r3, #0]
 8002232:	68fb      	ldr	r3, [r7, #12]
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	605a      	str	r2, [r3, #4]
 8002238:	69fb      	ldr	r3, [r7, #28]
 800223a:	3301      	adds	r3, #1
 800223c:	61fb      	str	r3, [r7, #28]
 800223e:	68fb      	ldr	r3, [r7, #12]
 8002240:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002242:	b29b      	uxth	r3, r3
 8002244:	3b01      	subs	r3, #1
 8002246:	b29a      	uxth	r2, r3
 8002248:	68fb      	ldr	r3, [r7, #12]
 800224a:	84da      	strh	r2, [r3, #38]	; 0x26
 800224c:	68fb      	ldr	r3, [r7, #12]
 800224e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002250:	b29b      	uxth	r3, r3
 8002252:	2b00      	cmp	r3, #0
 8002254:	d1cf      	bne.n	80021f6 <HAL_UART_Transmit+0x94>
 8002256:	683b      	ldr	r3, [r7, #0]
 8002258:	9300      	str	r3, [sp, #0]
 800225a:	697b      	ldr	r3, [r7, #20]
 800225c:	2200      	movs	r2, #0
 800225e:	2140      	movs	r1, #64	; 0x40
 8002260:	68f8      	ldr	r0, [r7, #12]
 8002262:	f000 f9ff 	bl	8002664 <UART_WaitOnFlagUntilTimeout>
 8002266:	4603      	mov	r3, r0
 8002268:	2b00      	cmp	r3, #0
 800226a:	d001      	beq.n	8002270 <HAL_UART_Transmit+0x10e>
 800226c:	2303      	movs	r3, #3
 800226e:	e006      	b.n	800227e <HAL_UART_Transmit+0x11c>
 8002270:	68fb      	ldr	r3, [r7, #12]
 8002272:	2220      	movs	r2, #32
 8002274:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002278:	2300      	movs	r3, #0
 800227a:	e000      	b.n	800227e <HAL_UART_Transmit+0x11c>
 800227c:	2302      	movs	r3, #2
 800227e:	4618      	mov	r0, r3
 8002280:	3720      	adds	r7, #32
 8002282:	46bd      	mov	sp, r7
 8002284:	bd80      	pop	{r7, pc}

08002286 <HAL_UART_Receive_IT>:
 8002286:	b580      	push	{r7, lr}
 8002288:	b084      	sub	sp, #16
 800228a:	af00      	add	r7, sp, #0
 800228c:	60f8      	str	r0, [r7, #12]
 800228e:	60b9      	str	r1, [r7, #8]
 8002290:	4613      	mov	r3, r2
 8002292:	80fb      	strh	r3, [r7, #6]
 8002294:	68fb      	ldr	r3, [r7, #12]
 8002296:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800229a:	b2db      	uxtb	r3, r3
 800229c:	2b20      	cmp	r3, #32
 800229e:	d11d      	bne.n	80022dc <HAL_UART_Receive_IT+0x56>
 80022a0:	68bb      	ldr	r3, [r7, #8]
 80022a2:	2b00      	cmp	r3, #0
 80022a4:	d002      	beq.n	80022ac <HAL_UART_Receive_IT+0x26>
 80022a6:	88fb      	ldrh	r3, [r7, #6]
 80022a8:	2b00      	cmp	r3, #0
 80022aa:	d101      	bne.n	80022b0 <HAL_UART_Receive_IT+0x2a>
 80022ac:	2301      	movs	r3, #1
 80022ae:	e016      	b.n	80022de <HAL_UART_Receive_IT+0x58>
 80022b0:	68fb      	ldr	r3, [r7, #12]
 80022b2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80022b6:	2b01      	cmp	r3, #1
 80022b8:	d101      	bne.n	80022be <HAL_UART_Receive_IT+0x38>
 80022ba:	2302      	movs	r3, #2
 80022bc:	e00f      	b.n	80022de <HAL_UART_Receive_IT+0x58>
 80022be:	68fb      	ldr	r3, [r7, #12]
 80022c0:	2201      	movs	r2, #1
 80022c2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80022c6:	68fb      	ldr	r3, [r7, #12]
 80022c8:	2200      	movs	r2, #0
 80022ca:	631a      	str	r2, [r3, #48]	; 0x30
 80022cc:	88fb      	ldrh	r3, [r7, #6]
 80022ce:	461a      	mov	r2, r3
 80022d0:	68b9      	ldr	r1, [r7, #8]
 80022d2:	68f8      	ldr	r0, [r7, #12]
 80022d4:	f000 fa10 	bl	80026f8 <UART_Start_Receive_IT>
 80022d8:	4603      	mov	r3, r0
 80022da:	e000      	b.n	80022de <HAL_UART_Receive_IT+0x58>
 80022dc:	2302      	movs	r3, #2
 80022de:	4618      	mov	r0, r3
 80022e0:	3710      	adds	r7, #16
 80022e2:	46bd      	mov	sp, r7
 80022e4:	bd80      	pop	{r7, pc}
	...

080022e8 <HAL_UART_IRQHandler>:
 80022e8:	b580      	push	{r7, lr}
 80022ea:	b08a      	sub	sp, #40	; 0x28
 80022ec:	af00      	add	r7, sp, #0
 80022ee:	6078      	str	r0, [r7, #4]
 80022f0:	687b      	ldr	r3, [r7, #4]
 80022f2:	681b      	ldr	r3, [r3, #0]
 80022f4:	681b      	ldr	r3, [r3, #0]
 80022f6:	627b      	str	r3, [r7, #36]	; 0x24
 80022f8:	687b      	ldr	r3, [r7, #4]
 80022fa:	681b      	ldr	r3, [r3, #0]
 80022fc:	68db      	ldr	r3, [r3, #12]
 80022fe:	623b      	str	r3, [r7, #32]
 8002300:	687b      	ldr	r3, [r7, #4]
 8002302:	681b      	ldr	r3, [r3, #0]
 8002304:	695b      	ldr	r3, [r3, #20]
 8002306:	61fb      	str	r3, [r7, #28]
 8002308:	2300      	movs	r3, #0
 800230a:	61bb      	str	r3, [r7, #24]
 800230c:	2300      	movs	r3, #0
 800230e:	617b      	str	r3, [r7, #20]
 8002310:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002312:	f003 030f 	and.w	r3, r3, #15
 8002316:	61bb      	str	r3, [r7, #24]
 8002318:	69bb      	ldr	r3, [r7, #24]
 800231a:	2b00      	cmp	r3, #0
 800231c:	d10d      	bne.n	800233a <HAL_UART_IRQHandler+0x52>
 800231e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002320:	f003 0320 	and.w	r3, r3, #32
 8002324:	2b00      	cmp	r3, #0
 8002326:	d008      	beq.n	800233a <HAL_UART_IRQHandler+0x52>
 8002328:	6a3b      	ldr	r3, [r7, #32]
 800232a:	f003 0320 	and.w	r3, r3, #32
 800232e:	2b00      	cmp	r3, #0
 8002330:	d003      	beq.n	800233a <HAL_UART_IRQHandler+0x52>
 8002332:	6878      	ldr	r0, [r7, #4]
 8002334:	f000 fac0 	bl	80028b8 <UART_Receive_IT>
 8002338:	e17b      	b.n	8002632 <HAL_UART_IRQHandler+0x34a>
 800233a:	69bb      	ldr	r3, [r7, #24]
 800233c:	2b00      	cmp	r3, #0
 800233e:	f000 80b1 	beq.w	80024a4 <HAL_UART_IRQHandler+0x1bc>
 8002342:	69fb      	ldr	r3, [r7, #28]
 8002344:	f003 0301 	and.w	r3, r3, #1
 8002348:	2b00      	cmp	r3, #0
 800234a:	d105      	bne.n	8002358 <HAL_UART_IRQHandler+0x70>
 800234c:	6a3b      	ldr	r3, [r7, #32]
 800234e:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8002352:	2b00      	cmp	r3, #0
 8002354:	f000 80a6 	beq.w	80024a4 <HAL_UART_IRQHandler+0x1bc>
 8002358:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800235a:	f003 0301 	and.w	r3, r3, #1
 800235e:	2b00      	cmp	r3, #0
 8002360:	d00a      	beq.n	8002378 <HAL_UART_IRQHandler+0x90>
 8002362:	6a3b      	ldr	r3, [r7, #32]
 8002364:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002368:	2b00      	cmp	r3, #0
 800236a:	d005      	beq.n	8002378 <HAL_UART_IRQHandler+0x90>
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002370:	f043 0201 	orr.w	r2, r3, #1
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	641a      	str	r2, [r3, #64]	; 0x40
 8002378:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800237a:	f003 0304 	and.w	r3, r3, #4
 800237e:	2b00      	cmp	r3, #0
 8002380:	d00a      	beq.n	8002398 <HAL_UART_IRQHandler+0xb0>
 8002382:	69fb      	ldr	r3, [r7, #28]
 8002384:	f003 0301 	and.w	r3, r3, #1
 8002388:	2b00      	cmp	r3, #0
 800238a:	d005      	beq.n	8002398 <HAL_UART_IRQHandler+0xb0>
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002390:	f043 0202 	orr.w	r2, r3, #2
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	641a      	str	r2, [r3, #64]	; 0x40
 8002398:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800239a:	f003 0302 	and.w	r3, r3, #2
 800239e:	2b00      	cmp	r3, #0
 80023a0:	d00a      	beq.n	80023b8 <HAL_UART_IRQHandler+0xd0>
 80023a2:	69fb      	ldr	r3, [r7, #28]
 80023a4:	f003 0301 	and.w	r3, r3, #1
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d005      	beq.n	80023b8 <HAL_UART_IRQHandler+0xd0>
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023b0:	f043 0204 	orr.w	r2, r3, #4
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	641a      	str	r2, [r3, #64]	; 0x40
 80023b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80023ba:	f003 0308 	and.w	r3, r3, #8
 80023be:	2b00      	cmp	r3, #0
 80023c0:	d00f      	beq.n	80023e2 <HAL_UART_IRQHandler+0xfa>
 80023c2:	6a3b      	ldr	r3, [r7, #32]
 80023c4:	f003 0320 	and.w	r3, r3, #32
 80023c8:	2b00      	cmp	r3, #0
 80023ca:	d104      	bne.n	80023d6 <HAL_UART_IRQHandler+0xee>
 80023cc:	69fb      	ldr	r3, [r7, #28]
 80023ce:	f003 0301 	and.w	r3, r3, #1
 80023d2:	2b00      	cmp	r3, #0
 80023d4:	d005      	beq.n	80023e2 <HAL_UART_IRQHandler+0xfa>
 80023d6:	687b      	ldr	r3, [r7, #4]
 80023d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023da:	f043 0208 	orr.w	r2, r3, #8
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	641a      	str	r2, [r3, #64]	; 0x40
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023e6:	2b00      	cmp	r3, #0
 80023e8:	f000 811e 	beq.w	8002628 <HAL_UART_IRQHandler+0x340>
 80023ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80023ee:	f003 0320 	and.w	r3, r3, #32
 80023f2:	2b00      	cmp	r3, #0
 80023f4:	d007      	beq.n	8002406 <HAL_UART_IRQHandler+0x11e>
 80023f6:	6a3b      	ldr	r3, [r7, #32]
 80023f8:	f003 0320 	and.w	r3, r3, #32
 80023fc:	2b00      	cmp	r3, #0
 80023fe:	d002      	beq.n	8002406 <HAL_UART_IRQHandler+0x11e>
 8002400:	6878      	ldr	r0, [r7, #4]
 8002402:	f000 fa59 	bl	80028b8 <UART_Receive_IT>
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	681b      	ldr	r3, [r3, #0]
 800240a:	695b      	ldr	r3, [r3, #20]
 800240c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002410:	2b00      	cmp	r3, #0
 8002412:	bf14      	ite	ne
 8002414:	2301      	movne	r3, #1
 8002416:	2300      	moveq	r3, #0
 8002418:	b2db      	uxtb	r3, r3
 800241a:	617b      	str	r3, [r7, #20]
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002420:	f003 0308 	and.w	r3, r3, #8
 8002424:	2b00      	cmp	r3, #0
 8002426:	d102      	bne.n	800242e <HAL_UART_IRQHandler+0x146>
 8002428:	697b      	ldr	r3, [r7, #20]
 800242a:	2b00      	cmp	r3, #0
 800242c:	d031      	beq.n	8002492 <HAL_UART_IRQHandler+0x1aa>
 800242e:	6878      	ldr	r0, [r7, #4]
 8002430:	f000 f99b 	bl	800276a <UART_EndRxTransfer>
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	681b      	ldr	r3, [r3, #0]
 8002438:	695b      	ldr	r3, [r3, #20]
 800243a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800243e:	2b00      	cmp	r3, #0
 8002440:	d023      	beq.n	800248a <HAL_UART_IRQHandler+0x1a2>
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	681b      	ldr	r3, [r3, #0]
 8002446:	695a      	ldr	r2, [r3, #20]
 8002448:	687b      	ldr	r3, [r7, #4]
 800244a:	681b      	ldr	r3, [r3, #0]
 800244c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002450:	615a      	str	r2, [r3, #20]
 8002452:	687b      	ldr	r3, [r7, #4]
 8002454:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002456:	2b00      	cmp	r3, #0
 8002458:	d013      	beq.n	8002482 <HAL_UART_IRQHandler+0x19a>
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800245e:	4a76      	ldr	r2, [pc, #472]	; (8002638 <HAL_UART_IRQHandler+0x350>)
 8002460:	635a      	str	r2, [r3, #52]	; 0x34
 8002462:	687b      	ldr	r3, [r7, #4]
 8002464:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002466:	4618      	mov	r0, r3
 8002468:	f7ff f81a 	bl	80014a0 <HAL_DMA_Abort_IT>
 800246c:	4603      	mov	r3, r0
 800246e:	2b00      	cmp	r3, #0
 8002470:	d016      	beq.n	80024a0 <HAL_UART_IRQHandler+0x1b8>
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002476:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002478:	687a      	ldr	r2, [r7, #4]
 800247a:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800247c:	4610      	mov	r0, r2
 800247e:	4798      	blx	r3
 8002480:	e00e      	b.n	80024a0 <HAL_UART_IRQHandler+0x1b8>
 8002482:	6878      	ldr	r0, [r7, #4]
 8002484:	f000 f8da 	bl	800263c <HAL_UART_ErrorCallback>
 8002488:	e00a      	b.n	80024a0 <HAL_UART_IRQHandler+0x1b8>
 800248a:	6878      	ldr	r0, [r7, #4]
 800248c:	f000 f8d6 	bl	800263c <HAL_UART_ErrorCallback>
 8002490:	e006      	b.n	80024a0 <HAL_UART_IRQHandler+0x1b8>
 8002492:	6878      	ldr	r0, [r7, #4]
 8002494:	f000 f8d2 	bl	800263c <HAL_UART_ErrorCallback>
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	2200      	movs	r2, #0
 800249c:	641a      	str	r2, [r3, #64]	; 0x40
 800249e:	e0c3      	b.n	8002628 <HAL_UART_IRQHandler+0x340>
 80024a0:	bf00      	nop
 80024a2:	e0c1      	b.n	8002628 <HAL_UART_IRQHandler+0x340>
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024a8:	2b01      	cmp	r3, #1
 80024aa:	f040 80a1 	bne.w	80025f0 <HAL_UART_IRQHandler+0x308>
 80024ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80024b0:	f003 0310 	and.w	r3, r3, #16
 80024b4:	2b00      	cmp	r3, #0
 80024b6:	f000 809b 	beq.w	80025f0 <HAL_UART_IRQHandler+0x308>
 80024ba:	6a3b      	ldr	r3, [r7, #32]
 80024bc:	f003 0310 	and.w	r3, r3, #16
 80024c0:	2b00      	cmp	r3, #0
 80024c2:	f000 8095 	beq.w	80025f0 <HAL_UART_IRQHandler+0x308>
 80024c6:	2300      	movs	r3, #0
 80024c8:	60fb      	str	r3, [r7, #12]
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	681b      	ldr	r3, [r3, #0]
 80024d0:	60fb      	str	r3, [r7, #12]
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	681b      	ldr	r3, [r3, #0]
 80024d6:	685b      	ldr	r3, [r3, #4]
 80024d8:	60fb      	str	r3, [r7, #12]
 80024da:	68fb      	ldr	r3, [r7, #12]
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	695b      	ldr	r3, [r3, #20]
 80024e2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80024e6:	2b00      	cmp	r3, #0
 80024e8:	d04e      	beq.n	8002588 <HAL_UART_IRQHandler+0x2a0>
 80024ea:	687b      	ldr	r3, [r7, #4]
 80024ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80024ee:	681b      	ldr	r3, [r3, #0]
 80024f0:	685b      	ldr	r3, [r3, #4]
 80024f2:	823b      	strh	r3, [r7, #16]
 80024f4:	8a3b      	ldrh	r3, [r7, #16]
 80024f6:	2b00      	cmp	r3, #0
 80024f8:	f000 8098 	beq.w	800262c <HAL_UART_IRQHandler+0x344>
 80024fc:	687b      	ldr	r3, [r7, #4]
 80024fe:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8002500:	8a3a      	ldrh	r2, [r7, #16]
 8002502:	429a      	cmp	r2, r3
 8002504:	f080 8092 	bcs.w	800262c <HAL_UART_IRQHandler+0x344>
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	8a3a      	ldrh	r2, [r7, #16]
 800250c:	85da      	strh	r2, [r3, #46]	; 0x2e
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002512:	699b      	ldr	r3, [r3, #24]
 8002514:	2b20      	cmp	r3, #32
 8002516:	d02b      	beq.n	8002570 <HAL_UART_IRQHandler+0x288>
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	681b      	ldr	r3, [r3, #0]
 800251c:	68da      	ldr	r2, [r3, #12]
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002526:	60da      	str	r2, [r3, #12]
 8002528:	687b      	ldr	r3, [r7, #4]
 800252a:	681b      	ldr	r3, [r3, #0]
 800252c:	695a      	ldr	r2, [r3, #20]
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	681b      	ldr	r3, [r3, #0]
 8002532:	f022 0201 	bic.w	r2, r2, #1
 8002536:	615a      	str	r2, [r3, #20]
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	695a      	ldr	r2, [r3, #20]
 800253e:	687b      	ldr	r3, [r7, #4]
 8002540:	681b      	ldr	r3, [r3, #0]
 8002542:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002546:	615a      	str	r2, [r3, #20]
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	2220      	movs	r2, #32
 800254c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	2200      	movs	r2, #0
 8002554:	631a      	str	r2, [r3, #48]	; 0x30
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	681b      	ldr	r3, [r3, #0]
 800255a:	68da      	ldr	r2, [r3, #12]
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	f022 0210 	bic.w	r2, r2, #16
 8002564:	60da      	str	r2, [r3, #12]
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800256a:	4618      	mov	r0, r3
 800256c:	f7fe ff5d 	bl	800142a <HAL_DMA_Abort>
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002578:	b29b      	uxth	r3, r3
 800257a:	1ad3      	subs	r3, r2, r3
 800257c:	b29b      	uxth	r3, r3
 800257e:	4619      	mov	r1, r3
 8002580:	6878      	ldr	r0, [r7, #4]
 8002582:	f000 f864 	bl	800264e <HAL_UARTEx_RxEventCallback>
 8002586:	e051      	b.n	800262c <HAL_UART_IRQHandler+0x344>
 8002588:	687b      	ldr	r3, [r7, #4]
 800258a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002590:	b29b      	uxth	r3, r3
 8002592:	1ad3      	subs	r3, r2, r3
 8002594:	827b      	strh	r3, [r7, #18]
 8002596:	687b      	ldr	r3, [r7, #4]
 8002598:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800259a:	b29b      	uxth	r3, r3
 800259c:	2b00      	cmp	r3, #0
 800259e:	d047      	beq.n	8002630 <HAL_UART_IRQHandler+0x348>
 80025a0:	8a7b      	ldrh	r3, [r7, #18]
 80025a2:	2b00      	cmp	r3, #0
 80025a4:	d044      	beq.n	8002630 <HAL_UART_IRQHandler+0x348>
 80025a6:	687b      	ldr	r3, [r7, #4]
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	68da      	ldr	r2, [r3, #12]
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80025b4:	60da      	str	r2, [r3, #12]
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	681b      	ldr	r3, [r3, #0]
 80025ba:	695a      	ldr	r2, [r3, #20]
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	f022 0201 	bic.w	r2, r2, #1
 80025c4:	615a      	str	r2, [r3, #20]
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	2220      	movs	r2, #32
 80025ca:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	2200      	movs	r2, #0
 80025d2:	631a      	str	r2, [r3, #48]	; 0x30
 80025d4:	687b      	ldr	r3, [r7, #4]
 80025d6:	681b      	ldr	r3, [r3, #0]
 80025d8:	68da      	ldr	r2, [r3, #12]
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	681b      	ldr	r3, [r3, #0]
 80025de:	f022 0210 	bic.w	r2, r2, #16
 80025e2:	60da      	str	r2, [r3, #12]
 80025e4:	8a7b      	ldrh	r3, [r7, #18]
 80025e6:	4619      	mov	r1, r3
 80025e8:	6878      	ldr	r0, [r7, #4]
 80025ea:	f000 f830 	bl	800264e <HAL_UARTEx_RxEventCallback>
 80025ee:	e01f      	b.n	8002630 <HAL_UART_IRQHandler+0x348>
 80025f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80025f2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80025f6:	2b00      	cmp	r3, #0
 80025f8:	d008      	beq.n	800260c <HAL_UART_IRQHandler+0x324>
 80025fa:	6a3b      	ldr	r3, [r7, #32]
 80025fc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002600:	2b00      	cmp	r3, #0
 8002602:	d003      	beq.n	800260c <HAL_UART_IRQHandler+0x324>
 8002604:	6878      	ldr	r0, [r7, #4]
 8002606:	f000 f8f0 	bl	80027ea <UART_Transmit_IT>
 800260a:	e012      	b.n	8002632 <HAL_UART_IRQHandler+0x34a>
 800260c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800260e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002612:	2b00      	cmp	r3, #0
 8002614:	d00d      	beq.n	8002632 <HAL_UART_IRQHandler+0x34a>
 8002616:	6a3b      	ldr	r3, [r7, #32]
 8002618:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800261c:	2b00      	cmp	r3, #0
 800261e:	d008      	beq.n	8002632 <HAL_UART_IRQHandler+0x34a>
 8002620:	6878      	ldr	r0, [r7, #4]
 8002622:	f000 f931 	bl	8002888 <UART_EndTransmit_IT>
 8002626:	e004      	b.n	8002632 <HAL_UART_IRQHandler+0x34a>
 8002628:	bf00      	nop
 800262a:	e002      	b.n	8002632 <HAL_UART_IRQHandler+0x34a>
 800262c:	bf00      	nop
 800262e:	e000      	b.n	8002632 <HAL_UART_IRQHandler+0x34a>
 8002630:	bf00      	nop
 8002632:	3728      	adds	r7, #40	; 0x28
 8002634:	46bd      	mov	sp, r7
 8002636:	bd80      	pop	{r7, pc}
 8002638:	080027c3 	.word	0x080027c3

0800263c <HAL_UART_ErrorCallback>:
 800263c:	b480      	push	{r7}
 800263e:	b083      	sub	sp, #12
 8002640:	af00      	add	r7, sp, #0
 8002642:	6078      	str	r0, [r7, #4]
 8002644:	bf00      	nop
 8002646:	370c      	adds	r7, #12
 8002648:	46bd      	mov	sp, r7
 800264a:	bc80      	pop	{r7}
 800264c:	4770      	bx	lr

0800264e <HAL_UARTEx_RxEventCallback>:
 800264e:	b480      	push	{r7}
 8002650:	b083      	sub	sp, #12
 8002652:	af00      	add	r7, sp, #0
 8002654:	6078      	str	r0, [r7, #4]
 8002656:	460b      	mov	r3, r1
 8002658:	807b      	strh	r3, [r7, #2]
 800265a:	bf00      	nop
 800265c:	370c      	adds	r7, #12
 800265e:	46bd      	mov	sp, r7
 8002660:	bc80      	pop	{r7}
 8002662:	4770      	bx	lr

08002664 <UART_WaitOnFlagUntilTimeout>:
 8002664:	b580      	push	{r7, lr}
 8002666:	b084      	sub	sp, #16
 8002668:	af00      	add	r7, sp, #0
 800266a:	60f8      	str	r0, [r7, #12]
 800266c:	60b9      	str	r1, [r7, #8]
 800266e:	603b      	str	r3, [r7, #0]
 8002670:	4613      	mov	r3, r2
 8002672:	71fb      	strb	r3, [r7, #7]
 8002674:	e02c      	b.n	80026d0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002676:	69bb      	ldr	r3, [r7, #24]
 8002678:	f1b3 3fff 	cmp.w	r3, #4294967295
 800267c:	d028      	beq.n	80026d0 <UART_WaitOnFlagUntilTimeout+0x6c>
 800267e:	69bb      	ldr	r3, [r7, #24]
 8002680:	2b00      	cmp	r3, #0
 8002682:	d007      	beq.n	8002694 <UART_WaitOnFlagUntilTimeout+0x30>
 8002684:	f7fe fdba 	bl	80011fc <HAL_GetTick>
 8002688:	4602      	mov	r2, r0
 800268a:	683b      	ldr	r3, [r7, #0]
 800268c:	1ad3      	subs	r3, r2, r3
 800268e:	69ba      	ldr	r2, [r7, #24]
 8002690:	429a      	cmp	r2, r3
 8002692:	d21d      	bcs.n	80026d0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002694:	68fb      	ldr	r3, [r7, #12]
 8002696:	681b      	ldr	r3, [r3, #0]
 8002698:	68da      	ldr	r2, [r3, #12]
 800269a:	68fb      	ldr	r3, [r7, #12]
 800269c:	681b      	ldr	r3, [r3, #0]
 800269e:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80026a2:	60da      	str	r2, [r3, #12]
 80026a4:	68fb      	ldr	r3, [r7, #12]
 80026a6:	681b      	ldr	r3, [r3, #0]
 80026a8:	695a      	ldr	r2, [r3, #20]
 80026aa:	68fb      	ldr	r3, [r7, #12]
 80026ac:	681b      	ldr	r3, [r3, #0]
 80026ae:	f022 0201 	bic.w	r2, r2, #1
 80026b2:	615a      	str	r2, [r3, #20]
 80026b4:	68fb      	ldr	r3, [r7, #12]
 80026b6:	2220      	movs	r2, #32
 80026b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80026bc:	68fb      	ldr	r3, [r7, #12]
 80026be:	2220      	movs	r2, #32
 80026c0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80026c4:	68fb      	ldr	r3, [r7, #12]
 80026c6:	2200      	movs	r2, #0
 80026c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80026cc:	2303      	movs	r3, #3
 80026ce:	e00f      	b.n	80026f0 <UART_WaitOnFlagUntilTimeout+0x8c>
 80026d0:	68fb      	ldr	r3, [r7, #12]
 80026d2:	681b      	ldr	r3, [r3, #0]
 80026d4:	681a      	ldr	r2, [r3, #0]
 80026d6:	68bb      	ldr	r3, [r7, #8]
 80026d8:	4013      	ands	r3, r2
 80026da:	68ba      	ldr	r2, [r7, #8]
 80026dc:	429a      	cmp	r2, r3
 80026de:	bf0c      	ite	eq
 80026e0:	2301      	moveq	r3, #1
 80026e2:	2300      	movne	r3, #0
 80026e4:	b2db      	uxtb	r3, r3
 80026e6:	461a      	mov	r2, r3
 80026e8:	79fb      	ldrb	r3, [r7, #7]
 80026ea:	429a      	cmp	r2, r3
 80026ec:	d0c3      	beq.n	8002676 <UART_WaitOnFlagUntilTimeout+0x12>
 80026ee:	2300      	movs	r3, #0
 80026f0:	4618      	mov	r0, r3
 80026f2:	3710      	adds	r7, #16
 80026f4:	46bd      	mov	sp, r7
 80026f6:	bd80      	pop	{r7, pc}

080026f8 <UART_Start_Receive_IT>:
 80026f8:	b480      	push	{r7}
 80026fa:	b085      	sub	sp, #20
 80026fc:	af00      	add	r7, sp, #0
 80026fe:	60f8      	str	r0, [r7, #12]
 8002700:	60b9      	str	r1, [r7, #8]
 8002702:	4613      	mov	r3, r2
 8002704:	80fb      	strh	r3, [r7, #6]
 8002706:	68fb      	ldr	r3, [r7, #12]
 8002708:	68ba      	ldr	r2, [r7, #8]
 800270a:	629a      	str	r2, [r3, #40]	; 0x28
 800270c:	68fb      	ldr	r3, [r7, #12]
 800270e:	88fa      	ldrh	r2, [r7, #6]
 8002710:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002712:	68fb      	ldr	r3, [r7, #12]
 8002714:	88fa      	ldrh	r2, [r7, #6]
 8002716:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002718:	68fb      	ldr	r3, [r7, #12]
 800271a:	2200      	movs	r2, #0
 800271c:	641a      	str	r2, [r3, #64]	; 0x40
 800271e:	68fb      	ldr	r3, [r7, #12]
 8002720:	2222      	movs	r2, #34	; 0x22
 8002722:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002726:	68fb      	ldr	r3, [r7, #12]
 8002728:	2200      	movs	r2, #0
 800272a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800272e:	68fb      	ldr	r3, [r7, #12]
 8002730:	681b      	ldr	r3, [r3, #0]
 8002732:	68da      	ldr	r2, [r3, #12]
 8002734:	68fb      	ldr	r3, [r7, #12]
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800273c:	60da      	str	r2, [r3, #12]
 800273e:	68fb      	ldr	r3, [r7, #12]
 8002740:	681b      	ldr	r3, [r3, #0]
 8002742:	695a      	ldr	r2, [r3, #20]
 8002744:	68fb      	ldr	r3, [r7, #12]
 8002746:	681b      	ldr	r3, [r3, #0]
 8002748:	f042 0201 	orr.w	r2, r2, #1
 800274c:	615a      	str	r2, [r3, #20]
 800274e:	68fb      	ldr	r3, [r7, #12]
 8002750:	681b      	ldr	r3, [r3, #0]
 8002752:	68da      	ldr	r2, [r3, #12]
 8002754:	68fb      	ldr	r3, [r7, #12]
 8002756:	681b      	ldr	r3, [r3, #0]
 8002758:	f042 0220 	orr.w	r2, r2, #32
 800275c:	60da      	str	r2, [r3, #12]
 800275e:	2300      	movs	r3, #0
 8002760:	4618      	mov	r0, r3
 8002762:	3714      	adds	r7, #20
 8002764:	46bd      	mov	sp, r7
 8002766:	bc80      	pop	{r7}
 8002768:	4770      	bx	lr

0800276a <UART_EndRxTransfer>:
 800276a:	b480      	push	{r7}
 800276c:	b083      	sub	sp, #12
 800276e:	af00      	add	r7, sp, #0
 8002770:	6078      	str	r0, [r7, #4]
 8002772:	687b      	ldr	r3, [r7, #4]
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	68da      	ldr	r2, [r3, #12]
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8002780:	60da      	str	r2, [r3, #12]
 8002782:	687b      	ldr	r3, [r7, #4]
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	695a      	ldr	r2, [r3, #20]
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	f022 0201 	bic.w	r2, r2, #1
 8002790:	615a      	str	r2, [r3, #20]
 8002792:	687b      	ldr	r3, [r7, #4]
 8002794:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002796:	2b01      	cmp	r3, #1
 8002798:	d107      	bne.n	80027aa <UART_EndRxTransfer+0x40>
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	681b      	ldr	r3, [r3, #0]
 800279e:	68da      	ldr	r2, [r3, #12]
 80027a0:	687b      	ldr	r3, [r7, #4]
 80027a2:	681b      	ldr	r3, [r3, #0]
 80027a4:	f022 0210 	bic.w	r2, r2, #16
 80027a8:	60da      	str	r2, [r3, #12]
 80027aa:	687b      	ldr	r3, [r7, #4]
 80027ac:	2220      	movs	r2, #32
 80027ae:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	2200      	movs	r2, #0
 80027b6:	631a      	str	r2, [r3, #48]	; 0x30
 80027b8:	bf00      	nop
 80027ba:	370c      	adds	r7, #12
 80027bc:	46bd      	mov	sp, r7
 80027be:	bc80      	pop	{r7}
 80027c0:	4770      	bx	lr

080027c2 <UART_DMAAbortOnError>:
 80027c2:	b580      	push	{r7, lr}
 80027c4:	b084      	sub	sp, #16
 80027c6:	af00      	add	r7, sp, #0
 80027c8:	6078      	str	r0, [r7, #4]
 80027ca:	687b      	ldr	r3, [r7, #4]
 80027cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027ce:	60fb      	str	r3, [r7, #12]
 80027d0:	68fb      	ldr	r3, [r7, #12]
 80027d2:	2200      	movs	r2, #0
 80027d4:	85da      	strh	r2, [r3, #46]	; 0x2e
 80027d6:	68fb      	ldr	r3, [r7, #12]
 80027d8:	2200      	movs	r2, #0
 80027da:	84da      	strh	r2, [r3, #38]	; 0x26
 80027dc:	68f8      	ldr	r0, [r7, #12]
 80027de:	f7ff ff2d 	bl	800263c <HAL_UART_ErrorCallback>
 80027e2:	bf00      	nop
 80027e4:	3710      	adds	r7, #16
 80027e6:	46bd      	mov	sp, r7
 80027e8:	bd80      	pop	{r7, pc}

080027ea <UART_Transmit_IT>:
 80027ea:	b480      	push	{r7}
 80027ec:	b085      	sub	sp, #20
 80027ee:	af00      	add	r7, sp, #0
 80027f0:	6078      	str	r0, [r7, #4]
 80027f2:	687b      	ldr	r3, [r7, #4]
 80027f4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80027f8:	b2db      	uxtb	r3, r3
 80027fa:	2b21      	cmp	r3, #33	; 0x21
 80027fc:	d13e      	bne.n	800287c <UART_Transmit_IT+0x92>
 80027fe:	687b      	ldr	r3, [r7, #4]
 8002800:	689b      	ldr	r3, [r3, #8]
 8002802:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002806:	d114      	bne.n	8002832 <UART_Transmit_IT+0x48>
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	691b      	ldr	r3, [r3, #16]
 800280c:	2b00      	cmp	r3, #0
 800280e:	d110      	bne.n	8002832 <UART_Transmit_IT+0x48>
 8002810:	687b      	ldr	r3, [r7, #4]
 8002812:	6a1b      	ldr	r3, [r3, #32]
 8002814:	60fb      	str	r3, [r7, #12]
 8002816:	68fb      	ldr	r3, [r7, #12]
 8002818:	881b      	ldrh	r3, [r3, #0]
 800281a:	461a      	mov	r2, r3
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	681b      	ldr	r3, [r3, #0]
 8002820:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002824:	605a      	str	r2, [r3, #4]
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	6a1b      	ldr	r3, [r3, #32]
 800282a:	1c9a      	adds	r2, r3, #2
 800282c:	687b      	ldr	r3, [r7, #4]
 800282e:	621a      	str	r2, [r3, #32]
 8002830:	e008      	b.n	8002844 <UART_Transmit_IT+0x5a>
 8002832:	687b      	ldr	r3, [r7, #4]
 8002834:	6a1b      	ldr	r3, [r3, #32]
 8002836:	1c59      	adds	r1, r3, #1
 8002838:	687a      	ldr	r2, [r7, #4]
 800283a:	6211      	str	r1, [r2, #32]
 800283c:	781a      	ldrb	r2, [r3, #0]
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	681b      	ldr	r3, [r3, #0]
 8002842:	605a      	str	r2, [r3, #4]
 8002844:	687b      	ldr	r3, [r7, #4]
 8002846:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002848:	b29b      	uxth	r3, r3
 800284a:	3b01      	subs	r3, #1
 800284c:	b29b      	uxth	r3, r3
 800284e:	687a      	ldr	r2, [r7, #4]
 8002850:	4619      	mov	r1, r3
 8002852:	84d1      	strh	r1, [r2, #38]	; 0x26
 8002854:	2b00      	cmp	r3, #0
 8002856:	d10f      	bne.n	8002878 <UART_Transmit_IT+0x8e>
 8002858:	687b      	ldr	r3, [r7, #4]
 800285a:	681b      	ldr	r3, [r3, #0]
 800285c:	68da      	ldr	r2, [r3, #12]
 800285e:	687b      	ldr	r3, [r7, #4]
 8002860:	681b      	ldr	r3, [r3, #0]
 8002862:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002866:	60da      	str	r2, [r3, #12]
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	68da      	ldr	r2, [r3, #12]
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	681b      	ldr	r3, [r3, #0]
 8002872:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002876:	60da      	str	r2, [r3, #12]
 8002878:	2300      	movs	r3, #0
 800287a:	e000      	b.n	800287e <UART_Transmit_IT+0x94>
 800287c:	2302      	movs	r3, #2
 800287e:	4618      	mov	r0, r3
 8002880:	3714      	adds	r7, #20
 8002882:	46bd      	mov	sp, r7
 8002884:	bc80      	pop	{r7}
 8002886:	4770      	bx	lr

08002888 <UART_EndTransmit_IT>:
 8002888:	b580      	push	{r7, lr}
 800288a:	b082      	sub	sp, #8
 800288c:	af00      	add	r7, sp, #0
 800288e:	6078      	str	r0, [r7, #4]
 8002890:	687b      	ldr	r3, [r7, #4]
 8002892:	681b      	ldr	r3, [r3, #0]
 8002894:	68da      	ldr	r2, [r3, #12]
 8002896:	687b      	ldr	r3, [r7, #4]
 8002898:	681b      	ldr	r3, [r3, #0]
 800289a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800289e:	60da      	str	r2, [r3, #12]
 80028a0:	687b      	ldr	r3, [r7, #4]
 80028a2:	2220      	movs	r2, #32
 80028a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80028a8:	6878      	ldr	r0, [r7, #4]
 80028aa:	f7fe f9af 	bl	8000c0c <HAL_UART_TxCpltCallback>
 80028ae:	2300      	movs	r3, #0
 80028b0:	4618      	mov	r0, r3
 80028b2:	3708      	adds	r7, #8
 80028b4:	46bd      	mov	sp, r7
 80028b6:	bd80      	pop	{r7, pc}

080028b8 <UART_Receive_IT>:
 80028b8:	b580      	push	{r7, lr}
 80028ba:	b086      	sub	sp, #24
 80028bc:	af00      	add	r7, sp, #0
 80028be:	6078      	str	r0, [r7, #4]
 80028c0:	687b      	ldr	r3, [r7, #4]
 80028c2:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80028c6:	b2db      	uxtb	r3, r3
 80028c8:	2b22      	cmp	r3, #34	; 0x22
 80028ca:	f040 8099 	bne.w	8002a00 <UART_Receive_IT+0x148>
 80028ce:	687b      	ldr	r3, [r7, #4]
 80028d0:	689b      	ldr	r3, [r3, #8]
 80028d2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80028d6:	d117      	bne.n	8002908 <UART_Receive_IT+0x50>
 80028d8:	687b      	ldr	r3, [r7, #4]
 80028da:	691b      	ldr	r3, [r3, #16]
 80028dc:	2b00      	cmp	r3, #0
 80028de:	d113      	bne.n	8002908 <UART_Receive_IT+0x50>
 80028e0:	2300      	movs	r3, #0
 80028e2:	617b      	str	r3, [r7, #20]
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80028e8:	613b      	str	r3, [r7, #16]
 80028ea:	687b      	ldr	r3, [r7, #4]
 80028ec:	681b      	ldr	r3, [r3, #0]
 80028ee:	685b      	ldr	r3, [r3, #4]
 80028f0:	b29b      	uxth	r3, r3
 80028f2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80028f6:	b29a      	uxth	r2, r3
 80028f8:	693b      	ldr	r3, [r7, #16]
 80028fa:	801a      	strh	r2, [r3, #0]
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002900:	1c9a      	adds	r2, r3, #2
 8002902:	687b      	ldr	r3, [r7, #4]
 8002904:	629a      	str	r2, [r3, #40]	; 0x28
 8002906:	e026      	b.n	8002956 <UART_Receive_IT+0x9e>
 8002908:	687b      	ldr	r3, [r7, #4]
 800290a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800290c:	617b      	str	r3, [r7, #20]
 800290e:	2300      	movs	r3, #0
 8002910:	613b      	str	r3, [r7, #16]
 8002912:	687b      	ldr	r3, [r7, #4]
 8002914:	689b      	ldr	r3, [r3, #8]
 8002916:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800291a:	d007      	beq.n	800292c <UART_Receive_IT+0x74>
 800291c:	687b      	ldr	r3, [r7, #4]
 800291e:	689b      	ldr	r3, [r3, #8]
 8002920:	2b00      	cmp	r3, #0
 8002922:	d10a      	bne.n	800293a <UART_Receive_IT+0x82>
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	691b      	ldr	r3, [r3, #16]
 8002928:	2b00      	cmp	r3, #0
 800292a:	d106      	bne.n	800293a <UART_Receive_IT+0x82>
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	681b      	ldr	r3, [r3, #0]
 8002930:	685b      	ldr	r3, [r3, #4]
 8002932:	b2da      	uxtb	r2, r3
 8002934:	697b      	ldr	r3, [r7, #20]
 8002936:	701a      	strb	r2, [r3, #0]
 8002938:	e008      	b.n	800294c <UART_Receive_IT+0x94>
 800293a:	687b      	ldr	r3, [r7, #4]
 800293c:	681b      	ldr	r3, [r3, #0]
 800293e:	685b      	ldr	r3, [r3, #4]
 8002940:	b2db      	uxtb	r3, r3
 8002942:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8002946:	b2da      	uxtb	r2, r3
 8002948:	697b      	ldr	r3, [r7, #20]
 800294a:	701a      	strb	r2, [r3, #0]
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002950:	1c5a      	adds	r2, r3, #1
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	629a      	str	r2, [r3, #40]	; 0x28
 8002956:	687b      	ldr	r3, [r7, #4]
 8002958:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800295a:	b29b      	uxth	r3, r3
 800295c:	3b01      	subs	r3, #1
 800295e:	b29b      	uxth	r3, r3
 8002960:	687a      	ldr	r2, [r7, #4]
 8002962:	4619      	mov	r1, r3
 8002964:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8002966:	2b00      	cmp	r3, #0
 8002968:	d148      	bne.n	80029fc <UART_Receive_IT+0x144>
 800296a:	687b      	ldr	r3, [r7, #4]
 800296c:	681b      	ldr	r3, [r3, #0]
 800296e:	68da      	ldr	r2, [r3, #12]
 8002970:	687b      	ldr	r3, [r7, #4]
 8002972:	681b      	ldr	r3, [r3, #0]
 8002974:	f022 0220 	bic.w	r2, r2, #32
 8002978:	60da      	str	r2, [r3, #12]
 800297a:	687b      	ldr	r3, [r7, #4]
 800297c:	681b      	ldr	r3, [r3, #0]
 800297e:	68da      	ldr	r2, [r3, #12]
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002988:	60da      	str	r2, [r3, #12]
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	681b      	ldr	r3, [r3, #0]
 800298e:	695a      	ldr	r2, [r3, #20]
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	681b      	ldr	r3, [r3, #0]
 8002994:	f022 0201 	bic.w	r2, r2, #1
 8002998:	615a      	str	r2, [r3, #20]
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	2220      	movs	r2, #32
 800299e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029a6:	2b01      	cmp	r3, #1
 80029a8:	d123      	bne.n	80029f2 <UART_Receive_IT+0x13a>
 80029aa:	687b      	ldr	r3, [r7, #4]
 80029ac:	2200      	movs	r2, #0
 80029ae:	631a      	str	r2, [r3, #48]	; 0x30
 80029b0:	687b      	ldr	r3, [r7, #4]
 80029b2:	681b      	ldr	r3, [r3, #0]
 80029b4:	68da      	ldr	r2, [r3, #12]
 80029b6:	687b      	ldr	r3, [r7, #4]
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	f022 0210 	bic.w	r2, r2, #16
 80029be:	60da      	str	r2, [r3, #12]
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	681b      	ldr	r3, [r3, #0]
 80029c4:	681b      	ldr	r3, [r3, #0]
 80029c6:	f003 0310 	and.w	r3, r3, #16
 80029ca:	2b10      	cmp	r3, #16
 80029cc:	d10a      	bne.n	80029e4 <UART_Receive_IT+0x12c>
 80029ce:	2300      	movs	r3, #0
 80029d0:	60fb      	str	r3, [r7, #12]
 80029d2:	687b      	ldr	r3, [r7, #4]
 80029d4:	681b      	ldr	r3, [r3, #0]
 80029d6:	681b      	ldr	r3, [r3, #0]
 80029d8:	60fb      	str	r3, [r7, #12]
 80029da:	687b      	ldr	r3, [r7, #4]
 80029dc:	681b      	ldr	r3, [r3, #0]
 80029de:	685b      	ldr	r3, [r3, #4]
 80029e0:	60fb      	str	r3, [r7, #12]
 80029e2:	68fb      	ldr	r3, [r7, #12]
 80029e4:	687b      	ldr	r3, [r7, #4]
 80029e6:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80029e8:	4619      	mov	r1, r3
 80029ea:	6878      	ldr	r0, [r7, #4]
 80029ec:	f7ff fe2f 	bl	800264e <HAL_UARTEx_RxEventCallback>
 80029f0:	e002      	b.n	80029f8 <UART_Receive_IT+0x140>
 80029f2:	6878      	ldr	r0, [r7, #4]
 80029f4:	f7fe f914 	bl	8000c20 <HAL_UART_RxCpltCallback>
 80029f8:	2300      	movs	r3, #0
 80029fa:	e002      	b.n	8002a02 <UART_Receive_IT+0x14a>
 80029fc:	2300      	movs	r3, #0
 80029fe:	e000      	b.n	8002a02 <UART_Receive_IT+0x14a>
 8002a00:	2302      	movs	r3, #2
 8002a02:	4618      	mov	r0, r3
 8002a04:	3718      	adds	r7, #24
 8002a06:	46bd      	mov	sp, r7
 8002a08:	bd80      	pop	{r7, pc}
	...

08002a0c <UART_SetConfig>:
 8002a0c:	b580      	push	{r7, lr}
 8002a0e:	b084      	sub	sp, #16
 8002a10:	af00      	add	r7, sp, #0
 8002a12:	6078      	str	r0, [r7, #4]
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	681b      	ldr	r3, [r3, #0]
 8002a18:	691b      	ldr	r3, [r3, #16]
 8002a1a:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8002a1e:	687b      	ldr	r3, [r7, #4]
 8002a20:	68da      	ldr	r2, [r3, #12]
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	681b      	ldr	r3, [r3, #0]
 8002a26:	430a      	orrs	r2, r1
 8002a28:	611a      	str	r2, [r3, #16]
 8002a2a:	687b      	ldr	r3, [r7, #4]
 8002a2c:	689a      	ldr	r2, [r3, #8]
 8002a2e:	687b      	ldr	r3, [r7, #4]
 8002a30:	691b      	ldr	r3, [r3, #16]
 8002a32:	431a      	orrs	r2, r3
 8002a34:	687b      	ldr	r3, [r7, #4]
 8002a36:	695b      	ldr	r3, [r3, #20]
 8002a38:	4313      	orrs	r3, r2
 8002a3a:	60bb      	str	r3, [r7, #8]
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	681b      	ldr	r3, [r3, #0]
 8002a40:	68db      	ldr	r3, [r3, #12]
 8002a42:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8002a46:	f023 030c 	bic.w	r3, r3, #12
 8002a4a:	687a      	ldr	r2, [r7, #4]
 8002a4c:	6812      	ldr	r2, [r2, #0]
 8002a4e:	68b9      	ldr	r1, [r7, #8]
 8002a50:	430b      	orrs	r3, r1
 8002a52:	60d3      	str	r3, [r2, #12]
 8002a54:	687b      	ldr	r3, [r7, #4]
 8002a56:	681b      	ldr	r3, [r3, #0]
 8002a58:	695b      	ldr	r3, [r3, #20]
 8002a5a:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	699a      	ldr	r2, [r3, #24]
 8002a62:	687b      	ldr	r3, [r7, #4]
 8002a64:	681b      	ldr	r3, [r3, #0]
 8002a66:	430a      	orrs	r2, r1
 8002a68:	615a      	str	r2, [r3, #20]
 8002a6a:	687b      	ldr	r3, [r7, #4]
 8002a6c:	681b      	ldr	r3, [r3, #0]
 8002a6e:	4a2c      	ldr	r2, [pc, #176]	; (8002b20 <UART_SetConfig+0x114>)
 8002a70:	4293      	cmp	r3, r2
 8002a72:	d103      	bne.n	8002a7c <UART_SetConfig+0x70>
 8002a74:	f7ff faf6 	bl	8002064 <HAL_RCC_GetPCLK2Freq>
 8002a78:	60f8      	str	r0, [r7, #12]
 8002a7a:	e002      	b.n	8002a82 <UART_SetConfig+0x76>
 8002a7c:	f7ff fade 	bl	800203c <HAL_RCC_GetPCLK1Freq>
 8002a80:	60f8      	str	r0, [r7, #12]
 8002a82:	68fa      	ldr	r2, [r7, #12]
 8002a84:	4613      	mov	r3, r2
 8002a86:	009b      	lsls	r3, r3, #2
 8002a88:	4413      	add	r3, r2
 8002a8a:	009a      	lsls	r2, r3, #2
 8002a8c:	441a      	add	r2, r3
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	685b      	ldr	r3, [r3, #4]
 8002a92:	009b      	lsls	r3, r3, #2
 8002a94:	fbb2 f3f3 	udiv	r3, r2, r3
 8002a98:	4a22      	ldr	r2, [pc, #136]	; (8002b24 <UART_SetConfig+0x118>)
 8002a9a:	fba2 2303 	umull	r2, r3, r2, r3
 8002a9e:	095b      	lsrs	r3, r3, #5
 8002aa0:	0119      	lsls	r1, r3, #4
 8002aa2:	68fa      	ldr	r2, [r7, #12]
 8002aa4:	4613      	mov	r3, r2
 8002aa6:	009b      	lsls	r3, r3, #2
 8002aa8:	4413      	add	r3, r2
 8002aaa:	009a      	lsls	r2, r3, #2
 8002aac:	441a      	add	r2, r3
 8002aae:	687b      	ldr	r3, [r7, #4]
 8002ab0:	685b      	ldr	r3, [r3, #4]
 8002ab2:	009b      	lsls	r3, r3, #2
 8002ab4:	fbb2 f2f3 	udiv	r2, r2, r3
 8002ab8:	4b1a      	ldr	r3, [pc, #104]	; (8002b24 <UART_SetConfig+0x118>)
 8002aba:	fba3 0302 	umull	r0, r3, r3, r2
 8002abe:	095b      	lsrs	r3, r3, #5
 8002ac0:	2064      	movs	r0, #100	; 0x64
 8002ac2:	fb00 f303 	mul.w	r3, r0, r3
 8002ac6:	1ad3      	subs	r3, r2, r3
 8002ac8:	011b      	lsls	r3, r3, #4
 8002aca:	3332      	adds	r3, #50	; 0x32
 8002acc:	4a15      	ldr	r2, [pc, #84]	; (8002b24 <UART_SetConfig+0x118>)
 8002ace:	fba2 2303 	umull	r2, r3, r2, r3
 8002ad2:	095b      	lsrs	r3, r3, #5
 8002ad4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8002ad8:	4419      	add	r1, r3
 8002ada:	68fa      	ldr	r2, [r7, #12]
 8002adc:	4613      	mov	r3, r2
 8002ade:	009b      	lsls	r3, r3, #2
 8002ae0:	4413      	add	r3, r2
 8002ae2:	009a      	lsls	r2, r3, #2
 8002ae4:	441a      	add	r2, r3
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	685b      	ldr	r3, [r3, #4]
 8002aea:	009b      	lsls	r3, r3, #2
 8002aec:	fbb2 f2f3 	udiv	r2, r2, r3
 8002af0:	4b0c      	ldr	r3, [pc, #48]	; (8002b24 <UART_SetConfig+0x118>)
 8002af2:	fba3 0302 	umull	r0, r3, r3, r2
 8002af6:	095b      	lsrs	r3, r3, #5
 8002af8:	2064      	movs	r0, #100	; 0x64
 8002afa:	fb00 f303 	mul.w	r3, r0, r3
 8002afe:	1ad3      	subs	r3, r2, r3
 8002b00:	011b      	lsls	r3, r3, #4
 8002b02:	3332      	adds	r3, #50	; 0x32
 8002b04:	4a07      	ldr	r2, [pc, #28]	; (8002b24 <UART_SetConfig+0x118>)
 8002b06:	fba2 2303 	umull	r2, r3, r2, r3
 8002b0a:	095b      	lsrs	r3, r3, #5
 8002b0c:	f003 020f 	and.w	r2, r3, #15
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	681b      	ldr	r3, [r3, #0]
 8002b14:	440a      	add	r2, r1
 8002b16:	609a      	str	r2, [r3, #8]
 8002b18:	bf00      	nop
 8002b1a:	3710      	adds	r7, #16
 8002b1c:	46bd      	mov	sp, r7
 8002b1e:	bd80      	pop	{r7, pc}
 8002b20:	40013800 	.word	0x40013800
 8002b24:	51eb851f 	.word	0x51eb851f

08002b28 <__libc_init_array>:
 8002b28:	b570      	push	{r4, r5, r6, lr}
 8002b2a:	2600      	movs	r6, #0
 8002b2c:	4d0c      	ldr	r5, [pc, #48]	; (8002b60 <__libc_init_array+0x38>)
 8002b2e:	4c0d      	ldr	r4, [pc, #52]	; (8002b64 <__libc_init_array+0x3c>)
 8002b30:	1b64      	subs	r4, r4, r5
 8002b32:	10a4      	asrs	r4, r4, #2
 8002b34:	42a6      	cmp	r6, r4
 8002b36:	d109      	bne.n	8002b4c <__libc_init_array+0x24>
 8002b38:	f000 f822 	bl	8002b80 <_init>
 8002b3c:	2600      	movs	r6, #0
 8002b3e:	4d0a      	ldr	r5, [pc, #40]	; (8002b68 <__libc_init_array+0x40>)
 8002b40:	4c0a      	ldr	r4, [pc, #40]	; (8002b6c <__libc_init_array+0x44>)
 8002b42:	1b64      	subs	r4, r4, r5
 8002b44:	10a4      	asrs	r4, r4, #2
 8002b46:	42a6      	cmp	r6, r4
 8002b48:	d105      	bne.n	8002b56 <__libc_init_array+0x2e>
 8002b4a:	bd70      	pop	{r4, r5, r6, pc}
 8002b4c:	f855 3b04 	ldr.w	r3, [r5], #4
 8002b50:	4798      	blx	r3
 8002b52:	3601      	adds	r6, #1
 8002b54:	e7ee      	b.n	8002b34 <__libc_init_array+0xc>
 8002b56:	f855 3b04 	ldr.w	r3, [r5], #4
 8002b5a:	4798      	blx	r3
 8002b5c:	3601      	adds	r6, #1
 8002b5e:	e7f2      	b.n	8002b46 <__libc_init_array+0x1e>
 8002b60:	08002bc0 	.word	0x08002bc0
 8002b64:	08002bc0 	.word	0x08002bc0
 8002b68:	08002bc0 	.word	0x08002bc0
 8002b6c:	08002bc4 	.word	0x08002bc4

08002b70 <memset>:
 8002b70:	4603      	mov	r3, r0
 8002b72:	4402      	add	r2, r0
 8002b74:	4293      	cmp	r3, r2
 8002b76:	d100      	bne.n	8002b7a <memset+0xa>
 8002b78:	4770      	bx	lr
 8002b7a:	f803 1b01 	strb.w	r1, [r3], #1
 8002b7e:	e7f9      	b.n	8002b74 <memset+0x4>

08002b80 <_init>:
 8002b80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b82:	bf00      	nop
 8002b84:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002b86:	bc08      	pop	{r3}
 8002b88:	469e      	mov	lr, r3
 8002b8a:	4770      	bx	lr

08002b8c <_fini>:
 8002b8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b8e:	bf00      	nop
 8002b90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002b92:	bc08      	pop	{r3}
 8002b94:	469e      	mov	lr, r3
 8002b96:	4770      	bx	lr
